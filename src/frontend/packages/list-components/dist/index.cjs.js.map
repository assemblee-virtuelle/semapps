{"version":3,"file":"index.cjs.js","sources":["../src/ChipList.js","../src/GridList.js","../src/MasonryList.js","../src/ReferenceFilter.js","../../../node_modules/clsx/dist/clsx.m.js","../src/ReferenceFilterTree.js","../src/MultiViewsList/ListViewContext.js","../src/MultiViewsList/ViewsButtons.js","../src/MultiViewsList/ListActionsWithViews.js","../src/MultiViewsList/MultiViewsList.js"],"sourcesContent":["import React from 'react';\nimport {\n  ChipField,\n  useResourceContext,\n  useListContext,\n  sanitizeListRestProps,\n  linkToRecord,\n  RecordContextProvider,\n  Link\n} from 'react-admin';\nimport { makeStyles, LinearProgress } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  link: {\n    textDecoration: 'none',\n    maxWidth: '100%'\n  },\n  chipField: {\n    maxWidth: '100%'\n  },\n  addIcon: {\n    cursor: 'pointer',\n    fontSize: 35,\n    position: 'relative',\n    top: -2,\n    left: -2\n  },\n  launchIcon: {\n    width: 16,\n    paddingRight: 6,\n    marginLeft: -10\n  }\n}));\n\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ChipList = props => {\n  const {\n    classes: classesOverride,\n    className,\n    children,\n    linkType = 'edit',\n    component = 'div',\n    primaryText,\n    appendLink,\n    externalLinks = false,\n    ...rest\n  } = props;\n  const { ids, data, loaded, basePath } = useListContext(props);\n  const resource = useResourceContext(props);\n  const getExternalLink = useGetExternalLink(externalLinks);\n\n  const classes = useStyles(props);\n  const Component = component;\n\n  if (loaded === false) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Component className={classes.root} {...sanitizeListRestProps(rest)}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        if (externalLink) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <a\n                href={externalLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.link}\n                onClick={stopPropagation}\n              >\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                  // Required to display the delete icon\n                  onDelete={handleClick}\n                />\n              </a>\n            </RecordContextProvider>\n          );\n        } else if (linkType) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <Link className={classes.link} to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                />\n              </Link>\n            </RecordContextProvider>\n          );\n        } else {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <ChipField\n                record={data[id]}\n                resource={resource}\n                basePath={basePath}\n                source={primaryText}\n                className={classes.chipField}\n                color=\"secondary\"\n                // Workaround to force ChipField to be clickable\n                onClick={handleClick}\n              />\n            </RecordContextProvider>\n          );\n        }\n      })}\n      {appendLink && <AddCircleIcon color=\"primary\" className={classes.addIcon} onClick={appendLink} />}\n    </Component>\n  );\n};\n\nexport default ChipList;\n","import * as React from 'react';\nimport { useListContext, linkToRecord, Link, RecordContextProvider } from 'react-admin';\nimport { Grid } from '@material-ui/core';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst GridList = ({ children, linkType, externalLinks, spacing, xs, sm, md, lg, xl }) => {\n  const { ids, data, basePath } = useListContext();\n  const getExternalLink = useGetExternalLink(externalLinks);\n  return (\n    <Grid container spacing={spacing}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        let child;\n\n        if (externalLink) {\n          child = (\n            <a href={externalLink} target=\"_blank\" rel=\"noopener noreferrer\" onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                externalLink: true,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </a>\n          );\n        } else if (linkType) {\n          child = (\n            <Link to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </Link>\n          );\n        } else {\n          child = React.cloneElement(React.Children.only(children), {\n            record: data[id],\n            basePath: children.props.basePath || basePath\n          });\n        }\n\n        return (\n          <Grid item key={id} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\n            <RecordContextProvider value={data[id]} key={id}>\n              {child}\n            </RecordContextProvider>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nGridList.defaultProps = {\n  xs: 6,\n  spacing: 3,\n  linkType: 'edit',\n  externalLinks: false\n};\n\nexport default GridList;\n","import React from 'react';\nimport { useListContext, Link, linkToRecord } from 'react-admin';\nimport { makeStyles, Card, CardActionArea, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport Masonry from 'react-masonry-css';\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    display: 'flex',\n    marginLeft: -20,\n    marginBottom: -20,\n    width: 'auto'\n  },\n  column: {\n    paddingLeft: 20,\n    backgroundClip: 'padding-box'\n  },\n  card: {\n    marginBottom: 20\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  }\n}));\n\n/**\n * @example\n * <List component=\"div\" perPage={50} {...props}>\n *   <MasonryList\n *     image={record => record.image}\n *     content={record => (\n *       <>\n *         <Typography variant=\"subtitle1\">{record.title}</Typography>\n *         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{record.description}</Typography>\n *       </>\n *     )}\n *     linkType=\"show\"\n *   />\n * </List>\n */\nconst MasonryList = ({ image, content, actions, breakpointCols, linkType }) => {\n  const classes = useStyles();\n  const { ids, data, basePath } = useListContext();\n  return (\n    <Masonry breakpointCols={breakpointCols} className={classes.grid} columnClassName={classes.column}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const imageUrl = typeof image === 'function' ? image(data[id]) : image;\n        return (\n          <Card key={id} className={classes.card}>\n            <Link to={linkToRecord(basePath, id) + '/' + linkType}>\n              <CardActionArea>\n                {imageUrl && <CardMedia className={classes.media} image={imageUrl} />}\n                {content && <CardContent>{content(data[id])}</CardContent>}\n              </CardActionArea>\n            </Link>\n            {actions && (\n              <CardActions>\n                {actions.map(action => React.createElement(action, { record: data[id], basePath }))}\n              </CardActions>\n            )}\n          </Card>\n        );\n      })}\n    </Masonry>\n  );\n};\n\nMasonryList.defaultProps = {\n  breakpointCols: { default: 3, 1050: 2, 700: 1 },\n  linkType: 'edit'\n};\n\nexport default MasonryList;\n","import React, { useEffect } from 'react';\nimport { FilterList, FilterListItem, useGetList, getResources, useResourceContext, useListContext } from 'react-admin';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useContainers, useDataModel } from '@semapps/semantic-data-provider';\n\n/**\n * @example\n * const FilterAside = () => (\n *   <Card>\n *     <CardContent>\n *       <FilterLiveSearch source=\"pair:label\" />\n *       <ReferenceFilter reference=\"Theme\" source=\"pair:hasTopic\" inverseSource=\"pair:topicOf\" />\n *       <ReferenceFilter reference=\"Skill\" source=\"pair:offers\" inverseSource=\"pair:offeredBy\" />\n *     </CardContent>\n *   </Card>\n * );\n */\n\nconst ReferenceFilterCounter = ({ source, id }) => {\n  const resourceContext = useResourceContext();\n  const { data } = useGetList(resourceContext);\n  return (\n    <>\n      &nbsp;\n      <span className=\"filter-count\">{'(' + Object.values(data).filter(d => ([].concat(d[source])).includes(id)).length + ')'}</span>\n    </>\n  );\n};\n\nconst ReferenceFilter = ({ reference, source, inverseSource, limit, sort, filter, label, icon, showCounters }) => {\n  const { data, ids } = useGetList(reference, { page: 1, perPage: limit }, sort, filter);\n  const resources = useSelector(getResources, shallowEqual);\n  const currentResource = resources.filter(r => r?.name === reference)[0];\n  const resourceContext = useResourceContext();\n  const resourceContextDataModel = useDataModel(resourceContext);\n  const resourceContextContainers = useContainers(resourceContext);\n  \n  const {\n    displayedFilters,\n    filterValues,\n    setFilters,\n    hideFilter\n  } = useListContext();\n  useEffect(() => {\n    // Needed when filter item is active and its last relation is removed\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n    if (! params.filter) {\n      setFilters({});\n    }\n  }, []);\n  \n  const itemIsUsed = (id) => {\n    if (!inverseSource) {\n      return true;\n    }\n    if (!resourceContextContainers || !data || !data[id][inverseSource]) {\n      return false;\n    }\n    let itemIsUsed = false;    \n    Object.values(resourceContextContainers).forEach(value => {\n      value.forEach(containerUrl => {\n        [].concat(data[id][inverseSource]).forEach(inverseSourceData => {\n          if (inverseSourceData.startsWith(containerUrl)) {\n            itemIsUsed = true;\n          }\n        })\n      })\n    });\n    return itemIsUsed;\n  }\n  \n  return (\n    <FilterList label={label || currentResource.options.label} icon={icon || React.createElement(currentResource.icon)}>\n      {ids\n        .filter(id => itemIsUsed(id))\n        .map(id => (\n          <FilterListItem\n            key={id}\n            label={\n              <span className=\"filter-label\">\n                {data[id]['pair:label']}\n                {showCounters && <ReferenceFilterCounter source={source} id={id} />}\n              </span>\n            }\n            value={{ [source]: id }}\n          />\n        ))}\n    </FilterList>\n  );\n};\n\nReferenceFilter.defaultProps = {\n  limit: 25,\n  showCounters: true\n};\n\nexport default ReferenceFilter;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from 'react';\nimport { useGetList } from 'react-admin';\nimport {TreeItem, TreeView, useTreeItem} from '@mui/lab';\nimport { useListFilterContext } from 'ra-core';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport LabelIcon from '@mui/icons-material/Label';\nimport { IconButton } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport clsx from 'clsx';\nimport Typography from '@mui/material/Typography';\n\n/**\n * @example\n * const FilterAside = () => (\n *   <Card>\n *     <CardContent>\n *       <FilterLiveSearch source=\"pair:label\" />\n *       <ReferenceFilter reference=\"Theme\" source=\"pair:broader\" label=\"pair:label\"  />\n *     </CardContent>\n *   </Card>\n * );\n */\n\n\nfunction GenerateTreeItemFromNarrower( source, label, themeList, narrower) {\n  let narrowerChild = {};\n  let isLastNarrower = false;\n  return (\n    themeList.map(function(theme) { \n      if (theme != undefined) {\n        if (theme[source] == narrower[\"id\"]) {\n          themeList.map(function(t) {\n            if (t[source] != undefined && t[source] == theme[\"id\"]) {\n              isLastNarrower = true;\n              narrowerChild = t;\n            }\n          })\n          return (\n          <CustomTreeItem key={theme[\"id\"]} nodeId={theme[\"id\"]} label={theme[label]} >\n            {isLastNarrower ? GenerateTreeItemFromNarrower(source, label, themeList, theme) : null }\n          </CustomTreeItem>\n          )\n        }\n      }\n    })\n  )\n}\n\nconst CustomContent = React.forwardRef(function CustomContent(props, ref) {\n  const {\n    classes,\n    className,\n    label,\n    nodeId,\n    icon: iconProp,\n    expansionIcon,\n    displayIcon,\n  } = props;\n\n  const {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection,\n  } = useTreeItem(nodeId);\n\n  const icon = iconProp || expansionIcon || displayIcon;\n\n  const handleMouseDown = (event) => {\n    preventSelection(event);\n  };\n\n  const handleExpansionClick = (event) => {\n    handleExpansion(event);\n  };\n\n  const handleSelectionClick = (event) => {\n    handleSelection(event);\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      className={clsx(className, classes.root, {\n        [classes.expanded]: expanded,\n        [classes.selected]: selected,\n        [classes.focused]: focused,\n        [classes.disabled]: disabled,\n      })}\n      onMouseDown={handleMouseDown}\n      ref={ref}\n    >\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n      <div onClick={handleExpansionClick} className={classes.iconContainer}>\n        {icon}\n      </div>\n      <Typography\n        onClick={handleSelectionClick}\n        component=\"div\"\n        className={classes.label}\n      >\n        {label}\n      </Typography>\n    </div>\n  );\n});\n\n\nfunction CustomTreeItem(props) {\n  return <TreeItem ContentComponent={CustomContent} {...props} />;\n}\n\nconst ReferenceFilterTree = ({ reference, source, label, limit, sort, filter }) => {\n  const { data } = useGetList(reference, { page: 1, perPage: limit }, sort, filter);\n  const { filterValues, setFilters } = useListFilterContext();\n  let routeTree = [], listTheme = [], isThemeSelected = false;\n\n  for (const theme in data) {\n    if (data[theme]['pair:broader'] == undefined ) {\n      routeTree.push(data[theme]);\n    }\n    listTheme = listTheme.concat(data[theme]);\n  }\n\n  function deleteFilterTheme() {\n    const newFilterValues = Object.assign({}, filterValues);\n    delete newFilterValues.sparqlWhere;\n    setFilters(newFilterValues, null, false);\n    isThemeSelected = false\n  }\n\n  const handleSelect = (event, nodes) => {\n    const sparqlWhere = {\n      \"type\": \"bgp\",\n      \"triples\": nodes.map((node) => {\n        return {\n          subject: {\n            termType: 'Variable',\n            value: 's1',\n          },\n          predicate: {\n            termType: 'NamedNode',\n            value: \"http://virtual-assembly.org/ontologies/pair#hasTopic\",\n          },\n          object: {\n            termType: 'NamedNode',\n            value: node,\n          },\n        };\n      }),\n    }\n\n    const query = JSON.stringify(sparqlWhere);\n    const encodedQuery = encodeURIComponent(query);\n    setFilters({...filterValues, \"sparqlWhere\": encodedQuery })\n\n  }\n  console.log(filterValues)\n  if (filterValues.sparqlWhere != undefined)\n    isThemeSelected = true\n\n  return (\n    <div >\n      <IconButton size=\"small\" edge=\"start\">\n        <LabelIcon style={{ color: 'black',  }} />\n      </IconButton>\n      Thèmes\n      {isThemeSelected ? <IconButton onClick={deleteFilterTheme} size=\"small\">\n        <CancelIcon />\n      </IconButton> : null}\n      <TreeView\n        multiSelect\n        onNodeSelect={handleSelect}\n        aria-label=\"icon expansion\"\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n      >\n        {routeTree.map((route) =>\n          <CustomTreeItem nodeId={route[\"id\"]} label={route[label]} key={route[\"id\"]}>\n            {GenerateTreeItemFromNarrower(source, label, listTheme, route)}\n          </CustomTreeItem>\n        )}\n      </TreeView>\n    </div>\n  )\n};\n\nReferenceFilterTree.defaultProps = {\n  limit: 25,\n  showCounters: true\n};\n\nexport default ReferenceFilterTree;\n\n","import React from 'react';\n\nconst ListViewContext = React.createContext({ views: null, currentView: null, setView: () => null });\n\nexport default ListViewContext;\n","import React from 'react';\nimport { Button, Link } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListViewContext from './ListViewContext';\n\nconst ViewsButtons = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const { views, currentView, setView } = React.useContext(ListViewContext);\n  return views\n    ? Object.entries(views)\n        .filter(([key]) => key !== currentView)\n        .map(([key, view]) => {\n          query.set('view', key);\n          query.set('page', 1);\n          query.set('perPage', view.perPage);\n          if (view.sort) {\n            query.set('sort', view.sort.field);\n            query.set('order', view.sort.order);\n          }\n          return (\n            <Link key={key} to={'?' + query.toString()}>\n              <Button onClick={() => setView(key)} label={view.label}>\n                {React.createElement(view.icon)}\n              </Button>\n            </Link>\n          );\n        })\n    : null;\n};\n\nexport default ViewsButtons;\n","import React from 'react';\nimport { CreateButton, ExportButton, useResourceDefinition, TopToolbar } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport ViewsButtons from './ViewsButtons';\n\nconst ListActionsWithViews = ({\n  bulkActions,\n  basePath,\n  currentSort,\n  displayedFilters,\n  exporter,\n  filters,\n  filterValues,\n  onUnselectItems,\n  resource,\n  selectedIds,\n  showFilter,\n  total,\n  ...rest\n}) => {\n  const xs = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const resourceDefinition = useResourceDefinition(rest);\n  return (\n    <TopToolbar>\n      <ViewsButtons />\n      {filters &&\n        React.cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button'\n        })}\n      {resourceDefinition.hasCreate && <CreateButton basePath={basePath} />}\n      {!xs && exporter !== false && (\n        <ExportButton\n          disabled={total === 0}\n          resource={resource}\n          sort={currentSort}\n          filter={filterValues}\n          exporter={exporter}\n        />\n      )}\n      {bulkActions &&\n        React.cloneElement(bulkActions, {\n          basePath,\n          filterValues,\n          resource,\n          selectedIds,\n          onUnselectItems\n        })}\n    </TopToolbar>\n  );\n};\n\nexport default ListActionsWithViews;\n","import React, { useState } from 'react';\nimport { List } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListActionsWithViews from './ListActionsWithViews';\nimport ListViewContext from './ListViewContext';\n\nconst MultiViewsList = ({ children, actions, views, ListComponent, ...otherProps }) => {\n  const query = new URLSearchParams(useLocation().search);\n  const initialView = query.has('view') ? query.get('view') : Object.keys(views)[0];\n  const [currentView, setView] = useState(initialView);\n  return (\n    <ListViewContext.Provider value={{ views, currentView, setView }}>\n      <ListComponent\n        actions={actions}\n        pagination={views[currentView].pagination}\n        // Set initial values, but use the query string to change these values to avoid a complete refresh\n        perPage={views[initialView].perPage}\n        sort={views[initialView].sort}\n        {...otherProps}\n      >\n        {views[currentView].list}\n      </ListComponent>\n    </ListViewContext.Provider>\n  );\n};\n\nMultiViewsList.defaultProps = {\n  actions: <ListActionsWithViews />,\n  ListComponent: List\n};\n\nexport default MultiViewsList;\n"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","link","textDecoration","maxWidth","chipField","addIcon","cursor","fontSize","position","top","left","launchIcon","width","paddingRight","marginLeft","stopPropagation","e","handleClick","GridList","_ref","children","linkType","externalLinks","spacing","xs","sm","md","lg","xl","_useListContext","useListContext","ids","data","basePath","getExternalLink","useGetExternalLink","React","Grid","container","map","id","child","externalLink","createElement","href","target","rel","onClick","cloneElement","Children","only","record","props","Link","to","linkToRecord","item","key","RecordContextProvider","value","defaultProps","grid","marginBottom","column","paddingLeft","backgroundClip","card","media","height","paddingTop","MasonryList","image","content","actions","breakpointCols","classes","Masonry","className","columnClassName","imageUrl","Card","CardActionArea","CardMedia","CardContent","CardActions","action","default","1050","700","ReferenceFilterCounter","source","resourceContext","useResourceContext","useGetList","Fragment","Object","values","filter","d","concat","includes","length","ReferenceFilter","_ref2","reference","inverseSource","limit","sort","label","icon","showCounters","page","perPage","currentResource","useSelector","getResources","shallowEqual","r","name","useDataModel","resourceContextContainers","useContainers","displayedFilters","filterValues","setFilters","hideFilter","useEffect","urlSearchParams","URLSearchParams","window","location","search","fromEntries","entries","FilterList","options","itemIsUsed","forEach","containerUrl","inverseSourceData","startsWith","FilterListItem","_defineProperty","t","f","n","Array","isArray","clsx","arguments","CustomContent","forwardRef","ref","_clsx","nodeId","iconProp","expansionIcon","displayIcon","useTreeItem","disabled","expanded","selected","focused","handleExpansion","handleSelection","preventSelection","onMouseDown","event","iconContainer","Typography","component","CustomTreeItem","TreeItem","_extends","ContentComponent","ReferenceFilterTree","_useListFilterContext","useListFilterContext","routeTree","listTheme","isThemeSelected","undefined","push","console","log","sparqlWhere","IconButton","size","edge","LabelIcon","style","color","newFilterValues","assign","CancelIcon","TreeView","multiSelect","onNodeSelect","nodes","type","triples","node","subject","termType","predicate","object","query","JSON","stringify","encodedQuery","encodeURIComponent","aria-label","defaultCollapseIcon","ExpandMoreIcon","defaultExpandIcon","ChevronRightIcon","route","GenerateTreeItemFromNarrower","themeList","narrower","isLastNarrower","ListViewContext","createContext","views","currentView","setView","ViewsButtons","useLocation","_React$useContext","useContext","_slicedToArray","_ref3","_ref4","view","set","field","order","toString","Button","ListActionsWithViews","bulkActions","currentSort","exporter","filters","onUnselectItems","resource","selectedIds","showFilter","total","rest","_objectWithoutProperties","_excluded","useMediaQuery","breakpoints","down","resourceDefinition","useResourceDefinition","TopToolbar","context","hasCreate","CreateButton","ExportButton","MultiViewsList","ListComponent","otherProps","initialView","has","get","keys","_useState2","useState","Provider","pagination","list","List","_props$linkType","_props$component","primaryText","appendLink","_props$externalLinks","loaded","Component","LinearProgress","sanitizeListRestProps","ChipField","deleteIcon","LaunchIcon","onDelete","AddCircleIcon"],"mappings":"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"}