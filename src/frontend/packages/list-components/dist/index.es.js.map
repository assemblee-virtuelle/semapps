{"version":3,"file":"index.es.js","sources":["../src/ChipList.js","../src/GridList.js","../src/MasonryList.js","../src/ReferenceFilter.js","../../../node_modules/clsx/dist/clsx.m.js","../src/ReferenceFilterTree.js","../src/MultiViewsList/ListViewContext.js","../src/MultiViewsList/ViewsButtons.js","../src/MultiViewsList/ListActionsWithViews.js","../src/MultiViewsList/MultiViewsList.js"],"sourcesContent":["import React from 'react';\nimport {\n  ChipField,\n  useResourceContext,\n  useListContext,\n  sanitizeListRestProps,\n  linkToRecord,\n  RecordContextProvider,\n  Link\n} from 'react-admin';\nimport { makeStyles, LinearProgress } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  link: {\n    textDecoration: 'none',\n    maxWidth: '100%'\n  },\n  chipField: {\n    maxWidth: '100%'\n  },\n  addIcon: {\n    cursor: 'pointer',\n    fontSize: 35,\n    position: 'relative',\n    top: -2,\n    left: -2\n  },\n  launchIcon: {\n    width: 16,\n    paddingRight: 6,\n    marginLeft: -10\n  }\n}));\n\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ChipList = props => {\n  const {\n    classes: classesOverride,\n    className,\n    children,\n    linkType = 'edit',\n    component = 'div',\n    primaryText,\n    appendLink,\n    externalLinks = false,\n    ...rest\n  } = props;\n  const { ids, data, loaded, basePath } = useListContext(props);\n  const resource = useResourceContext(props);\n  const getExternalLink = useGetExternalLink(externalLinks);\n\n  const classes = useStyles(props);\n  const Component = component;\n\n  if (loaded === false) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Component className={classes.root} {...sanitizeListRestProps(rest)}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        if (externalLink) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <a\n                href={externalLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.link}\n                onClick={stopPropagation}\n              >\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                  // Required to display the delete icon\n                  onDelete={handleClick}\n                />\n              </a>\n            </RecordContextProvider>\n          );\n        } else if (linkType) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <Link className={classes.link} to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                />\n              </Link>\n            </RecordContextProvider>\n          );\n        } else {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <ChipField\n                record={data[id]}\n                resource={resource}\n                basePath={basePath}\n                source={primaryText}\n                className={classes.chipField}\n                color=\"secondary\"\n                // Workaround to force ChipField to be clickable\n                onClick={handleClick}\n              />\n            </RecordContextProvider>\n          );\n        }\n      })}\n      {appendLink && <AddCircleIcon color=\"primary\" className={classes.addIcon} onClick={appendLink} />}\n    </Component>\n  );\n};\n\nexport default ChipList;\n","import * as React from 'react';\nimport { useListContext, linkToRecord, Link, RecordContextProvider } from 'react-admin';\nimport { Grid } from '@material-ui/core';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst GridList = ({ children, linkType, externalLinks, spacing, xs, sm, md, lg, xl }) => {\n  const { ids, data, basePath } = useListContext();\n  const getExternalLink = useGetExternalLink(externalLinks);\n  return (\n    <Grid container spacing={spacing}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        let child;\n\n        if (externalLink) {\n          child = (\n            <a href={externalLink} target=\"_blank\" rel=\"noopener noreferrer\" onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                externalLink: true,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </a>\n          );\n        } else if (linkType) {\n          child = (\n            <Link to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </Link>\n          );\n        } else {\n          child = React.cloneElement(React.Children.only(children), {\n            record: data[id],\n            basePath: children.props.basePath || basePath\n          });\n        }\n\n        return (\n          <Grid item key={id} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\n            <RecordContextProvider value={data[id]} key={id}>\n              {child}\n            </RecordContextProvider>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nGridList.defaultProps = {\n  xs: 6,\n  spacing: 3,\n  linkType: 'edit',\n  externalLinks: false\n};\n\nexport default GridList;\n","import React from 'react';\nimport { useListContext, Link, linkToRecord } from 'react-admin';\nimport { makeStyles, Card, CardActionArea, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport Masonry from 'react-masonry-css';\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    display: 'flex',\n    marginLeft: -20,\n    marginBottom: -20,\n    width: 'auto'\n  },\n  column: {\n    paddingLeft: 20,\n    backgroundClip: 'padding-box'\n  },\n  card: {\n    marginBottom: 20\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  }\n}));\n\n/**\n * @example\n * <List component=\"div\" perPage={50} {...props}>\n *   <MasonryList\n *     image={record => record.image}\n *     content={record => (\n *       <>\n *         <Typography variant=\"subtitle1\">{record.title}</Typography>\n *         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{record.description}</Typography>\n *       </>\n *     )}\n *     linkType=\"show\"\n *   />\n * </List>\n */\nconst MasonryList = ({ image, content, actions, breakpointCols, linkType }) => {\n  const classes = useStyles();\n  const { ids, data, basePath } = useListContext();\n  return (\n    <Masonry breakpointCols={breakpointCols} className={classes.grid} columnClassName={classes.column}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const imageUrl = typeof image === 'function' ? image(data[id]) : image;\n        return (\n          <Card key={id} className={classes.card}>\n            <Link to={linkToRecord(basePath, id) + '/' + linkType}>\n              <CardActionArea>\n                {imageUrl && <CardMedia className={classes.media} image={imageUrl} />}\n                {content && <CardContent>{content(data[id])}</CardContent>}\n              </CardActionArea>\n            </Link>\n            {actions && (\n              <CardActions>\n                {actions.map(action => React.createElement(action, { record: data[id], basePath }))}\n              </CardActions>\n            )}\n          </Card>\n        );\n      })}\n    </Masonry>\n  );\n};\n\nMasonryList.defaultProps = {\n  breakpointCols: { default: 3, 1050: 2, 700: 1 },\n  linkType: 'edit'\n};\n\nexport default MasonryList;\n","import React, { useEffect } from 'react';\nimport { FilterList, FilterListItem, useGetList, getResources, useResourceContext, useListContext } from 'react-admin';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { useContainers, useDataModel } from '@semapps/semantic-data-provider';\n\n/**\n * @example\n * const FilterAside = () => (\n *   <Card>\n *     <CardContent>\n *       <FilterLiveSearch source=\"pair:label\" />\n *       <ReferenceFilter reference=\"Theme\" source=\"pair:hasTopic\" inverseSource=\"pair:topicOf\" />\n *       <ReferenceFilter reference=\"Skill\" source=\"pair:offers\" inverseSource=\"pair:offeredBy\" />\n *     </CardContent>\n *   </Card>\n * );\n */\n\nconst ReferenceFilterCounter = ({ source, id }) => {\n  const resourceContext = useResourceContext();\n  const { data } = useGetList(resourceContext);\n  return (\n    <>\n      &nbsp;\n      <span className=\"filter-count\">{'(' + Object.values(data).filter(d => ([].concat(d[source])).includes(id)).length + ')'}</span>\n    </>\n  );\n};\n\nconst ReferenceFilter = ({ reference, source, inverseSource, limit, sort, filter, label, icon, showCounters }) => {\n  const { data, ids } = useGetList(reference, { page: 1, perPage: limit }, sort, filter);\n  const resources = useSelector(getResources, shallowEqual);\n  const currentResource = resources.filter(r => r?.name === reference)[0];\n  const resourceContext = useResourceContext();\n  const resourceContextDataModel = useDataModel(resourceContext);\n  const resourceContextContainers = useContainers(resourceContext);\n  \n  const {\n    displayedFilters,\n    filterValues,\n    setFilters,\n    hideFilter\n  } = useListContext();\n  useEffect(() => {\n    // Needed when filter item is active and its last relation is removed\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n    if (! params.filter) {\n      setFilters({});\n    }\n  }, []);\n  \n  const itemIsUsed = (id) => {\n    if (!inverseSource) {\n      return true;\n    }\n    if (!resourceContextContainers || !data || !data[id][inverseSource]) {\n      return false;\n    }\n    let itemIsUsed = false;    \n    Object.values(resourceContextContainers).forEach(value => {\n      value.forEach(containerUrl => {\n        [].concat(data[id][inverseSource]).forEach(inverseSourceData => {\n          if (inverseSourceData.startsWith(containerUrl)) {\n            itemIsUsed = true;\n          }\n        })\n      })\n    });\n    return itemIsUsed;\n  }\n  \n  return (\n    <FilterList label={label || currentResource.options.label} icon={icon || React.createElement(currentResource.icon)}>\n      {ids\n        .filter(id => itemIsUsed(id))\n        .map(id => (\n          <FilterListItem\n            key={id}\n            label={\n              <span className=\"filter-label\">\n                {data[id]['pair:label']}\n                {showCounters && <ReferenceFilterCounter source={source} id={id} />}\n              </span>\n            }\n            value={{ [source]: id }}\n          />\n        ))}\n    </FilterList>\n  );\n};\n\nReferenceFilter.defaultProps = {\n  limit: 25,\n  showCounters: true\n};\n\nexport default ReferenceFilter;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React from 'react';\nimport { useGetList } from 'react-admin';\nimport {TreeItem, TreeView, useTreeItem} from '@mui/lab';\nimport { useListFilterContext } from 'ra-core';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport LabelIcon from '@mui/icons-material/Label';\nimport { IconButton } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport clsx from 'clsx';\nimport Typography from '@mui/material/Typography';\n\n/**\n * @example\n * const FilterAside = () => (\n *   <Card>\n *     <CardContent>\n *       <FilterLiveSearch source=\"pair:label\" />\n *       <ReferenceFilter reference=\"Theme\" source=\"pair:broader\" label=\"pair:label\"  />\n *     </CardContent>\n *   </Card>\n * );\n */\n\n\nfunction GenerateTreeItemFromNarrower( source, label, themeList, narrower) {\n  let narrowerChild = {};\n  let isLastNarrower = false;\n  return (\n    themeList.map(function(theme) { \n      if (theme != undefined) {\n        if (theme[source] == narrower[\"id\"]) {\n          themeList.map(function(t) {\n            if (t[source] != undefined && t[source] == theme[\"id\"]) {\n              isLastNarrower = true;\n              narrowerChild = t;\n            }\n          })\n          return (\n          <CustomTreeItem key={theme[\"id\"]} nodeId={theme[\"id\"]} label={theme[label]} >\n            {isLastNarrower ? GenerateTreeItemFromNarrower(source, label, themeList, theme) : null }\n          </CustomTreeItem>\n          )\n        }\n      }\n    })\n  )\n}\n\nconst CustomContent = React.forwardRef(function CustomContent(props, ref) {\n  const {\n    classes,\n    className,\n    label,\n    nodeId,\n    icon: iconProp,\n    expansionIcon,\n    displayIcon,\n  } = props;\n\n  const {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection,\n  } = useTreeItem(nodeId);\n\n  const icon = iconProp || expansionIcon || displayIcon;\n\n  const handleMouseDown = (event) => {\n    preventSelection(event);\n  };\n\n  const handleExpansionClick = (event) => {\n    handleExpansion(event);\n  };\n\n  const handleSelectionClick = (event) => {\n    handleSelection(event);\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      className={clsx(className, classes.root, {\n        [classes.expanded]: expanded,\n        [classes.selected]: selected,\n        [classes.focused]: focused,\n        [classes.disabled]: disabled,\n      })}\n      onMouseDown={handleMouseDown}\n      ref={ref}\n    >\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n      <div onClick={handleExpansionClick} className={classes.iconContainer}>\n        {icon}\n      </div>\n      <Typography\n        onClick={handleSelectionClick}\n        component=\"div\"\n        className={classes.label}\n      >\n        {label}\n      </Typography>\n    </div>\n  );\n});\n\n\nfunction CustomTreeItem(props) {\n  return <TreeItem ContentComponent={CustomContent} {...props} />;\n}\n\nconst ReferenceFilterTree = ({ reference, source, label, limit, sort, filter }) => {\n  const { data } = useGetList(reference, { page: 1, perPage: limit }, sort, filter);\n  const { filterValues, setFilters } = useListFilterContext();\n  let routeTree = [], listTheme = [], isThemeSelected = false;\n\n  for (const theme in data) {\n    if (data[theme]['pair:broader'] == undefined ) {\n      routeTree.push(data[theme]);\n    }\n    listTheme = listTheme.concat(data[theme]);\n  }\n\n  function deleteFilterTheme() {\n    const newFilterValues = Object.assign({}, filterValues);\n    delete newFilterValues.sparqlWhere;\n    setFilters(newFilterValues, null, false);\n    isThemeSelected = false\n  }\n\n  const handleSelect = (event, nodes) => {\n    const sparqlWhere = {\n      \"type\": \"bgp\",\n      \"triples\": nodes.map((node) => {\n        return {\n          subject: {\n            termType: 'Variable',\n            value: 's1',\n          },\n          predicate: {\n            termType: 'NamedNode',\n            value: \"http://virtual-assembly.org/ontologies/pair#hasTopic\",\n          },\n          object: {\n            termType: 'NamedNode',\n            value: node,\n          },\n        };\n      }),\n    }\n\n    const query = JSON.stringify(sparqlWhere);\n    const encodedQuery = encodeURIComponent(query);\n    setFilters({...filterValues, \"sparqlWhere\": encodedQuery })\n\n  }\n  console.log(filterValues)\n  if (filterValues.sparqlWhere != undefined)\n    isThemeSelected = true\n\n  return (\n    <div >\n      <IconButton size=\"small\" edge=\"start\">\n        <LabelIcon style={{ color: 'black',  }} />\n      </IconButton>\n      Thèmes\n      {isThemeSelected ? <IconButton onClick={deleteFilterTheme} size=\"small\">\n        <CancelIcon />\n      </IconButton> : null}\n      <TreeView\n        multiSelect\n        onNodeSelect={handleSelect}\n        aria-label=\"icon expansion\"\n        defaultCollapseIcon={<ExpandMoreIcon />}\n        defaultExpandIcon={<ChevronRightIcon />}\n      >\n        {routeTree.map((route) =>\n          <CustomTreeItem nodeId={route[\"id\"]} label={route[label]} key={route[\"id\"]}>\n            {GenerateTreeItemFromNarrower(source, label, listTheme, route)}\n          </CustomTreeItem>\n        )}\n      </TreeView>\n    </div>\n  )\n};\n\nReferenceFilterTree.defaultProps = {\n  limit: 25,\n  showCounters: true\n};\n\nexport default ReferenceFilterTree;\n\n","import React from 'react';\n\nconst ListViewContext = React.createContext({ views: null, currentView: null, setView: () => null });\n\nexport default ListViewContext;\n","import React from 'react';\nimport { Button, Link } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListViewContext from './ListViewContext';\n\nconst ViewsButtons = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const { views, currentView, setView } = React.useContext(ListViewContext);\n  return views\n    ? Object.entries(views)\n        .filter(([key]) => key !== currentView)\n        .map(([key, view]) => {\n          query.set('view', key);\n          query.set('page', 1);\n          query.set('perPage', view.perPage);\n          if (view.sort) {\n            query.set('sort', view.sort.field);\n            query.set('order', view.sort.order);\n          }\n          return (\n            <Link key={key} to={'?' + query.toString()}>\n              <Button onClick={() => setView(key)} label={view.label}>\n                {React.createElement(view.icon)}\n              </Button>\n            </Link>\n          );\n        })\n    : null;\n};\n\nexport default ViewsButtons;\n","import React from 'react';\nimport { CreateButton, ExportButton, useResourceDefinition, TopToolbar } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\nimport ViewsButtons from './ViewsButtons';\n\nconst ListActionsWithViews = ({\n  bulkActions,\n  basePath,\n  currentSort,\n  displayedFilters,\n  exporter,\n  filters,\n  filterValues,\n  onUnselectItems,\n  resource,\n  selectedIds,\n  showFilter,\n  total,\n  ...rest\n}) => {\n  const xs = useMediaQuery(theme => theme.breakpoints.down('xs'));\n  const resourceDefinition = useResourceDefinition(rest);\n  return (\n    <TopToolbar>\n      <ViewsButtons />\n      {filters &&\n        React.cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button'\n        })}\n      {resourceDefinition.hasCreate && <CreateButton basePath={basePath} />}\n      {!xs && exporter !== false && (\n        <ExportButton\n          disabled={total === 0}\n          resource={resource}\n          sort={currentSort}\n          filter={filterValues}\n          exporter={exporter}\n        />\n      )}\n      {bulkActions &&\n        React.cloneElement(bulkActions, {\n          basePath,\n          filterValues,\n          resource,\n          selectedIds,\n          onUnselectItems\n        })}\n    </TopToolbar>\n  );\n};\n\nexport default ListActionsWithViews;\n","import React, { useState } from 'react';\nimport { List } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListActionsWithViews from './ListActionsWithViews';\nimport ListViewContext from './ListViewContext';\n\nconst MultiViewsList = ({ children, actions, views, ListComponent, ...otherProps }) => {\n  const query = new URLSearchParams(useLocation().search);\n  const initialView = query.has('view') ? query.get('view') : Object.keys(views)[0];\n  const [currentView, setView] = useState(initialView);\n  return (\n    <ListViewContext.Provider value={{ views, currentView, setView }}>\n      <ListComponent\n        actions={actions}\n        pagination={views[currentView].pagination}\n        // Set initial values, but use the query string to change these values to avoid a complete refresh\n        perPage={views[initialView].perPage}\n        sort={views[initialView].sort}\n        {...otherProps}\n      >\n        {views[currentView].list}\n      </ListComponent>\n    </ListViewContext.Provider>\n  );\n};\n\nMultiViewsList.defaultProps = {\n  actions: <ListActionsWithViews />,\n  ListComponent: List\n};\n\nexport default MultiViewsList;\n"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","link","textDecoration","maxWidth","chipField","addIcon","cursor","fontSize","position","top","left","launchIcon","width","paddingRight","marginLeft","stopPropagation","e","handleClick","ChipList","props","classes","className","children","linkType","_props$linkType","component","_props$component","primaryText","appendLink","externalLinks","_props$externalLinks","rest","_excluded","useListContext","ids","data","loaded","basePath","resource","useResourceContext","getExternalLink","useGetExternalLink","Component","React","createElement","LinearProgress","_extends","sanitizeListRestProps","map","id","externalLink","RecordContextProvider","value","key","href","target","rel","onClick","ChipField","record","source","color","deleteIcon","LaunchIcon","onDelete","Link","to","linkToRecord","AddCircleIcon","GridList","_ref","spacing","xs","sm","md","lg","xl","_useListContext","Grid","container","child","cloneElement","Children","only","item","defaultProps","grid","marginBottom","column","paddingLeft","backgroundClip","card","media","height","paddingTop","MasonryList","image","content","actions","breakpointCols","Masonry","columnClassName","imageUrl","Card","CardActionArea","CardMedia","CardContent","CardActions","action","default","1050","700","ReferenceFilterCounter","resourceContext","useGetList","Fragment","Object","values","filter","d","concat","includes","length","ReferenceFilter","_ref2","reference","inverseSource","limit","sort","label","icon","showCounters","page","perPage","currentResource","useSelector","getResources","shallowEqual","r","name","useDataModel","resourceContextContainers","useContainers","displayedFilters","filterValues","setFilters","hideFilter","useEffect","urlSearchParams","URLSearchParams","window","location","search","fromEntries","entries","FilterList","options","itemIsUsed","forEach","containerUrl","inverseSourceData","startsWith","FilterListItem","_defineProperty","t","f","n","Array","isArray","clsx","arguments","CustomContent","forwardRef","ref","_clsx","nodeId","iconProp","expansionIcon","displayIcon","useTreeItem","disabled","expanded","selected","focused","handleExpansion","handleSelection","preventSelection","onMouseDown","event","iconContainer","Typography","CustomTreeItem","TreeItem","ContentComponent","ReferenceFilterTree","_useListFilterContext","useListFilterContext","routeTree","listTheme","isThemeSelected","undefined","push","console","log","sparqlWhere","IconButton","size","edge","LabelIcon","style","newFilterValues","assign","CancelIcon","TreeView","multiSelect","onNodeSelect","nodes","type","triples","node","subject","termType","predicate","object","query","JSON","stringify","encodedQuery","encodeURIComponent","aria-label","defaultCollapseIcon","ExpandMoreIcon","defaultExpandIcon","ChevronRightIcon","route","GenerateTreeItemFromNarrower","themeList","narrower","isLastNarrower","ListViewContext","createContext","views","currentView","setView","ViewsButtons","useLocation","_React$useContext","useContext","_slicedToArray","_ref3","_ref4","view","set","field","order","toString","Button","ListActionsWithViews","bulkActions","currentSort","exporter","filters","onUnselectItems","selectedIds","showFilter","total","_objectWithoutProperties","useMediaQuery","breakpoints","down","resourceDefinition","useResourceDefinition","TopToolbar","context","hasCreate","CreateButton","ExportButton","MultiViewsList","ListComponent","otherProps","initialView","has","get","keys","_useState2","useState","Provider","pagination","list","List"],"mappings":"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"}