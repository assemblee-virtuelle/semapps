{"mappings":"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","sources":["packages/date-components/src/index.tsx","packages/date-components/src/Picker.tsx","packages/date-components/src/CalendarList.tsx","packages/date-components/src/useFullCalendarProps.ts","packages/date-components/src/DaysList.tsx"],"sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/jsx-props-no-spreading */\n\n// Solves bug with Vite in dev mode. Can be removed when we upgrade to FullCalendar v6\n// See https://github.com/fullcalendar/fullcalendar-vue/issues/152\nimport '@fullcalendar/react/dist/vdom';\n\nimport { DatePicker, DatePickerProps } from '@mui/x-date-pickers/DatePicker';\nimport { TimePicker, TimePickerProps } from '@mui/x-date-pickers/TimePicker';\nimport { DateTimePicker, DateTimePickerProps } from '@mui/x-date-pickers/DateTimePicker';\nimport Picker, { Props as PickerProps } from './Picker';\n\nconst DateInput = <TDate,>(props: Omit<PickerProps<DatePickerProps<TDate>>, 'PickerComponent'>) => (\n  <Picker PickerComponent={DatePicker} {...props} />\n);\nconst TimeInput = <TDate,>(props: Omit<PickerProps<TimePickerProps<TDate>>, 'PickerComponent'>) => (\n  <Picker PickerComponent={TimePicker} {...props} />\n);\nconst DateTimeInput = <TDate,>(props: Omit<PickerProps<DateTimePickerProps<TDate>>, 'PickerComponent'>) => (\n  <Picker PickerComponent={DateTimePicker} {...props} />\n);\n\nexport { DateInput, TimeInput, DateTimeInput };\n\nexport { default as CalendarList } from './CalendarList';\nexport { default as DaysList } from './DaysList';\nexport { default as useFullCalendarProps } from './useFullCalendarProps';\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/require-default-props */\nimport { useCallback, ComponentType } from 'react';\nimport { useInput, InputHelperText, TextInputProps, useTranslateLabel } from 'react-admin';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { getPickersLocalization } from '@mui/x-date-pickers/locales/utils/getPickersLocalization';\nimport { Locale } from 'date-fns';\n\nexport type Props<PickerProps> = TextInputProps &\n  Omit<PickerProps, 'format'> & {\n    PickerComponent: ComponentType;\n    locale?: Locale;\n    translations?: ReturnType<typeof getPickersLocalization>;\n    stringFormat?: string;\n  };\n\nconst Picker = <PickerProps,>({\n  PickerComponent,\n  label,\n  source,\n  helperText,\n  fullWidth,\n  onBlur,\n  onChange,\n  format,\n  parse,\n  validate,\n  defaultValue,\n  locale,\n  translations,\n  stringFormat = 'ISO',\n  ...rest\n}: Props<PickerProps>) => {\n  const {\n    field,\n    isRequired,\n    fieldState: { error, isTouched, invalid },\n    formState: { isSubmitted }\n  } = useInput({\n    format,\n    onBlur,\n    onChange,\n    parse,\n    source,\n    validate,\n    defaultValue\n  });\n\n  const handleChange = useCallback(\n    (value: Date) => {\n      if (value instanceof Date) {\n        field.onChange(stringFormat === 'ISO' ? value.toISOString() : value.toString());\n      } else {\n        field.onChange(null);\n      }\n    },\n    [field, stringFormat]\n  );\n\n  const translateLabel = useTranslateLabel();\n  const translatedLabel = (\n    <span>\n      {translateLabel({\n        label,\n        source\n      })}\n      {isRequired && <span aria-hidden=\"true\">&thinsp;*</span>}\n    </span>\n  );\n\n  return (\n    <LocalizationProvider\n      dateAdapter={AdapterDateFns}\n      adapterLocale={locale}\n      localeText={translations?.components.MuiLocalizationProvider.defaultProps.localeText}\n    >\n      <PickerComponent\n        label={translatedLabel}\n        slotProps={{\n          textField: {\n            error: (isTouched || isSubmitted) && invalid,\n            size: 'small',\n            fullWidth,\n            helperText: (\n              // @ts-expect-error TS(2322): Type '{ touched: boolean; error: string | undefine... Remove this comment to see the full error message\n              <InputHelperText touched={isTouched || isSubmitted} error={error?.message} helperText={helperText} />\n            )\n          }\n        }}\n        value={field.value ? new Date(field.value) : null}\n        onChange={handleChange}\n        /* eslint-disable-next-line react/jsx-props-no-spreading */\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n};\n\nexport default Picker;\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { GlobalStyles, useTheme } from '@mui/material';\nimport useFullCalendarProps from './useFullCalendarProps';\nimport { makeStyles } from 'tss-react/mui';\n\nconst CalendarList = (props: any) => {\n  const theme = useTheme();\n  const fullCalendarProps = useFullCalendarProps(props);\n\n  return (\n    <>\n      <GlobalStyles\n        styles={theme => ({\n          '.fc-button': {\n            backgroundColor: `${theme.palette.primary.main} !important`,\n            border: 'none !important',\n            opacity: '1 !important'\n          },\n          '.fc-day-today': {\n            backgroundColor: `${theme.palette.secondary.light} !important`\n          },\n          // Overwrite violet color of links\n          'a.fc-daygrid-dot-event': {\n            color: 'black !important'\n          }\n        })}\n      />\n\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        locale={props.locale}\n        initialView=\"dayGridMonth\"\n        eventBackgroundColor={theme.palette.primary.main}\n        {...fullCalendarProps}\n      />\n    </>\n  );\n};\n\nexport default CalendarList;\n","import React, { useMemo, useCallback } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { useListContext, useCreatePath } from 'react-admin';\n\nconst useFullCalendarProps = ({\n  label,\n  startDate,\n  endDate,\n  linkType = 'edit'\n}: any) => {\n  const { data, isLoading, resource } = useListContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const createPath = useCreatePath();\n\n  const query = new URLSearchParams(location.search);\n\n  // Bypass the link in order to use React-Router\n  const eventClick = useCallback(({\n    event,\n    jsEvent\n  }: any) => {\n    jsEvent.preventDefault();\n    navigate(event.url);\n  }, []);\n\n  // Change the query string when month change\n  const datesSet = useCallback(\n    ({\n      view\n    }: any) => {\n      // @ts-expect-error TS(2345): Argument of type '(params: URLSearchParams) => { m... Remove this comment to see the full error message\n      setSearchParams(params => ({\n        ...params,\n        month: view.currentStart.getMonth() + 1,\n        year: view.currentStart.getFullYear()\n      }));\n    },\n    [setSearchParams]\n  );\n\n  const events = useMemo(\n    () =>\n      !isLoading &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      data\n        .filter(record => record)\n        .map(record => ({\n          id: record.id,\n          title: typeof label === 'string' ? record[label] : label(record),\n          start: typeof startDate === 'string' ? record[startDate] : startDate(record),\n          end: typeof endDate === 'string' ? record[endDate] : endDate(record),\n          url: createPath({ resource, id: record.id, type: linkType })\n        })),\n    [isLoading, data, resource, createPath]\n  );\n\n  return {\n    // @ts-expect-error TS(2345): Argument of type 'string | null' is not assignable... Remove this comment to see the full error message\n    initialDate: query.has('month') ? new Date(query.get('year'), query.get('month') - 1) : new Date(),\n    events,\n    datesSet,\n    eventClick\n  };\n};\n\nexport default useFullCalendarProps;\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport { makeStyles } from 'tss-react/mui';\nimport useFullCalendarProps from './useFullCalendarProps';\nimport { GlobalStyles } from '@mui/material';\n\nconst DaysList = (props: any) => {\n  const fullCalendarProps = useFullCalendarProps(props);\n\n  return (\n    <>\n      <GlobalStyles\n        styles={theme => ({\n          '.fc-button': {\n            backgroundColor: `${theme.palette.primary.main} !important`,\n            border: 'none !important',\n            opacity: '1 !important'\n          }\n        })}\n      />\n      <FullCalendar plugins={[listPlugin]} locale={props.locale} initialView=\"listMonth\" {...fullCalendarProps} />;\n    </>\n  );\n};\n\nexport default DaysList;\n"],"names":[],"version":3,"file":"index.cjs.js.map"}