{"mappings":"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","sources":["packages/interop-components/src/index.ts","packages/interop-components/src/dialogs/LexiconCreateDialog.js","packages/interop-components/src/inputs/LexiconAutocompleteInput.js","packages/interop-components/src/forms/CreateOrImportForm.js","packages/interop-components/src/forms/ImportForm.js","packages/interop-components/src/hooks/useFork.js","packages/interop-components/src/hooks/useSync.js","packages/interop-components/src/forms/LexiconImportForm.js","packages/interop-components/src/fetch/fetchWikidata.js","packages/interop-components/src/fetch/fetchESCO.js"],"sourcesContent":["// Dialogs\nexport { default as LexiconCreateDialog } from './dialogs/LexiconCreateDialog';\n\n// Forms\nexport { default as CreateOrImportForm } from './forms/CreateOrImportForm';\nexport { default as ImportForm } from './forms/ImportForm';\nexport { default as LexiconImportForm } from './forms/LexiconImportForm';\n\n// Inputs\nexport { default as LexiconAutocompleteInput } from './inputs/LexiconAutocompleteInput';\n\n// Fetch\nexport { default as fetchWikidata } from './fetch/fetchWikidata';\nexport { default as fetchESCO } from './fetch/fetchESCO';\n\n// Hooks\nexport { default as useFork } from './hooks/useFork';\nexport { default as useSync } from './hooks/useSync';\n","import React, { useCallback, useState } from 'react';\nimport { useCreate, useCreateSuggestionContext, useResourceContext } from 'react-admin';\nimport { Button, Dialog, DialogActions, DialogContent } from '@mui/material';\nimport LexiconAutocompleteInput from '../inputs/LexiconAutocompleteInput';\n\nconst LexiconCreateDialog = ({ fetchLexicon, selectData }) => {\n  const { filter, onCancel, onCreate } = useCreateSuggestionContext();\n  const resource = useResourceContext();\n  const [value, setValue] = useState(filter || '');\n  const [create] = useCreate();\n\n  const onClose = useCallback(() => {\n    setValue('');\n    onCancel();\n  }, [setValue, onCancel]);\n\n  const onSubmit = useCallback(() => {\n    // If we have no URI, it means we are creating a new definition\n    // Delete the summary as it is \"Ajouter XXX au dictionaire\"\n    if (!value.uri) delete value.summary;\n    create(\n      resource,\n      { data: selectData(value) },\n      {\n        onSuccess: data => {\n          console.log('onSuccess', data);\n          setValue('');\n          onCreate(data);\n        }\n      }\n    );\n  }, [create, onCreate, selectData, value, setValue, resource]);\n\n  return (\n    <Dialog open onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogContent>\n        <LexiconAutocompleteInput\n          source=\"lexicon\"\n          label=\"Titre\"\n          fetchLexicon={fetchLexicon}\n          defaultValue={filter}\n          value={value}\n          onChange={setValue}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Annuler</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n          Ajouter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default LexiconCreateDialog;\n","import React, { useState, useMemo, useEffect, forwardRef } from 'react';\nimport {\n  FieldTitle,\n  useInput,\n  useTranslate,\n  useLocale,\n  useNotify,\n  useResourceContext,\n  InputHelperText\n} from 'react-admin';\nimport { TextField, Typography, Grid } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport AddIcon from '@mui/icons-material/Add';\nimport { default as highlightMatch } from 'autosuggest-highlight/match';\nimport { default as highlightParse } from 'autosuggest-highlight/parse';\nimport throttle from 'lodash.throttle';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst selectOptionText = (option, optionText) => {\n  if (typeof option === 'string') {\n    return option;\n  }\n  if (option.label) {\n    return option.label;\n  }\n  if (typeof optionText === 'string') {\n    return option[optionText];\n  }\n  if (typeof optionText === 'function') {\n    return optionText(option);\n  }\n};\n\nconst capitalizeFirstLetter = string => string && string.charAt(0).toUpperCase() + string.slice(1);\n\nconst LexiconAutocompleteInput = forwardRef(\n  ({ fetchLexicon, source, defaultValue, label, parse, optionText = 'label', helperText, ...rest }, ref) => {\n    const resource = useResourceContext();\n    const classes = useStyles();\n    const locale = useLocale();\n    const translate = useTranslate();\n    const notify = useNotify();\n\n    // Do not pass the `parse` prop to useInput, as we manually call it on the onChange prop below\n    const {\n      field: { value, onChange, onBlur },\n      fieldState: { isTouched, error },\n      formState: { submitError },\n      isRequired\n    } = useInput({ source, defaultValue, ...rest });\n\n    const [keyword, setKeyword] = useState(defaultValue); // Typed keywords\n    const [options, setOptions] = useState([]); // Options returned by MapBox\n\n    const throttledFetchLexicon = useMemo(\n      () =>\n        throttle((keyword, callback) => {\n          fetchLexicon({ keyword, locale })\n            .then(data => callback(data))\n            .catch(e => notify(e.message, { type: 'error' }));\n        }, 200),\n      [locale, fetchLexicon, notify]\n    );\n\n    useEffect(() => {\n      // Do not trigger search if text input is empty\n      if (!keyword) {\n        return undefined;\n      }\n      throttledFetchLexicon(keyword, results => setOptions(results));\n    }, [value, keyword, throttledFetchLexicon]);\n\n    return (\n      <Autocomplete\n        fullWidth\n        freeSolo\n        autoComplete\n        value={value || null}\n        ref={ref}\n        openOnFocus={!!defaultValue}\n        // We must include the current value as an option, to avoid this error\n        // https://github.com/mui-org/material-ui/issues/18514#issuecomment-636096386\n        options={value ? [value, ...options] : options}\n        // Do not show the current value as an option (this would break renderOptions)\n        filterSelectedOptions\n        // For some reasons, this prop has to be passed\n        filterOptions={(options, params) => {\n          // Suggest the creation of a new value\n          if (keyword) {\n            options.push({\n              label: capitalizeFirstLetter(keyword),\n              summary: `Ajouter \"${capitalizeFirstLetter(keyword)}\" au dictionnaire`,\n              icon: AddIcon\n            });\n          }\n          return options;\n        }}\n        clearOnBlur // Recommended for https://v4.mui.com/components/autocomplete/#creatable\n        selectOnFocus // Recommended for https://v4.mui.com/components/autocomplete/#creatable\n        handleHomeEndKeys // Recommended for https://v4.mui.com/components/autocomplete/#creatable\n        getOptionLabel={option => selectOptionText(option, optionText)}\n        isOptionEqualToValue={(option, value) =>\n          selectOptionText(option, optionText) === selectOptionText(value, optionText)\n        }\n        // This function is called when the user selects an option\n        onChange={(event, newValue) => {\n          // Parse only if the value is not null (happens if the user clears the value)\n          if (newValue && parse) newValue = parse(newValue);\n          onChange(newValue);\n          setOptions([]);\n        }}\n        onInputChange={(event, newKeyword) => setKeyword(newKeyword)}\n        noOptionsText={translate('ra.navigation.no_results')}\n        renderInput={params => {\n          // Autocomplete=off doesn't work anymore in modern browsers\n          // https://stackoverflow.com/a/40791726/7900695\n          params.inputProps.autoComplete = 'new-password';\n          return (\n            <TextField\n              {...params}\n              autoFocus\n              inputProps={{\n                ...params.inputProps,\n                onBlur: e => {\n                  onBlur(e);\n                  if (params.inputProps.onBlur) {\n                    params.inputProps.onBlur(e);\n                  }\n                },\n                onFocus: e => {\n                  if (params.inputProps.onFocus) {\n                    params.inputProps.onFocus(e);\n                  }\n                }\n              }}\n              label={\n                label !== '' &&\n                label !== false && (\n                  <FieldTitle label={label} source={source} resource={resource} isRequired={isRequired} />\n                )\n              }\n              error={!!(isTouched && (error || submitError))}\n              helperText={<InputHelperText touched={isTouched} error={error || submitError} helperText={helperText} />}\n            />\n          );\n        }}\n        renderOption={(props, option) => {\n          const matches = highlightMatch(option.label, keyword);\n          const parts = highlightParse(option.label, matches);\n          return (\n            <Grid container alignItems=\"center\" {...props} key={option.uri || 'create'}>\n              <Grid item>{React.createElement(option.icon || LanguageIcon, { className: classes.icon })}</Grid>\n              <Grid item xs>\n                {typeof parts === 'string'\n                  ? parts\n                  : parts.map((part, index) => (\n                      <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                        {part.text}\n                      </span>\n                    ))}\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {option.summary}\n                </Typography>\n              </Grid>\n            </Grid>\n          );\n        }}\n      />\n    );\n  }\n);\n\nexport default LexiconAutocompleteInput;\n","import React, { useState } from 'react';\nimport { SimpleForm } from 'react-admin';\nimport { Box, Tabs, Tab, Divider, useMediaQuery } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport ImportForm from './ImportForm';\n\nconst useStyles = makeStyles(() => ({\n  tab: {\n    maxWidth: 'unset',\n    padding: '6px 24px'\n  }\n}));\n\nconst CreateOrImportForm = ({ stripProperties, ...rest }) => {\n  const [tab, setTab] = useState(0);\n  const classes = useStyles();\n  const xs = useMediaQuery(theme => theme.breakpoints.down('sm'), { noSsr: true });\n  return (\n    <>\n      <Box pb={2}>\n        <Tabs value={tab} onChange={(_, v) => setTab(v)} indicatorColor=\"primary\">\n          <Tab className={classes.tab} label=\"Créer\" />\n          <Tab className={classes.tab} label={xs ? 'Importer' : 'Importer une ressource distante'} />\n        </Tabs>\n        <Divider />\n      </Box>\n      {tab === 0 && <SimpleForm {...rest} />}\n      {tab === 1 && <ImportForm stripProperties={stripProperties || []} {...rest} />}\n    </>\n  );\n};\n\nexport default CreateOrImportForm;\n","import React, { useCallback, useEffect } from 'react';\nimport { SimpleForm, TextInput, RadioButtonGroupInput, useResourceContext } from 'react-admin';\nimport { useFormContext } from 'react-hook-form';\nimport { useContainers, useDataModel } from '@semapps/semantic-data-provider';\nimport { ReferenceInput, MultiServerAutocompleteInput } from '@semapps/input-components';\nimport useFork from '../hooks/useFork';\nimport useSync from '../hooks/useSync';\n\nconst ImportFormInputs = () => {\n  const resource = useResourceContext();\n  const containers = useContainers(resource, '@remote');\n  const dataModel = useDataModel(resource);\n\n  const { watch, setValue } = useFormContext();\n  const watchRemoteUri = watch('remoteUri');\n  const watchPlainUri = watch('plainUri');\n\n  useEffect(() => {\n    if (watchRemoteUri) {\n      setValue('plainUri', watchRemoteUri);\n    }\n  }, [watchRemoteUri]);\n\n  useEffect(() => {\n    if (watchPlainUri && watchPlainUri !== watchRemoteUri) {\n      setValue('remoteUri', null);\n    }\n  }, [watchRemoteUri, watchPlainUri]);\n\n  if (!dataModel) return null;\n\n  return (\n    <>\n      {containers && Object.keys(containers).length > 0 && (\n        <ReferenceInput\n          source=\"remoteUri\"\n          reference={resource}\n          filter={{ _servers: '@remote', _predicates: [dataModel?.fieldsMapping?.title] }}\n          enableGetChoices={({ q }) => !!(q && q.length > 1)}\n        >\n          <MultiServerAutocompleteInput\n            optionText={dataModel?.fieldsMapping?.title}\n            shouldRenderSuggestions={value => value.length > 1}\n            noOptionsText=\"Tapez au moins deux lettres\"\n            emptyText=\"Rechercher...\"\n            label=\"Resource distante\"\n            fullWidth\n          />\n        </ReferenceInput>\n      )}\n      <TextInput source=\"plainUri\" label=\"URL de la ressource distante\" fullWidth />\n      <RadioButtonGroupInput\n        source=\"method\"\n        label=\"Méthode d'importation\"\n        choices={[\n          { id: 'sync', name: 'Garder la ressource locale synchronisée avec la ressource distante' },\n          { id: 'fork', name: 'Créer une nouvelle version de la ressource (fork)' }\n        ]}\n      />\n    </>\n  );\n};\n\nconst ImportForm = ({ stripProperties }) => {\n  const resource = useResourceContext();\n  const fork = useFork(resource);\n  const sync = useSync(resource);\n\n  const onSubmit = useCallback(\n    async ({ plainUri, method }) => {\n      if (method === 'fork') {\n        await fork(plainUri, stripProperties);\n      } else {\n        await sync(plainUri);\n      }\n    },\n    [fork, sync, stripProperties]\n  );\n\n  return (\n    <SimpleForm onSubmit={onSubmit} defaultValues={{ method: 'sync' }}>\n      <ImportFormInputs />\n    </SimpleForm>\n  );\n};\n\nexport default ImportForm;\n","import { useCallback } from 'react';\nimport { useDataProvider, useRedirect, useNotify } from 'react-admin';\n\nconst useFork = resourceId => {\n  const dataProvider = useDataProvider();\n  const redirect = useRedirect();\n  const notify = useNotify();\n\n  return useCallback(\n    async (remoteRecordUri, stripProperties = []) => {\n      const { data: remoteData } = await dataProvider.getOne(resourceId, { id: remoteRecordUri });\n\n      const strippedData = { ...remoteData };\n      strippedData['http://www.w3.org/ns/prov#wasDerivedFrom'] = strippedData.id;\n      delete strippedData.id;\n      delete strippedData['@context'];\n      stripProperties.forEach(prop => {\n        delete strippedData[prop];\n      });\n\n      const { data: localData } = await dataProvider.create(resourceId, { data: strippedData });\n\n      redirect(`/${resourceId}/${encodeURIComponent(localData.id)}/show`);\n      notify('La ressource a bien été copiée', { type: 'success' });\n    },\n    [resourceId, dataProvider, redirect, notify]\n  );\n};\n\nexport default useFork;\n","import { useCallback } from 'react';\nimport { useNotify, useDataProvider, useRedirect } from 'react-admin';\n\nconst useSync = resourceId => {\n  const dataProvider = useDataProvider();\n  const notify = useNotify();\n  const redirect = useRedirect();\n\n  return useCallback(\n    async remoteRecordUri => {\n      await dataProvider.create(resourceId, { id: remoteRecordUri });\n\n      redirect(`/${resourceId}/${encodeURIComponent(remoteRecordUri)}/show`);\n      notify('La ressource a bien été importée', { type: 'success' });\n    },\n    [dataProvider, redirect, notify]\n  );\n};\n\nexport default useSync;\n","import React, { useCallback } from 'react';\nimport { required, SimpleForm, useSaveContext } from 'react-admin';\nimport LexiconAutocompleteInput from '../inputs/LexiconAutocompleteInput';\n\nconst LexiconImportForm = ({ fetchLexicon, selectData }) => {\n  const { save } = useSaveContext();\n\n  const onSubmit = useCallback(\n    async ({ lexicon }) => {\n      // If we have no URI, it means we are creating a new definition\n      // Delete the summary as it is \"Ajouter XXX au dictionaire\"\n      if (!lexicon.uri) delete lexicon.summary;\n\n      // If the user doesn't select any option, use the text as the label\n      if (typeof lexicon === 'string') {\n        lexicon = { label: lexicon };\n      }\n\n      await save(selectData(lexicon));\n    },\n    [selectData, save]\n  );\n\n  return (\n    <SimpleForm onSubmit={onSubmit}>\n      <LexiconAutocompleteInput label=\"Titre\" source=\"lexicon\" fetchLexicon={fetchLexicon} validate={required()} />\n    </SimpleForm>\n  );\n};\n\nexport default LexiconImportForm;\n","import LanguageIcon from '@mui/icons-material/Language';\n\nconst capitalize = s => (s && s[0].toUpperCase() + s.slice(1)) || '';\n\nconst fetchWikidata =\n  (apiUrl = 'https://www.wikidata.org/w/api.php') =>\n  async ({ keyword, locale }) => {\n    const response = await fetch(\n      `${apiUrl}?action=wbsearchentities&format=json&language=${locale}&uselang=${locale}&type=item&limit=10&origin=*&search=${encodeURIComponent(\n        keyword\n      )}`\n    );\n    if (response.ok) {\n      const json = await response.json();\n      return json.search.map(r => ({\n        uri: r.concepturi,\n        label: capitalize(r.match.text),\n        summary: capitalize(r.description),\n        icon: LanguageIcon\n      }));\n    }\n    throw new Error('Failed to fetch Wikidata server');\n  };\n\nexport default fetchWikidata;\n","import urlJoin from 'url-join';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\n\nconst capitalize = s => (s && s[0].toUpperCase() + s.slice(1)) || '';\n\nconst fetchESCO =\n  (apiUrl = 'https://ec.europa.eu/esco/api', type = 'skill') =>\n  async ({ keyword, locale }) => {\n    const response = await fetch(\n      urlJoin(\n        apiUrl,\n        `suggest2?text=${encodeURIComponent(\n          keyword\n        )}&language=${locale}&type=${type}&isInScheme=&facet=&offset=&limit=&full=&selectedVersion=&viewObsolete=`\n      )\n    );\n    if (response.ok) {\n      const json = await response.json();\n      return json._embedded.results.map(r => ({\n        uri: r.uri,\n        label: capitalize(r.title.replace('’', \"'\")),\n        icon: StarBorderIcon\n      }));\n    }\n    throw new Error('Failed to fetch ESCO server');\n  };\n\nexport default fetchESCO;\n"],"names":[],"version":3,"file":"index.cjs.js.map"}