{"mappings":"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","sources":["packages/geo-components/src/index.ts","packages/geo-components/src/extractContext.js","packages/geo-components/src/LocationInput.js","packages/geo-components/src/MapList/MapList.js","packages/geo-components/src/MapList/MarkerClusterGroup.js","packages/geo-components/src/MapList/DefaultPopupContent.js","packages/geo-components/src/MapList/QueryStringUpdater.js","packages/geo-components/src/MapList/MobileDrawer.js","packages/geo-components/src/MapField/MapField.js","packages/geo-components/src/MapField/ChangeView.js"],"sourcesContent":["export { default as extractContext } from './extractContext';\nexport { default as LocationInput } from './LocationInput';\nexport { default as MapList } from './MapList/MapList';\nexport { default as MapField } from './MapField/MapField';\n","const extractContext = (context, key) => {\n  const property = context.find(property => property.id.startsWith(`${key}.`));\n  if (property) return property.text;\n};\n\nexport default extractContext;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport {\n  FieldTitle,\n  InputHelperText,\n  useInput,\n  useTranslate,\n  useLocale,\n  useRecordContext,\n  useResourceContext,\n  useTheme\n} from 'react-admin';\nimport { TextField, Typography, Grid } from '@mui/material';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport { default as highlightMatch } from 'autosuggest-highlight/match';\nimport { default as highlightParse } from 'autosuggest-highlight/parse';\nimport throttle from 'lodash.throttle';\nimport { styled } from '@mui/system';\n\nconst StyledLocationOnIcon = styled(LocationOnIcon)(({ theme }) => ({\n  color: theme.palette.text.secondary,\n  marginRight: theme.spacing(2)\n}));\n\nconst selectOptionText = (option, optionText) => {\n  if (option.place_name) {\n    return option.place_name;\n  }\n  if (typeof optionText === 'string') {\n    return option[optionText];\n  }\n  if (typeof optionText === 'function') {\n    return optionText(option);\n  }\n};\n\nconst LocationInput = ({ mapboxConfig, source, label, parse, optionText, helperText, variant = 'outlined', size = 'small', ...rest }) => {\n  if (!mapboxConfig) {\n    throw new Error('@semapps/geo-components : No mapbox configuration');\n  }\n  if (!mapboxConfig.access_token) {\n    throw new Error('@semapps/geo-components : No access token in mapbox configuration');\n  }\n\n  const record = useRecordContext();\n  const resource = useResourceContext();\n  const locale = useLocale();\n  const translate = useTranslate();\n\n  const [keyword, setKeyword] = useState(''); // Typed keywords\n  const [options, setOptions] = useState([]); // Options returned by MapBox\n\n  // Do not pass the `parse` prop to useInput, as we manually call it on the onChange prop below\n  const {\n    field: { value, onChange, onBlur /* , onFocus */ },\n    isRequired,\n    fieldState: { error, /* submitError, */ isTouched }\n  } = useInput({ resource, source, ...rest });\n\n  const fetchMapbox = useMemo(\n    () =>\n      throttle((keyword, callback) => {\n        const fetchUrl = new URL(`https://api.mapbox.com/geocoding/v5/mapbox.places/${keyword}.json`);\n\n        // Use locale as default language\n        if (!mapboxConfig.language) mapboxConfig.language = locale;\n\n        // All options available at https://docs.mapbox.com/api/search/geocoding/#forward-geocoding\n        Object.entries(mapboxConfig).forEach(([key, value]) => {\n          if (Array.isArray(value)) {\n            value = value.join(',');\n          } else if (typeof value === 'boolean') {\n            value = value ? 'true' : 'false';\n          }\n          fetchUrl.searchParams.set(key, value);\n        });\n\n        fetch(fetchUrl.toString())\n          .then(res => res.json())\n          .then(json => callback(json));\n      }, 200),\n    [mapboxConfig, locale]\n  );\n\n  useEffect(() => {\n    // Do not trigger search if text input is empty or if it is the same as the current value\n    if (!keyword || keyword === selectOptionText(value, optionText)) {\n      return undefined;\n    }\n    fetchMapbox(keyword, results => setOptions(results.features));\n  }, [value, keyword, fetchMapbox]);\n\n  return (\n    <Autocomplete\n      autoComplete\n      value={value || null}\n      // We must include the current value as an option, to avoid this error\n      // https://github.com/mui-org/material-ui/issues/18514#issuecomment-636096386\n      options={value ? [value, ...options] : options}\n      // Do not show the current value as an option (this would break renderOptions)\n      filterSelectedOptions\n      // For some reasons, this prop has to be passed\n      filterOptions={x => x}\n      getOptionLabel={option => selectOptionText(option, optionText)}\n      isOptionEqualToValue={(option, value) =>\n        selectOptionText(option, optionText) === selectOptionText(value, optionText)\n      }\n      // This function is called when the user selects an option\n      onChange={(event, newValue) => {\n        // Parse only if the value is not null (happens if the user clears the value)\n        if (newValue && parse) newValue = parse(newValue);\n        onChange(newValue);\n        setOptions([]);\n      }}\n      onInputChange={(event, newKeyword) => setKeyword(newKeyword)}\n      noOptionsText={translate('ra.navigation.no_results')}\n      renderInput={params => {\n        // Autocomplete=off doesn't work anymore in modern browsers\n        // https://stackoverflow.com/a/40791726/7900695\n        params.inputProps.autoComplete = 'new-password';\n        return (\n          <TextField\n            {...params}\n            inputProps={{\n              ...params.inputProps,\n              onBlur: e => {\n                onBlur(e);\n                if (params.inputProps.onBlur) {\n                  params.inputProps.onBlur(e);\n                }\n              } /* ,\n              onFocus: e => {\n                onFocus(e);\n                if (params.inputProps.onFocus) {\n                  params.inputProps.onFocus(e);\n                }\n              } */\n            }}\n            label={\n              label !== '' &&\n              label !== false && (\n                <FieldTitle label={label} source={source} resource={resource} isRequired={isRequired} />\n              )\n            }\n            error={!!((isTouched && error) /* || submitError */)}\n            helperText={\n              <InputHelperText touched={isTouched} error={error /* || submitError */} helperText={helperText} />\n            }\n            {...rest}\n          />\n        );\n      }}\n      renderOption={(props, option, state) => {\n        const matches = highlightMatch(option.text, keyword);\n        const parts = highlightParse(option.text, matches);\n\n        return (\n          <li {...props}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <StyledLocationOnIcon />\n              </Grid>\n              <Grid item xs>\n                {typeof parts === 'string'\n                  ? parts\n                  : parts.map((part, index) => (\n                      <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                        {part.text}\n                      </span>\n                    ))}\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {option.place_name}\n                </Typography>\n              </Grid>\n            </Grid>\n          </li>\n        );\n      }}\n      variant={variant}\n      size={size}\n      {...rest}\n    />\n  );\n};\n\nexport default LocationInput;\n","import React, { useState } from 'react';\nimport { useListContext, RecordContextProvider } from 'react-admin';\nimport { useLocation } from 'react-router-dom';\nimport { useMediaQuery, Box } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport 'leaflet-defaulticon-compatibility';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport MarkerClusterGroup from './MarkerClusterGroup';\nimport DefaultPopupContent from './DefaultPopupContent';\nimport QueryStringUpdater from './QueryStringUpdater';\nimport MobileDrawer from './MobileDrawer';\n\nconst useStyles = makeStyles(() => ({\n  isLoading: {\n    zIndex: 1000,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}));\n\nconst MapList = ({\n  latitude,\n  longitude,\n  label,\n  description,\n  popupContent = DefaultPopupContent,\n  height = 700,\n  center = [47, 2.213749],\n  zoom = 6,\n  groupClusters = true,\n  boundToMarkers,\n  connectMarkers = false,\n  scrollWheelZoom = false,\n  ...otherProps\n}) => {\n  const { data, isLoading } = useListContext();\n  const xs = useMediaQuery(theme => theme.breakpoints.down('sm'), { noSsr: true });\n  const [drawerRecord, setDrawerRecord] = useState(null);\n  const classes = useStyles();\n\n  // Get the zoom and center from query string, if available\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n  center = query.has('lat') && query.has('lng') ? [query.get('lat'), query.get('lng')] : center;\n  zoom = query.has('zoom') ? query.get('zoom') : zoom;\n\n  let previousRecord;\n\n  const records = isLoading\n    ? []\n    : data\n        .map(record => ({\n          ...record,\n          latitude: latitude && latitude(record),\n          longitude: longitude && longitude(record),\n          label: label && label(record),\n          description: description && description(record)\n        }))\n        .filter(record => record.latitude && record.longitude);\n\n  const bounds =\n    boundToMarkers && records.length > 0 ? records.map(record => [record.latitude, record.longitude]) : undefined;\n\n  // Do not display anything if the bounds are not ready, otherwise the MapContainer will not be initialized correctly\n  if (boundToMarkers && !bounds) return null;\n\n  const markers = records.map((record, i) => {\n    const marker = (\n      <React.Fragment key={i}>\n        <Marker\n          position={[record.latitude, record.longitude]}\n          eventHandlers={\n            xs\n              ? {\n                  click: () => setDrawerRecord(record)\n                }\n              : undefined\n          }\n        >\n          {!xs && (\n            <Popup>\n              <RecordContextProvider value={record}>{React.createElement(popupContent)}</RecordContextProvider>\n            </Popup>\n          )}\n        </Marker>\n        {connectMarkers && previousRecord && (\n          <Polyline\n            positions={[\n              [previousRecord.latitude, previousRecord.longitude],\n              [record.latitude, record.longitude]\n            ]}\n          />\n        )}\n      </React.Fragment>\n    );\n\n    // Save record so that we can trace lines\n    previousRecord = record;\n\n    return marker;\n  });\n\n  return (\n    <MapContainer\n      style={{ height }}\n      center={!boundToMarkers ? center : undefined}\n      zoom={!boundToMarkers ? zoom : undefined}\n      bounds={bounds}\n      scrollWheelZoom={scrollWheelZoom}\n      {...otherProps}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {isLoading && (\n        <Box alignItems=\"center\" className={classes.isLoading}>\n          <CircularProgress size={60} thickness={6} />\n        </Box>\n      )}\n      {groupClusters ? <MarkerClusterGroup showCoverageOnHover={false}>{markers}</MarkerClusterGroup> : markers}\n      <QueryStringUpdater />\n      <RecordContextProvider value={drawerRecord}>\n        <MobileDrawer popupContent={popupContent} onClose={() => setDrawerRecord(null)} />\n      </RecordContextProvider>\n    </MapContainer>\n  );\n};\n\nexport default MapList;\n","import L from 'leaflet';\nimport { createPathComponent } from '@react-leaflet/core';\nimport 'leaflet.markercluster';\n\n// Taken from https://github.com/changey/react-leaflet-markercluster/blob/60992857087c181ada1e8e6659a6666a13c1f868/src/react-leaflet-markercluster.js\nfunction createMarkerCluster({ children: _c, ...props }, context) {\n  const clusterProps = {};\n  const clusterEvents = {};\n  // Splitting props and events to different objects\n  Object.entries(props).forEach(([propName, prop]) =>\n    propName.startsWith('on') ? (clusterEvents[propName] = prop) : (clusterProps[propName] = prop)\n  );\n\n  const instance = new L.MarkerClusterGroup(clusterProps);\n\n  // Initializing event listeners\n  Object.entries(clusterEvents).forEach(([eventAsProp, callback]) => {\n    const clusterEvent = `cluster${eventAsProp.substring(2).toLowerCase()}`;\n    instance.on(clusterEvent, callback);\n  });\n  return {\n    instance,\n    context: {\n      ...context,\n      layerContainer: instance\n    }\n  };\n}\n\nconst MarkerClusterGroup = createPathComponent(createMarkerCluster);\n\nexport default MarkerClusterGroup;\n","import React from 'react';\nimport { ShowButton, EditButton, useResourceDefinition, useRecordContext } from 'react-admin';\nimport { Typography } from '@mui/material';\n\nconst DefaultPopupContent = () => {\n  const record = useRecordContext();\n  const resourceDefinition = useResourceDefinition({});\n  if (!record) return null;\n  return (\n    <>\n      {record.label && <Typography variant=\"h5\">{record.label}</Typography>}\n      {record.description && (\n        <Typography>\n          {record.description.length > 150 ? `${record.description.substring(0, 150)}...` : record.description}\n        </Typography>\n      )}\n      {resourceDefinition.hasShow && <ShowButton />}\n      {resourceDefinition.hasEdit && <EditButton />}\n    </>\n  );\n};\n\nexport default DefaultPopupContent;\n","import { useMapEvents } from 'react-leaflet';\nimport { useSearchParams } from 'react-router-dom';\n\n// Keep the zoom and center in query string, so that when we navigate back to the page, it stays focused on the same area\nconst QueryStringUpdater = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useMapEvents({\n    moveend: test => {\n      setSearchParams(params => ({\n        ...Object.fromEntries(params),\n        lat: test.target.getCenter().lat,\n        lng: test.target.getCenter().lng,\n        zoom: test.target.getZoom()\n      }));\n    },\n    zoomend: test => {\n      setSearchParams(params => ({\n        ...Object.fromEntries(params),\n        zoom: test.target.getZoom()\n      }));\n    }\n  });\n\n  return null;\n};\n\nexport default QueryStringUpdater;\n","import React, { useEffect } from 'react';\nimport { useMap } from 'react-leaflet';\nimport { useRecordContext } from 'react-admin';\nimport { Drawer, Box, IconButton } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nconst useStyles = makeStyles(() => ({\n  closeButton: {\n    position: 'absolute',\n    zIndex: 1400,\n    top: 0,\n    right: 0\n  }\n}));\n\nconst MobileDrawer = ({ popupContent, onClose }) => {\n  const classes = useStyles();\n  const record = useRecordContext();\n  const map = useMap();\n  useEffect(() => {\n    if (record) {\n      map.setView([record.latitude, record.longitude]);\n    }\n  }, [record, map]);\n\n  return (\n    <Drawer anchor=\"bottom\" open={!!record} onClose={onClose}>\n      <Box p={1} position=\"relative\">\n        <IconButton onClick={onClose} className={classes.closeButton} size=\"large\">\n          <ClearIcon />\n        </IconButton>\n        {React.createElement(popupContent)}\n      </Box>\n    </Drawer>\n  );\n};\n\nexport default MobileDrawer;\n","import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { Box, Typography } from '@mui/material';\nimport ChangeView from './ChangeView';\n\nconst MapField = ({ latitude, longitude, address, height = 400, zoom = 11, typographyProps, ...rest }) => {\n  const record = useRecordContext();\n  const position = [latitude(record), longitude(record)];\n\n  // Do not display the component if it has no latitude or longitude\n\n  if (!position[0] || !position[1]) return null;\n\n  return (\n    <Box>\n      {address && (\n        <Box mt={1} mb={1}>\n          <Typography {...typographyProps}>{address(record)}</Typography>\n        </Box>\n      )}\n      <MapContainer style={{ height }} center={position} zoom={zoom} {...rest}>\n        <ChangeView center={position} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position} />\n      </MapContainer>\n    </Box>\n  );\n};\n\nexport default MapField;\n","import React from 'react';\nimport { useMap } from 'react-leaflet';\n\nconst ChangeView = ({ center, zoom }) => {\n  const map = useMap();\n  map.setView(center, zoom);\n  return null;\n};\n\nexport default ChangeView;\n"],"names":[],"version":3,"file":"index.es.js.map"}