{"version":3,"file":"index.cjs.js","sources":["../src/fields/ReferenceArrayField.js","../src/fields/ReferenceField.js","../src/dataHandling/FilterHandler.js","../src/inputs/ReferenceArrayInput.js","../src/inputs/ReificationArrayInput.js","../src/dataProvider/utils/getServerKeyFromType.js","../src/dataProvider/utils/getServerKeyFromUri.js","../src/dataProvider/utils/fetchResource.js","../src/dataProvider/methods/getOne.js","../../../node_modules/url-join/lib/url-join.js","../src/dataProvider/utils/uploadAllFiles.js","../src/dataProvider/utils/findContainersWithTypes.js","../src/dataProvider/methods/create.js","../src/dataProvider/methods/delete.js","../src/dataProvider/methods/deleteMany.js","../src/dataProvider/methods/getCreateContainer.js","../src/dataProvider/utils/fetchContainers.js","../src/dataProvider/utils/getEmbedFrame.js","../../../node_modules/crypto-js/core.js","../../../node_modules/crypto-js/md5.js","../src/dataProvider/utils/buildDereferenceQuery.js","../src/dataProvider/utils/buildSparqlQuery.js","../src/dataProvider/utils/fetchSparqlEndpoints.js","../src/dataProvider/utils/findContainersWithPath.js","../src/dataProvider/methods/getList.js","../src/dataProvider/methods/getMany.js","../src/dataProvider/methods/getManyReference.js","../src/dataProvider/methods/update.js","../../../node_modules/jwt-decode/build/jwt-decode.esm.js","../src/dataProvider/utils/fetchUserConfig.js","../src/dataProvider/utils/fetchVoidEndpoints.js","../src/inputs/DateTimeInput.js","../src/dataHandling/GroupedReferenceHandler.js","../src/fields/ImageField.js","../src/inputs/ReferenceInput.js","../src/dataProvider/dataProvider.js","../src/httpClient.js","../src/hooks/useCreateContainer.js"],"sourcesContent":["import React from 'react';\nimport { ReferenceArrayField as RaReferenceArrayField } from 'react-admin';\n\nconst ReferenceArrayField = ({ record, source, ...otherProps }) => {\n  if (record?.[source]) {\n    if (!Array.isArray(record[source])) {\n      record[source] = [record[source]];\n    }\n    record[source] = record[source].map(i => i['@id'] || i.id || i);\n  }\n  return <RaReferenceArrayField record={record} source={source} {...otherProps} />;\n};\n\nReferenceArrayField.defaultProps = {\n  addLabel: true\n};\n\nexport default ReferenceArrayField;\n","import React from 'react';\nimport { ReferenceField as RaReferenceField } from 'react-admin';\n\nconst ReferenceField = ({ record, source, ...otherProps }) => {\n  if (record[source]) {\n    if (typeof record[source] === 'object') {\n      record[source] = record[source]['@id'] || record[source].id;\n    }\n  }\n  return <RaReferenceField record={record} source={source} {...otherProps} />;\n};\n\nReferenceField.defaultProps = {\n  addLabel: true\n};\n\nexport default ReferenceField;\n","import React, { useState, useEffect } from 'react';\n\n/**\n * @example\n * <Show>\n *   <FilterHandler\n *     source=\"property\" // ex pair:organizationOfMembership\n *     filter={{\n *       'propertyToFilter':'value'\n *     }} // ex {{'pair:membershipRole':'http://localhost:3000/membership-roles/role-1'}}\n *     >\n *     <SingleFieldList>\n *    </SingleFieldList>\n *   </FilterHandler>\n * </Show>\n */\n\nconst FilterHandler = ({ children, record, filter, source, ...otherProps }) => {\n  const [filtered, setFiltered] = useState();\n  useEffect(() => {\n    if (record && source && Array.isArray(record?.[source])) {\n      const filteredData = record?.[source].filter(r => {\n        let eq = true;\n        for (const key in filter) {\n          const value = r[key];\n          if (Array.isArray(value)) {\n            if (!value.includes(filter[key])) {\n              eq = false;\n            }\n          } else {\n            if (value !== filter[key]) {\n              eq = false;\n            }\n          }\n        }\n        return eq;\n      });\n      let newRecord = {\n        ...record\n      };\n      //undefined setted if no data to obtain no render in RightLabel or equivalent\n      newRecord[source] = filteredData.length > 0 ? filteredData : undefined;\n      setFiltered(newRecord);\n    }\n  }, [record, source, filter]);\n\n  return (\n    <>\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          ...otherProps,\n          record: filtered,\n          addLabel: true,\n          source\n        });\n      })}\n    </>\n  );\n};\nexport default FilterHandler;\n","import React from 'react';\nimport { ReferenceArrayInput as RaReferenceArrayInput, useResourceContext } from 'react-admin';\n\nconst ReferenceArrayInput = props => {\n  const resource = useResourceContext({});\n  return (\n    <RaReferenceArrayInput\n      {...props}\n      resource={resource}\n      format={value => {\n        // If there is no value, return immediately\n        if (!value) return value;\n        // if the linked field value is not an array, turns it into an array.\n        // Necessary as JSON-LD are sometimes arrays, sometimes not (when there is one value)\n        // and the ReferenceArrayInput component only accept arrays\n        if (!Array.isArray(value)) value = [value];\n        // If a format prop was defined, apply it to the array\n        if (props.format) value = props.format(value);\n        // If the values are objects with @id field, turn it to a simple string\n        return value.map(v => (typeof v === 'object' ? v.id || v['@id'] : v));\n      }}\n    />\n  );\n};\n\nexport default ReferenceArrayInput;\n","import React, { useEffect, useState } from 'react';\nimport { ArrayInput, SimpleFormIterator, TextInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useReferenceInputStyles = makeStyles({\n  form: {\n    display: 'flex'\n  },\n  input: {\n    paddingRight: '20px'\n  }\n});\n\nconst useHideInputStyles = makeStyles({\n  root: {\n    display: 'none'\n  }\n});\n\nconst ReificationArrayInput = props => {\n  const { reificationClass, children, ...otherProps } = props;\n  const flexFormClasses = useReferenceInputStyles();\n  const hideInputStyles = useHideInputStyles();\n\n  return (\n    <ArrayInput {...otherProps}>\n      <SimpleFormIterator classes={{ form: flexFormClasses.form }}>\n        {React.Children.map(props.children, (child, i) => {\n          return React.cloneElement(child, {\n            className: flexFormClasses.input\n          });\n        })}\n        <TextInput className={hideInputStyles.root} source=\"type\" initialValue={reificationClass} />\n      </SimpleFormIterator>\n    </ArrayInput>\n  );\n};\n\nexport default ReificationArrayInput;\n","const getServerKeyFromType = (type, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return dataServers[key][type];\n  });\n};\n\nexport default getServerKeyFromType;\n","// Return the first server matching with the baseUrl\nconst getServerKeyFromUri = (uri, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return uri.startsWith(dataServers[key].baseUrl);\n  });\n};\n\nexport default getServerKeyFromUri;\n","import getServerKeyFromType from './getServerKeyFromType';\nimport getServerKeyFromUri from './getServerKeyFromUri';\nimport jsonld from 'jsonld';\n\nconst fetchResource = async (resourceUri, config) => {\n  const { dataServers, httpClient, jsonContext } = config;\n\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n  const serverKey = getServerKeyFromUri(resourceUri, dataServers);\n\n  // Fetch through proxy server if it is available\n  let { json: data } =\n    serverKey !== authServerKey && dataServers[authServerKey]?.proxyUrl && dataServers[serverKey]?.noProxy !== true\n      ? await httpClient(dataServers[authServerKey].proxyUrl, {\n          method: 'POST',\n          headers: new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' }),\n          body: new URLSearchParams({ id: resourceUri })\n        })\n      : await httpClient(resourceUri, {\n          noToken: serverKey !== authServerKey\n        });\n\n  data.id = data.id || data['@id'];\n\n  // We compact only if the context is different between the frontend and the middleware\n  // TODO deep compare if the context is an object\n  if (data['@context'] !== jsonContext) {\n    data = await jsonld.compact(data, jsonContext);\n  }\n\n  return data;\n};\n\nexport default fetchResource;\n","import fetchResource from '../utils/fetchResource';\n\nconst getOneMethod = config => async (resourceId, params) => {\n  const { resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const data = await fetchResource(params.id, config);\n\n  // Transform single value into array if forceArray is set\n  if (dataModel.list?.forceArray) {\n    for (const forceArrayItem of dataModel.list?.forceArray) {\n      if (data[forceArrayItem] && !Array.isArray(data[forceArrayItem])) {\n        data[forceArrayItem] = [data[forceArrayItem]];\n      }\n    }\n  }\n\n  if (dataModel.list?.dereference) {\n    for (const dereferenceItem of dataModel.list?.dereference) {\n      if (\n        data[dereferenceItem] &&\n        typeof data[dereferenceItem] === 'string' &&\n        data[dereferenceItem].startsWith('http')\n      ) {\n        try {\n          const dataToEmbed = await fetchResource(data[dereferenceItem], config);\n          delete dataToEmbed['@context'];\n          data[dereferenceItem] = dataToEmbed;\n        } catch (e) {\n          // Ignore errors (this may happen if user does not have rights to see the resource)\n        }\n      }\n    }\n  }\n\n  return { data: data };\n};\n\nexport default getOneMethod;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import createSlug from 'speakingurl';\nimport urlJoin from 'url-join';\n\nexport const getSlugWithExtension = fileName => {\n  let fileExtension = '';\n  let splitFileName = fileName.split('.');\n  if (splitFileName.length > 1) {\n    fileExtension = splitFileName.pop();\n    fileName = splitFileName.join('.');\n  }\n  return createSlug(fileName, { lang: 'fr' }) + '.' + fileExtension;\n};\n\nexport const isFile = o => o && o.rawFile && o.rawFile instanceof File;\n\nconst getUploadsContainerUri = config => {\n  const serverKey = Object.keys(config.dataServers).find(key => config.dataServers[key].uploadsContainer);\n  if (serverKey) {\n    return urlJoin(config.dataServers[serverKey].baseUrl, config.dataServers[serverKey].uploadsContainer);\n  }\n};\n\nconst uploadFile = async (rawFile, config) => {\n  const uploadsContainerUri = getUploadsContainerUri(config);\n  if (!uploadsContainerUri) throw new Error(\"You must define an uploadsContainer in one of the server's configuration\");\n\n  const response = await config.httpClient(uploadsContainerUri, {\n    method: 'POST',\n    body: rawFile,\n    headers: new Headers({\n      // We must sluggify the file name, because we can't use non-ASCII characters in the header\n      // However we keep the extension apart (if it exists) so that it is not replaced with a -\n      // TODO let the middleware guess the extension based on the content type\n      Slug: getSlugWithExtension(rawFile.name),\n      'Content-Type': rawFile.type\n    })\n  });\n\n  if (response.status === 201) {\n    return response.headers.get('Location');\n  }\n};\n\n/*\n * Look for raw files in the record data.\n * If there are any, upload them and replace the file by its URL.\n */\nconst uploadAllFiles = async (record, config) => {\n  for (let property in record) {\n    if (record.hasOwnProperty(property)) {\n      if (Array.isArray(record[property])) {\n        for (let i = 0; i < record[property].length; i++) {\n          if (isFile(record[property][i])) {\n            record[property][i] = await uploadFile(record[property][i].rawFile, config);\n          }\n        }\n      } else {\n        if (isFile(record[property])) {\n          record[property] = await uploadFile(record[property].rawFile, config);\n        }\n      }\n    }\n  }\n  return record;\n};\n\nexport default uploadAllFiles;\n","import urlJoin from 'url-join';\n\nconst findContainersWithTypes = (types, servers, dataServers) => {\n  let containers = {};\n  let existingContainers = [];\n  Object.keys(dataServers).forEach(key1 => {\n    Object.keys(dataServers[key1].containers).forEach(key2 => {\n      if (!servers || (Array.isArray(servers) ? servers.includes(key2) : servers === key2)) {\n        Object.keys(dataServers[key1].containers[key2]).forEach(type => {\n          if (types.includes(type)) {\n            dataServers[key1].containers[key2][type].map(path => {\n              const containerUri = urlJoin(dataServers[key2].baseUrl, path);\n\n              // Avoid returning the same container several times\n              if (!existingContainers.includes(containerUri)) {\n                existingContainers.push(containerUri);\n\n                if (!containers[key1]) containers[key1] = [];\n                containers[key1].push(containerUri);\n              }\n            });\n          }\n        });\n      }\n    });\n  });\n  return containers;\n};\n\nexport default findContainersWithTypes;\n","import getOne from './getOne';\nimport uploadAllFiles from '../utils/uploadAllFiles';\nimport findContainersWithTypes from '../utils/findContainersWithTypes';\nimport getServerKeyFromUri from '../utils/getServerKeyFromUri';\n\nconst createMethod = config => async (resourceId, params) => {\n  const { dataServers, resources, httpClient, jsonContext } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const headers = new Headers();\n\n  if (dataModel.fieldsMapping?.title) {\n    headers.set('Slug', params.data[dataModel.fieldsMapping?.title]);\n  }\n\n  let containerUri, serverKey;\n  if (dataModel.create?.container) {\n    containerUri = dataModel.create?.container;\n    serverKey = getServerKeyFromUri(containerUri, dataServers);\n  } else {\n    serverKey =\n      dataModel.create?.server || Object.keys(config.dataServers).find(key => config.dataServers[key].default === true);\n    if (!serverKey) throw new Error('You must define a server for the creation, or a container, or a default server');\n\n    const containers = findContainersWithTypes(dataModel.types, [serverKey], dataServers);\n    // Extract the containerUri from the results (and ensure there is only one)\n    const serverKeys = Object.keys(containers);\n\n    if (!serverKeys || serverKeys.length === 0)\n      throw new Error(`No container with types ${JSON.stringify(dataModel.types)} found on server ${serverKey}`);\n    if (serverKeys.length > 1 || containers[serverKeys[0]].length > 1)\n      throw new Error(\n        `More than one container detected with types ${JSON.stringify(dataModel.types)} on server ${serverKey}`\n      );\n    containerUri = containers[serverKeys[0]][0];\n  }\n\n  // Upload files, if there are any\n  params.data = await uploadAllFiles(params.data, config);\n\n  const { headers: responseHeaders } = await httpClient(containerUri, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      '@context': jsonContext,\n      '@type': dataModel.types,\n      ...params.data\n    }),\n    noToken: dataServers[serverKey].authServer !== true\n  });\n\n  // Retrieve newly-created resource\n  const resourceUri = responseHeaders.get('Location');\n  return await getOne(config)(resourceId, { id: resourceUri });\n};\n\nexport default createMethod;\n","import getServerKeyFromUri from '../utils/getServerKeyFromUri';\n\nconst deleteMethod = config => async (resourceId, params) => {\n  const { dataServers, httpClient } = config;\n  const serverKey = getServerKeyFromUri(params.id, dataServers);\n\n  await httpClient(params.id, {\n    method: 'DELETE',\n    noToken: !serverKey || dataServers[serverKey].authServer !== true\n  });\n\n  return { data: { id: params.id } };\n};\n\nexport default deleteMethod;\n","const deleteManyMethod = config => async (resourceId, params) => {\n  const { httpClient } = config;\n  let ids = [];\n\n  for (let id of params.ids) {\n    try {\n      await httpClient(id, {\n        method: 'DELETE'\n      });\n      ids.push(id);\n    } catch (e) {\n      // Do nothing if we fail to delete a resource\n    }\n  }\n\n  return { data: ids };\n};\n\nexport default deleteManyMethod;\n","import urlJoin from 'url-join';\nimport getServerKeyFromType from '../utils/getServerKeyFromType';\n\nconst findCreateContainerWithTypes = (types, createServerKey, dataServers) => {\n  let containers = [];\n  Object.keys(dataServers[createServerKey].containers[createServerKey]).forEach(type => {\n    if (types.includes(type)) {\n      dataServers[createServerKey].containers[createServerKey][type].map(path => {\n        const containerUri = urlJoin(dataServers[createServerKey].baseUrl, path);\n        if (!containers.includes(containerUri)) {\n          containers.push(containerUri);\n        }\n      });\n    }\n  });\n\n  if (containers.length === 0) {\n    throw new Error(\n      `No container found matching with types ${JSON.stringify(\n        types\n      )}. You can set explicitely the create.container property of the resource.`\n    );\n  } else if (containers.length > 1) {\n    throw new Error(\n      `More than one container found matching with types ${JSON.stringify(\n        types\n      )}. You must set the create.server or create.container property for the resource.`\n    );\n  }\n\n  return containers[0];\n};\n\nconst getCreateContainer = config => resourceId => {\n  let { dataServers, resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  if (dataModel.create?.container) {\n    return dataModel.create?.container;\n  } else if (dataModel.create?.server) {\n    return findCreateContainerWithTypes(dataModel.types, dataModel.create?.server, dataServers);\n  } else {\n    const defaultServerKey = getServerKeyFromType('default', dataServers);\n    return findCreateContainerWithTypes(dataModel.types, defaultServerKey, dataServers);\n  }\n};\n\nexport default getCreateContainer;\n","import jsonld from 'jsonld';\n\nexport const isType = (type, resource) => {\n  const resourceType = resource.type || resource['@type'];\n  return Array.isArray(resourceType) ? resourceType.includes(type) : resourceType === type;\n};\n\nconst fetchContainers = async (containers, resourceId, params, config) => {\n  const { dataServers, httpClient, jsonContext } = config;\n\n  // Transform in an containerUri:serverKey object\n  const containersServers = Object.keys(containers).reduce(\n    (acc, serverKey) => ({\n      ...acc,\n      ...Object.fromEntries(containers[serverKey].map(containerUri => [containerUri, serverKey]))\n    }),\n    {}\n  );\n\n  const fetchPromises = Object.keys(containersServers).map(containerUri =>\n    httpClient(containerUri, {\n      noToken: !containersServers[containerUri] || dataServers[containersServers[containerUri]].authServer !== true\n    })\n      .then(({ json }) => {\n        // If container's context is different, compact it to have an uniform result\n        // TODO deep compare if the context is an object\n        if (json['@context'] !== jsonContext) {\n          return jsonld.compact(json, jsonContext);\n        } else {\n          return json;\n        }\n      })\n      .then(json => {\n        if (isType('ldp:Container', json)) {\n          return json['ldp:contains'];\n        } else {\n          throw new Error(containerUri + ' is not a LDP container');\n        }\n      })\n  );\n\n  // Fetch simultaneously all containers\n  let results = await Promise.all(fetchPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat.apply(...results);\n\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // Apply filter to results\n    if (params.filter) {\n      // For SPARQL queries, we use \"a\" to filter types, but in containers it must be \"type\"\n      if (params.filter.a) {\n        params.filter.type = params.filter.a;\n        delete params.filter.a;\n      }\n\n      // Remove search params from filter\n      if (params.filter.q) {\n        delete params.filter.q;\n      }\n      if (Object.keys(params.filter).length > 0) {\n        returnData = returnData.filter(resource =>\n          Object.entries(params.filter).some(([k, v]) =>\n            Array.isArray(resource[k]) ? resource[k].includes(v) : resource[k] === v\n          )\n        );\n      }\n    }\n\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] && b[params.sort.field]) {\n          if (params.sort.order === 'ASC') {\n            return a[params.sort.field].localeCompare(b[params.sort.field]);\n          } else {\n            return b[params.sort.field].localeCompare(a[params.sort.field]);\n          }\n        } else {\n          return true;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchContainers;\n","const getEmbedFrame = paths => {\n  let embedFrame = {},\n    predicates;\n  if (paths) {\n    for (let path of paths) {\n      if (path.includes('/')) {\n        predicates = path.split('/').reverse();\n      } else {\n        predicates = [path];\n      }\n      embedFrame = {\n        ...embedFrame,\n        ...predicates.reduce(\n          (accumulator, predicate) => ({\n            [predicate]: {\n              '@embed': '@last',\n              ...accumulator\n            }\n          }),\n          {}\n        )\n      };\n    }\n    return embedFrame;\n  }\n};\n\nexport default getEmbedFrame;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","import md5 from 'crypto-js/md5';\nimport DataFactory from '@rdfjs/data-model';\nconst { namedNode, quad, variable } = DataFactory;\n\n// Transform ['ont:predicate1/ont:predicate2'] to ['ont:predicate1', 'ont:predicate1/ont:predicate2']\nconst extractNodes = predicates => {\n  let nodes = [];\n  if (predicates) {\n    for (let predicate of predicates) {\n      if (predicate.includes('/')) {\n        const nodeNames = predicate.split('/');\n        for (let i = 1; i <= nodeNames.length; i++) {\n          nodes.push(nodeNames.slice(0, i).join('/'));\n        }\n      } else {\n        nodes.push(predicate);\n      }\n    }\n  }\n  return nodes;\n};\n\nconst generateSparqlVarName = node => md5(node);\n\nconst getParentNode = node => node.includes('/') && node.split('/')[0];\n\nconst getPredicate = node => (node.includes('/') ? node.split('/')[1] : node);\n\nconst buildOptionalQuery = (queries, parentNode = false) =>\n  queries\n    .filter(q => q.parentNode === parentNode)\n    .map(q => ({\n      type: 'optional',\n      patterns: [\n        {\n          type: 'bgp',\n          triples: q.query\n        },\n        buildOptionalQuery(queries, q.node)\n      ]\n    }));\n\nconst buildDereferenceQuery = (predicates, ontologies) => {\n  let queries = [];\n  const nodes = extractNodes(predicates);\n\n  if (nodes && ontologies && ontologies.length > 0) {\n    for (let node of nodes) {\n      const parentNode = getParentNode(node);\n      const predicate = getPredicate(node);\n      const varName = generateSparqlVarName(node);\n      const parentVarName = parentNode ? generateSparqlVarName(parentNode) : '1';\n      const filterPrefix = predicate.split(':')[0];\n      const filterValue = predicate.split(':')[1];\n      const filterOntology = ontologies.find(ontology => ontology.prefix === filterPrefix);\n      const query = [\n        quad(variable('s' + parentVarName), namedNode(filterOntology.url + filterValue), variable('s' + varName)),\n        quad(variable('s' + varName), variable('p' + varName), variable('o' + varName))\n      ];\n\n      queries.push({\n        node,\n        parentNode,\n        query: query,\n        filter: '' // `FILTER(isBLANK(?s${varName})) .`\n      });\n    }\n    return {\n      construct: queries.length > 0 ? queries.map(q => q.query).reduce((pre, cur) => pre.concat(cur)) : null,\n      where: buildOptionalQuery(queries)\n    };\n  } else {\n    return {\n      construct: '',\n      where: ''\n    };\n  }\n};\n\nexport default buildDereferenceQuery;\n","import buildDereferenceQuery from './buildDereferenceQuery';\nimport DataFactory from '@rdfjs/data-model';\nconst { literal, namedNode, quad, variable } = DataFactory;\n\n// Regenerate a SPARQL query from a JSON object\nlet SparqlGenerator = require('sparqljs').Generator;\nlet generator = new SparqlGenerator({\n  /* prefixes, baseIRI, factory, sparqlStar */\n});\n\nconst buildSparqlQuery = ({ containers, params: { filter }, dereference, ontologies }) => {\n  // sparqljsParams : init CONSTRUCT clause\n  let sparqljsParams = {\n    queryType: 'CONSTRUCT',\n    template: [quad(variable('s1'), variable('p1'), variable('o1'))],\n    where: [\n      {\n        type: 'bgp',\n        triples: [quad(variable('s1'), variable('p1'), variable('o1'))]\n      },\n      {\n        type: 'filter',\n        expression: {\n          type: 'operation',\n          operator: 'isiri',\n          args: [variable('s1')]\n        }\n      },\n      {\n        type: 'filter',\n        expression: {\n          type: 'operation',\n          operator: 'in',\n          args: [variable('containerUri'), containers.map(containerUri => namedNode(containerUri))]\n        }\n      },\n      {\n        type: 'bgp',\n        triples: [quad(variable('containerUri'), namedNode('http://www.w3.org/ns/ldp#contains'), variable('s1'))]\n      }\n    ],\n    type: 'query',\n    prefixes: {}\n  };\n\n  // sparqljsParams : prefixes property fill from ontologies\n  ontologies.map(ontology => {\n    sparqljsParams.prefixes = {\n      ...sparqljsParams.prefixes,\n      [ontology.prefix]: ontology.url\n    };\n  });\n\n  // sparqljsParams : build dereference\n  const dereferenceQueryForSparqlJs = buildDereferenceQuery(dereference, ontologies);\n  if (dereferenceQueryForSparqlJs && dereferenceQueryForSparqlJs.construct) {\n    sparqljsParams.where = sparqljsParams.where.concat(dereferenceQueryForSparqlJs.where);\n    sparqljsParams.template = sparqljsParams.template.concat(dereferenceQueryForSparqlJs.construct);\n  }\n\n  // sparqljsParams : check for filters\n  if (filter && Object.keys(filter).length > 0) {\n    const isSPARQLFilter = filter.sparqlWhere && Object.keys(filter.sparqlWhere).length > 0;\n    const isQFilter = filter.q && filter.q.length > 0;\n\n    // sparqljs filter \"sparqlWhere\" :\n    if (isSPARQLFilter) {\n      /* \n      Example of sparqlWhere usage : \n      - url :\n      http://localhost:5000/Organization?filter=%7B%22q%22%3A%20%22orga%22%2C%22sparqlWhere%22%3A%20%7B%0A%22type%22%3A%20%22bgp%22%2C%0A%22triples%22%3A%20%5B%7B%0A%22subject%22%3A%20%7B%0A%22termType%22%3A%20%22Variable%22%2C%0A%22value%22%3A%20%22s1%22%0A%7D%2C%0A%22predicate%22%3A%20%7B%0A%22termType%22%3A%20%22NameNode%22%2C%0A%22value%22%3A%20%22http%3A%2F%2Fvirtual-assembly.org%2Fontologies%2Fpair%23label%22%0A%7D%2C%0A%22object%22%3A%20%7B%0A%22termType%22%3A%20%22Literal%22%2C%0A%22value%22%3A%20%22orga2%22%0A%7D%0A%7D%5D%0A%7D%7D\n      - json :\n      {\n        \"q\": \"orga\",\n        \"sparqlWhere\": {\n          \"type\": \"bgp\",\n          \"triples\": [{\n              \"subject\": {\"termType\": \"Variable\",\"value\": \"s1\"},\n              \"predicate\": {\"termType\": \"NameNode\",\"value\": \"http://virtual-assembly.org/ontologies/pair#label\"},\n              \"object\": {\"termType\": \"Literal\",\"value\": \"orga2\"}\n          }]\n        }\n      }\n      */\n      sparqljsParams.where.push(filter.sparqlWhere);\n    }\n\n    // sparqljs filter \"q\" (full-text search) :\n    if (isQFilter) {\n      sparqljsParams.where.push({\n        type: 'group',\n        patterns: [\n          {\n            queryType: 'SELECT',\n            variables: [variable('s1')],\n            where: [\n              {\n                type: 'bgp',\n                triples: [quad(variable('s1'), variable('p1'), variable('o1'))]\n              },\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'regex',\n                  args: [\n                    {\n                      type: 'operation',\n                      operator: 'lcase',\n                      args: [\n                        {\n                          type: 'operation',\n                          operator: 'str',\n                          args: [variable('o1')]\n                        }\n                      ]\n                    },\n                    literal(filter.q.toLowerCase(), '', namedNode('http://www.w3.org/2001/XMLSchema#string'))\n                  ]\n                }\n              },\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'notexists',\n                  args: [\n                    {\n                      type: 'bgp',\n                      triples: [\n                        quad(\n                          variable('s1'),\n                          namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n                          variable('o1')\n                        )\n                      ]\n                    }\n                  ]\n                }\n              }\n            ],\n            type: 'query'\n          }\n        ]\n      });\n    }\n\n    // sparqljs \"a\" and other filters :\n    // SPARQL keyword a = filter based on the class of a resource (example => 'a': 'pair:OrganizationType')\n    // Other filters are based on a value (example => 'petr:hasAudience': 'http://localhost:3000/audiences/tout-public')\n    Object.keys(filter).forEach(filterKey => {\n      if (filterKey !== 'sparqlWhere' && filterKey !== 'q') {\n        const filterItem = filterKey === 'a' ? filter[filterKey] : filterKey;\n        const filterPrefix = filterItem.split(':')[0];\n        const filterValue = filterItem.split(':')[1];\n        const filterOntology = ontologies.find(ontology => ontology.prefix === filterPrefix);\n        const filterPredicateValue =\n          filterKey === 'a' ? 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' : filterOntology.url + filterValue;\n        const filterObjectValue = filterKey === 'a' ? filterOntology.url + filterValue : filter[filterKey];\n        \n        sparqljsParams.where.push({\n          type: 'bgp',\n          triples: [quad(\n            variable('s1'),\n            namedNode(filterPredicateValue),\n            filterObjectValue.startsWith('http') ? namedNode(filterObjectValue) : literal(filterObjectValue)\n          )]\n        });\n      }\n    });\n  }\n\n  const sparqljsQuery = generator.stringify(sparqljsParams);\n\n  if (filter.q) {\n    delete filter.q;\n  }\n\n  console.log('SPARQLJS------------------sparqljsParams:', sparqljsParams);\n  console.log('SPARQLJS------------------ sparqljsQuery:', sparqljsQuery);\n  \n  return sparqljsQuery;\n};\n\nexport default buildSparqlQuery;\n","import getEmbedFrame from './getEmbedFrame';\nimport buildSparqlQuery from './buildSparqlQuery';\nimport jsonld from 'jsonld';\n\nconst fetchSparqlEndpoints = async (containers, resourceId, params, config) => {\n  const { dataServers, resources, httpClient, jsonContext, ontologies } = config;\n  const dataModel = resources[resourceId];\n\n  const frame = {\n    '@context': jsonContext,\n    '@type': dataModel.types,\n    // Embed only what we explicitly asked to dereference\n    // Otherwise we may have same-type resources embedded in other resources\n    '@embed': '@never',\n    ...getEmbedFrame(dataModel.list?.dereference)\n  };\n\n  const sparqlQueryPromises = Object.keys(containers).map(\n    serverKey =>\n      new Promise((resolve, reject) => {\n        const sparqlQuery = buildSparqlQuery({\n          containers: containers[serverKey],\n          params: { ...params, filter: { ...dataModel.list?.filter, ...params.filter } },\n          dereference: dataModel.list?.dereference,\n          ontologies\n        });\n\n        httpClient(dataServers[serverKey].sparqlEndpoint, {\n          method: 'POST',\n          body: sparqlQuery,\n          noToken: dataServers[serverKey].authServer !== true\n        })\n          .then(({ json }) => {\n            // omitGraph option force results to be in a @graph, even if we have a single result\n            return jsonld.frame(json, frame, { omitGraph: false });\n          })\n          .then(compactJson => {\n            resolve(compactJson['@graph'] || []);\n          })\n          .catch(e => reject(e));\n      })\n  );\n\n  // Run simultaneous SPARQL queries\n  let results = await Promise.all(sparqlQueryPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat.apply(...results);\n\n    // Add id in addition to @id, as this is what React-Admin expects\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // TODO sort and paginate the results in the SPARQL query to improve performances\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] && b[params.sort.field]) {\n          if (params.sort.order === 'ASC') {\n            return a[params.sort.field].localeCompare(b[params.sort.field]);\n          } else {\n            return b[params.sort.field].localeCompare(a[params.sort.field]);\n          }\n        } else {\n          return true;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchSparqlEndpoints;\n","import urlJoin from 'url-join';\n\nconst findContainersWithPaths = (paths, dataServers) => {\n  let containers = {};\n  Object.keys(paths).forEach(serverKey => {\n    if (dataServers[serverKey]) {\n      containers[serverKey] = [];\n      paths[serverKey].forEach(path => {\n        containers[serverKey].push(urlJoin(dataServers[serverKey].baseUrl, path));\n      });\n    } else {\n      throw new Error('No server found with key ' + serverKey);\n    }\n  });\n  return containers;\n};\n\nexport default findContainersWithPaths;\n","import findContainersWithTypes from '../utils/findContainersWithTypes';\nimport fetchContainers from '../utils/fetchContainers';\nimport fetchSparqlEndpoints from '../utils/fetchSparqlEndpoints';\nimport findContainersWithPaths from '../utils/findContainersWithPath';\n\nconst getListMethod = config => async (resourceId, params = {}) => {\n  let { dataServers, resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  let containers;\n  if (dataModel.list?.containers && Object.keys(dataModel.list.containers).length > 0) {\n    // If containers are set explicitly, use them\n    containers = findContainersWithPaths(dataModel.list.containers, dataServers);\n  } else {\n    containers = findContainersWithTypes(dataModel.types, dataModel.list?.servers, dataServers);\n  }\n\n  console.log('containers', containers);\n\n  if (dataModel.list?.fetchContainer) {\n    return fetchContainers(containers, resourceId, params, config);\n  } else {\n    return fetchSparqlEndpoints(containers, resourceId, params, config);\n  }\n};\n\nexport default getListMethod;\n","import getOne from './getOne';\n\nconst getManyMethod = config => async (resourceId, params) => {\n  const { returnFailedResources } = config;\n\n  let returnData = [];\n\n  for (let id of params.ids) {\n    id = typeof id === 'object' ? id['@id'] : id;\n\n    try {\n      const { data } = await getOne(config)(resourceId, { id });\n      returnData.push(data);\n    } catch (e) {\n      // Catch if one resource fails to load\n      // Otherwise no references will be show if only one is missing\n      // See https://github.com/marmelab/react-admin/issues/5190\n      if (returnFailedResources) {\n        // Return only the ID of the resource\n        returnData.push({ id });\n      } else {\n        // Do nothing. The resource will not appear in the results.\n      }\n    }\n  }\n\n  return { data: returnData };\n};\n\nexport default getManyMethod;\n","import getList from './getList';\n\nconst getManyReferenceMethod = config => async (resourceId, params) => {\n  params.filter = { ...params.filter, [params.target]: params.id };\n  delete params.target;\n  return await getList(config)(resourceId, params);\n};\n\nexport default getManyReferenceMethod;\n","import uploadAllFiles from '../utils/uploadAllFiles';\nimport getServerKeyFromUri from '../utils/getServerKeyFromUri';\n\nconst updateMethod = config => async (resourceId, params) => {\n  const { dataServers, httpClient, jsonContext } = config;\n  const serverKey = getServerKeyFromUri(params.id, dataServers);\n\n  // Upload files, if there are any\n  params.data = await uploadAllFiles(params.data, config);\n\n  await httpClient(params.id, {\n    method: 'PUT',\n    body: JSON.stringify({\n      '@context': jsonContext,\n      ...params.data\n    }),\n    noToken: !serverKey || dataServers[serverKey].authServer !== true\n  });\n\n  return { data: params.data };\n};\n\nexport default updateMethod;\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import jwtDecode from 'jwt-decode';\nimport getServerKeyFromType from './getServerKeyFromType';\nimport urlJoin from 'url-join';\n\nconst fetchUserConfig = async config => {\n  const { dataServers, httpClient } = config;\n  const token = localStorage.getItem('token');\n  const podKey = getServerKeyFromType('pod', dataServers);\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n\n  // If the user is logged in\n  if (token) {\n    const { webId } = jwtDecode(token);\n    let userData;\n\n    try {\n      const { json } = await httpClient(webId);\n      userData = json;\n    } catch (e) {\n      console.error(e);\n      // If the webId cannot be fetched, assume an invalid token and disconnect the user\n      localStorage.removeItem('token');\n      window.location.reload();\n      return;\n    }\n\n    // If we have a POD server\n    if (podKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[podKey].name = 'My Pod';\n      config.dataServers[podKey].baseUrl = urlJoin(webId, 'data'); // TODO find POD URI from user profile\n      config.dataServers[podKey].sparqlEndpoint =\n        userData.endpoints?.['void:sparqlEndpoint'] || urlJoin(webId, 'sparql');\n    }\n\n    if (authServerKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[authServerKey].proxyUrl = userData.endpoints?.proxyUrl;\n    }\n  } else {\n    if (podKey) {\n      // If the user is not logged in, ignore the POD server\n      delete config.dataServers[podKey];\n    }\n  }\n};\n\nexport default fetchUserConfig;\n","const fetchVoidEndpoints = async config => {\n  const fetchPromises = Object.values(config.dataServers)\n    .filter(server => server.pod !== true)\n    .map(server =>\n      config\n        .httpClient(new URL('/.well-known/void', server.baseUrl))\n        .then(result => ({ data: result.json }))\n        .catch(e => {\n          if (e.status === 404) {\n            return { error: e };\n          } else {\n            throw e;\n          }\n        })\n    );\n\n  try {\n    const results = await Promise.all(fetchPromises);\n    for (let result of results) {\n      // Ignore unfetchable endpoints\n      if (result.data) {\n        // TODO modify config.dataServers based on the VOID configs returned\n      }\n    }\n  } catch (e) {\n    // Do not throw error if no endpoint found\n  }\n};\n\nexport default fetchVoidEndpoints;\n","import React from 'react';\nimport { DateTimeInput as RaDateTimeInput } from 'react-admin';\n\n/**\n * @deprecated Use the component from the @semapps/date-components instead\n */\nconst DateTimeInput = props => (\n  <RaDateTimeInput {...props} format={value => value && value.replace(' ', 'T').replace('Z', '')} />\n);\n\nexport default DateTimeInput;\n","import React from 'react';\nimport { useQueryWithStore } from 'react-admin';\nimport { default as FilterHandler } from './FilterHandler';\n\n/*\n * @example Label used in examples\n *  const Label = ({label, ...otherProps})=>{\n *     return <h2>{label}</h2>\n *  }\n *\n * @example show header for each group with group property thanks to groupHeader\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupHeader={({group,...otherProps}) => <Label {...otherProps} label={group['pair:label']}></Label> }\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example call chhildren with label thanks to groupLabel\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example conditional show of group if no data in source. Conditionale groupHeader is not possible because GroupedArrayField define group before filter ; need use chhildren.\n * const ConditionalSourceDefinedHandler = ({record,source,children,...otherProps})=>{\n *   if (record?.[source] && (!Array.isArray(record[source])||record[source].length>0)){\n *     return  React.Children.map(children, (child, i) => {\n *         return React.cloneElement(child, {...otherProps,record,source});\n *       })\n *   }else{\n *     return <></>\n *   }\n * }\n *\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *  <ConditionalSourceDefinedHandler>\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n *  </ConditionalSourceDefinedHandler>\n * </GroupedReferenceHandler>\n *\n *\n */\nconst GroupedReferenceHandler = ({\n  children,\n  groupReference,\n  groupLabel,\n  groupHeader,\n  filterProperty,\n  ...otherProps\n}) => {\n  const { data } = useQueryWithStore({\n    type: 'getList',\n    resource: groupReference,\n    payload: {}\n  });\n\n  return (\n    <>\n      {data?.map((data, index) => {\n        let filter = {};\n        filter[filterProperty] = data.id;\n        return (\n          <>\n            {groupHeader && groupHeader({ ...otherProps, group: data })}\n            <FilterHandler {...otherProps} filter={filter} label={data[groupLabel]}>\n              {children}\n            </FilterHandler>\n          </>\n        );\n      })}\n    </>\n  );\n};\n\nexport default GroupedReferenceHandler;\n","import React from 'react';\nimport { ImageField as RaImageField } from 'react-admin';\n\nconst ImageField = ({ record, source, ...otherProps }) => {\n  // For the display, we need to have the URI in a src property\n  if (typeof record === 'string') record = { [source]: record };\n  return <RaImageField record={record} source={source} {...otherProps} />;\n};\n\nexport default ImageField;\n","import React from 'react';\nimport { ReferenceInput as RaReferenceInput, useResourceContext } from 'react-admin';\n\nconst ReferenceInput = props => {\n  const resource = useResourceContext({});\n  return (\n    <RaReferenceInput\n      {...props}\n      resource={resource}\n      format={value => {\n        // If there is no value, return immediately\n        if (!value) return value;\n        // If a format prop was defined, apply it\n        if (props.format) value = props.format(value);\n        // If the value is an object with an @id field, return the uri\n        return typeof value === 'object' ? value.id || value['@id'] : value;\n      }}\n    />\n  );\n};\n\nexport default ReferenceInput;\n","import createMethod from './methods/create';\nimport deleteMethod from './methods/delete';\nimport deleteManyMethod from './methods/deleteMany';\nimport getCreateContainerMethod from './methods/getCreateContainer';\nimport getListMethod from './methods/getList';\nimport getManyMethod from './methods/getMany';\nimport getManyReferenceMethod from './methods/getManyReference';\nimport getOneMethod from './methods/getOne';\nimport updateMethod from './methods/update';\nimport fetchUserConfig from './utils/fetchUserConfig';\nimport fetchVoidEndpoints from './utils/fetchVoidEndpoints';\nimport getServerKeyFromType from './utils/getServerKeyFromType';\n\nconst dataProvider = config => {\n  // TODO verify all data provider config + data models\n  if (!getServerKeyFromType('default', config.dataServers))\n    throw new Error('You must define a default server in your dataServers config');\n\n  if (!config.jsonContext) config.jsonContext = Object.fromEntries(config.ontologies.map(o => [o.prefix, o.url]));\n  if (!config.returnFailedResources) config.returnFailedResources = false;\n\n  const fetchUserConfigPromise = fetchUserConfig(config);\n  const fetchVoidEndpointsPromise = fetchVoidEndpoints(config);\n\n  const waitForVoidEndpoints = method => async (...arg) => {\n    await fetchUserConfigPromise;\n    await fetchVoidEndpointsPromise; // Return immediately if promise is fulfilled\n    return await method(...arg);\n  };\n\n  return {\n    getList: waitForVoidEndpoints(getListMethod(config)),\n    getOne: waitForVoidEndpoints(getOneMethod(config)),\n    getMany: waitForVoidEndpoints(getManyMethod(config)),\n    getManyReference: waitForVoidEndpoints(getManyReferenceMethod(config)),\n    create: waitForVoidEndpoints(createMethod(config)),\n    update: waitForVoidEndpoints(updateMethod(config)),\n    updateMany: () => {\n      throw new Error('updateMany is not implemented yet');\n    },\n    delete: waitForVoidEndpoints(deleteMethod(config)),\n    deleteMany: waitForVoidEndpoints(deleteManyMethod(config)),\n    getCreateContainer: waitForVoidEndpoints(getCreateContainerMethod(config))\n  };\n};\n\nexport default dataProvider;\n","import { fetchUtils } from 'react-admin';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) options.headers = new Headers();\n\n  switch (options.method) {\n    case 'POST':\n    case 'PATCH':\n    case 'PUT':\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      if (!options.headers.has('Content-Type')) options.headers.set('Content-Type', 'application/ld+json');\n      break;\n\n    case 'DELETE':\n      break;\n\n    case 'GET':\n    default:\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      break;\n  }\n\n  if (!options.noToken) {\n    const token = localStorage.getItem('token');\n    if (token) options.headers.set('Authorization', `Bearer ${token}`);\n  }\n\n  return fetchUtils.fetchJson(url, options);\n};\n\nexport default httpClient;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useCreateContainer = resourceId => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [createContainer, setCreateContainer] = useState();\n\n  useEffect(() => {\n    if (resourceId) {\n      dataProvider.getCreateContainer(resourceId).then(containerUri => setCreateContainer(containerUri));\n    }\n  }, [resourceId]);\n\n  return createContainer;\n};\n\nexport default useCreateContainer;\n"],"names":["ReferenceArrayField","record","source","otherProps","Array","isArray","map","i","id","React","RaReferenceArrayField","defaultProps","addLabel","ReferenceField","_typeof","RaReferenceField","FilterHandler","children","filter","useState","filtered","setFiltered","useEffect","filteredData","r","eq","key","value","includes","newRecord","length","undefined","Children","child","cloneElement","ReferenceArrayInput","props","resource","useResourceContext","RaReferenceArrayInput","format","v","useReferenceInputStyles","makeStyles","form","display","input","paddingRight","useHideInputStyles","root","getServerKeyFromType","type","dataServers","Object","keys","find","getServerKeyFromUri","uri","startsWith","baseUrl","fetchResource","resourceUri","config","httpClient","jsonContext","authServerKey","serverKey","_dataServers$authServ","proxyUrl","noProxy","method","headers","Headers","body","URLSearchParams","noToken","data","json","jsonld","compact","getOneMethod","resourceId","params","resources","dataModel","Error","list","_dataModel$list","forceArray","_dataModel$list2","forceArrayItem","_dataModel$list3","dereference","_dataModel$list4","dereferenceItem","dataToEmbed","context","definition","this","normalize","strArray","resultArray","TypeError","match","first","shift","replace","component","push","str","join","parts","split","arguments","slice","call","module","exports","isFile","o","rawFile","File","getUploadsContainerUri","uploadsContainer","urlJoin","uploadFile","uploadsContainerUri","Slug","fileName","name","fileExtension","splitFileName","pop","createSlug","lang","response","status","get","uploadAllFiles","property","hasOwnProperty","findContainersWithTypes","types","servers","containers","existingContainers","forEach","key1","key2","path","containerUri","createMethod","fieldsMapping","_dataModel$fieldsMapp","title","set","_dataModel$fieldsMapp2","create","_dataModel$create","container","_dataModel$create2","server","serverKeys","JSON","stringify","authServer","responseHeaders","getOne","deleteMethod","deleteManyMethod","ids","findCreateContainerWithTypes","createServerKey","getCreateContainer","_dataModel$create3","_dataModel$create4","defaultServerKey","fetchContainers","containersServers","reduce","acc","fromEntries","fetchPromises","then","resourceType","Promise","all","results","total","concat","apply","returnData","item","a","q","entries","some","k","sort","b","field","order","localeCompare","pagination","page","perPage","getEmbedFrame","paths","predicates","embedFrame","reverse","accumulator","predicate","CryptoJS","Math","crypto","window","self","globalThis","msCrypto","global","require","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","j","ceil","random","nBytes","C_enc","enc","hexChars","bite","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","C_algo","HMAC","algo","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","c","d","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","x","s","t","n","HmacMD5","namedNode","DataFactory","quad","variable","generateSparqlVarName","node","md5","buildOptionalQuery","queries","parentNode","patterns","triples","query","buildDereferenceQuery","ontologies","nodes","nodeNames","extractNodes","getParentNode","getPredicate","varName","parentVarName","filterPrefix","filterValue","filterOntology","ontology","prefix","url","construct","pre","cur","where","literal","generator","SparqlGenerator","Generator","buildSparqlQuery","sparqljsParams","queryType","template","expression","operator","args","prefixes","dereferenceQueryForSparqlJs","isSPARQLFilter","sparqlWhere","isQFilter","variables","toLowerCase","filterKey","filterItem","filterPredicateValue","filterObjectValue","sparqljsQuery","console","log","fetchSparqlEndpoints","frame","sparqlQueryPromises","resolve","reject","sparqlQuery","sparqlEndpoint","omitGraph","compactJson","findContainersWithPaths","getListMethod","fetchContainer","getManyMethod","returnFailedResources","getManyReferenceMethod","target","getList","updateMethod","InvalidCharacterError","atob","bind","bs","buffer","bc","idx","output","charAt","indexOf","fetchUserConfig","token","localStorage","getItem","podKey","jwtDecode","webId","userData","error","removeItem","location","reload","endpoints","_userData$endpoints2","fetchVoidEndpoints","values","pod","URL","result","RaDateTimeInput","groupReference","groupLabel","groupHeader","filterProperty","useQueryWithStore","payload","index","group","label","RaImageField","RaReferenceInput","reificationClass","flexFormClasses","hideInputStyles","ArrayInput","SimpleFormIterator","classes","className","TextInput","initialValue","fetchUserConfigPromise","fetchVoidEndpointsPromise","waitForVoidEndpoints","getMany","getManyReference","updateMany","deleteMany","getCreateContainerMethod","options","has","fetchUtils","fetchJson","dataProvider","useContext","DataProviderContext","createContainer","setCreateContainer"],"mappings":"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"}