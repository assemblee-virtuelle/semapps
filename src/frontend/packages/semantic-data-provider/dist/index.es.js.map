{"version":3,"file":"index.es.js","sources":["../../../node_modules/url-join/lib/url-join.js","../src/dataProvider/utils/fetchResource.js","../src/dataProvider/methods/getOne.js","../src/dataProvider/utils/uploadAllFiles.js","../src/dataProvider/utils/getServerKeyFromType.js","../src/dataProvider/utils/parseServerKeys.js","../src/dataProvider/utils/findContainersWithTypes.js","../src/dataProvider/methods/create.js","../../auth-provider/src/utils.js","../src/dataProvider/methods/delete.js","../src/dataProvider/methods/deleteMany.js","../src/dataProvider/methods/getDataServers.js","../src/dataProvider/methods/getDataModels.js","../src/dataProvider/utils/fetchContainers.js","../node_modules/isobject/index.js","../src/dataProvider/utils/getEmbedFrame.js","../src/dataProvider/utils/resolvePrefix.js","../src/dataProvider/utils/buildBaseQuery.js","../../../node_modules/crypto-js/core.js","../../../node_modules/crypto-js/md5.js","../src/dataProvider/utils/buildBlankNodesQuery.js","../src/dataProvider/utils/buildSparqlQuery.js","../src/dataProvider/utils/getBlankNodesFromDataServers.js","../src/dataProvider/utils/fetchSparqlEndpoints.js","../src/dataProvider/utils/findContainersWithPath.js","../src/dataProvider/methods/getList.js","../src/dataProvider/methods/getMany.js","../src/dataProvider/methods/getManyReference.js","../src/dataProvider/methods/update.js","../../../node_modules/jwt-decode/build/jwt-decode.esm.js","../src/dataProvider/utils/fetchUserConfig.js","../src/dataProvider/utils/fetchVoidEndpoints.js","../src/dataProvider/utils/getServerKeyFromUri.js","../src/dataProvider/dataProvider.js","../src/dataProvider/httpClient.js","../src/hooks/useGetExternalLink.js","../src/hooks/useDataModel.js","../src/hooks/useDataServers.js","../src/hooks/useContainers.js","../src/dataProvider/utils/findCreateContainerWithTypes.js","../src/hooks/useCreateContainer.js","../src/hooks/useDataModels.js","../src/reification/FilterHandler.js","../src/reification/GroupedReferenceHandler.js","../src/reification/ReificationArrayInput.js"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import jsonld from 'jsonld';\n\nconst fetchResource = async (resourceUri, config) => {\n  const { httpClient, jsonContext } = config;\n\n  let { json: data } = await httpClient(resourceUri);\n\n  if (!data) throw new Error('Not a valid JSON: ' + resourceUri);\n\n  data.id = data.id || data['@id'];\n\n  // We compact only if the context is different between the frontend and the middleware\n  // TODO deep compare if the context is an object\n  if (data['@context'] !== jsonContext) {\n    data = await jsonld.compact(data, jsonContext);\n  }\n\n  return data;\n};\n\nexport default fetchResource;\n","import fetchResource from '../utils/fetchResource';\n\nconst getOneMethod = config => async (resourceId, params) => {\n  const { resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const data = await fetchResource(params.id, config);\n\n  // Transform single value into array if forceArray is set\n  if (dataModel.list?.forceArray) {\n    for (const forceArrayItem of dataModel.list?.forceArray) {\n      if (data[forceArrayItem] && !Array.isArray(data[forceArrayItem])) {\n        data[forceArrayItem] = [data[forceArrayItem]];\n      }\n    }\n  }\n\n  // TODO activate defaultFetchPlan option\n  // if (dataModel.list?.defaultFetchPlan) {\n  //   for (const node of dataModel.list?.defaultFetchPlan) {\n  //     if (\n  //       data[node] &&\n  //       typeof data[node] === 'string' &&\n  //       data[node].startsWith('http')\n  //     ) {\n  //       try {\n  //         const dataToEmbed = await fetchResource(data[node], config);\n  //         delete dataToEmbed['@context'];\n  //         data[node] = dataToEmbed;\n  //       } catch (e) {\n  //         // Ignore errors (this may happen if user does not have rights to see the resource)\n  //       }\n  //     }\n  //   }\n  // }\n\n  return { data };\n};\n\nexport default getOneMethod;\n","import createSlug from 'speakingurl';\nimport urlJoin from 'url-join';\n\nexport const getSlugWithExtension = fileName => {\n  let fileExtension = '';\n  let splitFileName = fileName.split('.');\n  if (splitFileName.length > 1) {\n    fileExtension = splitFileName.pop();\n    fileName = splitFileName.join('.');\n  }\n  return createSlug(fileName, { lang: 'fr' }) + '.' + fileExtension;\n};\n\nexport const isFile = o => o && o.rawFile && o.rawFile instanceof File;\n\nconst getUploadsContainerUri = config => {\n  const serverKey = Object.keys(config.dataServers).find(key => config.dataServers[key].uploadsContainer);\n  if (serverKey) {\n    return urlJoin(config.dataServers[serverKey].baseUrl, config.dataServers[serverKey].uploadsContainer);\n  }\n};\n\nconst uploadFile = async (rawFile, config) => {\n  const uploadsContainerUri = getUploadsContainerUri(config);\n  if (!uploadsContainerUri) throw new Error(\"You must define an uploadsContainer in one of the server's configuration\");\n\n  const response = await config.httpClient(uploadsContainerUri, {\n    method: 'POST',\n    body: rawFile,\n    headers: new Headers({\n      // We must sluggify the file name, because we can't use non-ASCII characters in the header\n      // However we keep the extension apart (if it exists) so that it is not replaced with a -\n      // TODO let the middleware guess the extension based on the content type\n      Slug: getSlugWithExtension(rawFile.name),\n      'Content-Type': rawFile.type\n    })\n  });\n\n  if (response.status === 201) {\n    return response.headers.get('Location');\n  }\n};\n\n/*\n * Look for raw files in the record data.\n * If there are any, upload them and replace the file by its URL.\n */\nconst uploadAllFiles = async (record, config) => {\n  for (let property in record) {\n    if (record.hasOwnProperty(property)) {\n      if (Array.isArray(record[property])) {\n        for (let i = 0; i < record[property].length; i++) {\n          if (isFile(record[property][i])) {\n            record[property][i] = await uploadFile(record[property][i].rawFile, config);\n          }\n        }\n      } else {\n        if (isFile(record[property])) {\n          record[property] = await uploadFile(record[property].rawFile, config);\n        }\n      }\n    }\n  }\n  return record;\n};\n\nexport default uploadAllFiles;\n","const getServerKeyFromType = (type, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return dataServers[key][type];\n  });\n};\n\nexport default getServerKeyFromType;\n","import getServerKeyFromType from './getServerKeyFromType';\n\nconst parseServerKey = (serverKey, dataServers) => {\n  switch (serverKey) {\n    case '@default':\n      return getServerKeyFromType('default', dataServers);\n    case '@pod':\n      return getServerKeyFromType('pod', dataServers);\n    case '@authServer':\n      return getServerKeyFromType('authServer', dataServers);\n    default:\n      return serverKey;\n  }\n};\n\n// Return the list of servers keys in an array\n// parsing keywords like @all, @default, @pod and @authServer\nconst parseServerKeys = (serverKeys, dataServers) => {\n  if (Array.isArray(serverKeys)) {\n    if (serverKeys.includes('@all')) {\n      return Object.keys(dataServers);\n    } else {\n      return serverKeys.map(serverKey => parseServerKey(serverKey, dataServers));\n    }\n  } else if (typeof serverKeys === 'string') {\n    if (serverKeys === '@all') {\n      return Object.keys(dataServers);\n    } else if (serverKeys === '@remote') {\n      const defaultServerKey = getServerKeyFromType('default', dataServers);\n      return Object.keys(dataServers).filter(serverKey => serverKey !== defaultServerKey);\n    } else {\n      return [parseServerKey(serverKeys, dataServers)];\n    }\n  } else {\n    // If server key is empty\n    return false;\n  }\n};\n\nexport default parseServerKeys;\n","import urlJoin from 'url-join';\nimport parseServerKeys from './parseServerKeys';\n\nconst findContainersWithTypes = (types, serverKeys, dataServers) => {\n  let containers = {};\n  let existingContainers = [];\n\n  serverKeys = parseServerKeys(serverKeys, dataServers);\n\n  Object.keys(dataServers).forEach(key1 => {\n    Object.keys(dataServers[key1].containers).forEach(key2 => {\n      if (!serverKeys || serverKeys.includes(key2)) {\n        Object.keys(dataServers[key1].containers[key2]).forEach(type => {\n          if (types.includes(type)) {\n            dataServers[key1].containers[key2][type].map(path => {\n              const containerUri = urlJoin(dataServers[key2].baseUrl, path);\n\n              // Avoid returning the same container several times\n              if (!existingContainers.includes(containerUri)) {\n                existingContainers.push(containerUri);\n\n                if (!containers[key1]) containers[key1] = [];\n                containers[key1].push(containerUri);\n              }\n            });\n          }\n        });\n      }\n    });\n  });\n  return containers;\n};\n\nexport default findContainersWithTypes;\n","import urlJoin from 'url-join';\nimport getOne from './getOne';\nimport uploadAllFiles, { getSlugWithExtension, isFile } from '../utils/uploadAllFiles';\nimport findContainersWithTypes from '../utils/findContainersWithTypes';\nimport { defaultToArray } from \"@semapps/auth-provider/src/utils\";\n\nconst createMethod = config => async (resourceId, params) => {\n  const { dataServers, resources, httpClient, jsonContext } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const headers = new Headers();\n\n  let containerUri, serverKey;\n  if (dataModel.create?.container) {\n    serverKey = Object.keys(dataModel.create.container)[0];\n    containerUri = urlJoin(dataServers[serverKey].baseUrl, Object.values(dataModel.create.container)[0]);\n  } else {\n    serverKey = dataModel.create?.server || Object.keys(dataServers).find(key => dataServers[key].default === true);\n    if (!serverKey) throw new Error('You must define a server for the creation, or a container, or a default server');\n\n    const containers = findContainersWithTypes(dataModel.types, [serverKey], dataServers);\n    // Extract the containerUri from the results (and ensure there is only one)\n    const serverKeys = Object.keys(containers);\n\n    if (!serverKeys || serverKeys.length === 0)\n      throw new Error(`No container with types ${JSON.stringify(dataModel.types)} found on server ${serverKey}`);\n    if (serverKeys.length > 1 || containers[serverKeys[0]].length > 1)\n      throw new Error(\n        `More than one container detected with types ${JSON.stringify(dataModel.types)} on server ${serverKey}`\n      );\n    containerUri = containers[serverKeys[0]][0];\n  }\n\n  if (params.data) {\n    if (defaultToArray(dataModel.types).includes('semapps:File')) {\n      const keys = Object.keys(params.data);\n      if (keys.length !== 1 && !isFile(params.data[keys[0]])) {\n        throw new Error('For ressources of types semapps:File, you must provide a single file value');\n      }\n\n      const { rawFile } = params.data[keys[0]];\n\n      // We must sluggify the file name, because we can't use non-ASCII characters in the header\n      // However we keep the extension apart (if it exists) so that it is not replaced with a -\n      // TODO let the middleware guess the extension based on the content type\n      headers.set('Slug', getSlugWithExtension(rawFile.name));\n      headers.set('Content-Type', rawFile.type);\n\n      const response = await httpClient(containerUri, {\n        method: 'POST',\n        headers,\n        body: rawFile\n      });\n\n      // TODO fetch file info when it will be possible ?\n      // https://github.com/assemblee-virtuelle/semapps/issues/1107\n      const fileUri = response.headers.get('Location');\n      return { data: { id: fileUri } };\n    } else {\n      if (dataModel.fieldsMapping?.title) {\n        if (Array.isArray(dataModel.fieldsMapping.title)) {\n          headers.set('Slug', dataModel.fieldsMapping.title.map(f => params.data[f]).join(' '));\n        } else {\n          headers.set('Slug', params.data[dataModel.fieldsMapping.title]);\n        }\n      }\n\n      // Upload files, if there are any\n      params.data = await uploadAllFiles(params.data, config);\n\n      const response = await httpClient(containerUri, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          '@context': jsonContext,\n          '@type': dataModel.types,\n          ...params.data\n        })\n      });\n\n      // Retrieve newly-created resource\n      const resourceUri = response.headers.get('Location');\n      return await getOne(config)(resourceId, { id: resourceUri });\n    }\n  } else if (params.id) {\n    headers.set('Content-Type', 'application/sparql-update');\n\n    await httpClient(containerUri, {\n      method: 'PATCH',\n      headers,\n      body: `\n        PREFIX ldp: <http://www.w3.org/ns/ldp#>\n        INSERT DATA { <${containerUri}> ldp:contains <${params.id}>. };\n      `,\n    });\n\n    // Create must return the new data, so get them from the remote URI\n    return await getOne(config)(resourceId, { id: params.id });\n  }\n};\n\nexport default createMethod;\n","import urlJoin from 'url-join';\n\nexport const defaultToArray = value => (!value ? undefined : Array.isArray(value) ? value : [value]);\n\n// Transform the URI to the one used to find the ACL\n// To be compatible with all servers, we should do a HEAD request to the resource URI\nexport const getAclUri = resourceUri => {\n  const parsedUrl = new URL(resourceUri);\n  return urlJoin(parsedUrl.origin, '_acl', parsedUrl.pathname);\n};\n\nexport const getAclContext = baseUri => ({\n  '@base': baseUri,\n  acl: 'http://www.w3.org/ns/auth/acl#',\n  foaf: 'http://xmlns.com/foaf/0.1/',\n  'acl:agent': { '@type': '@id' },\n  'acl:agentGroup': { '@type': '@id' },\n  'acl:agentClass': { '@type': '@id' },\n  'acl:mode': { '@type': '@id' },\n  'acl:accessTo': { '@type': '@id' }\n});\n\nexport const getAuthServerUrl = async dataProvider => {\n  const dataServers = await dataProvider.getDataServers();\n  const authServer = Object.values(dataServers).find(server => server.authServer === true);\n  if (!authServer) throw new Error('Could not find a server with authServer: true. Check your dataServers config.');\n  // If the server is a POD, return the root URL instead of https://domain.com/user/data\n  return authServer.pod ? (new URL(authServer.baseUrl)).origin : authServer.baseUrl;\n};\n","const deleteMethod = config => async (resourceId, params) => {\n  const { httpClient } = config;\n\n  await httpClient(params.id, {\n    method: 'DELETE'\n  });\n\n  return { data: { id: params.id } };\n};\n\nexport default deleteMethod;\n","const deleteManyMethod = config => async (resourceId, params) => {\n  const { httpClient } = config;\n  let ids = [];\n\n  for (let id of params.ids) {\n    try {\n      await httpClient(id, {\n        method: 'DELETE'\n      });\n      ids.push(id);\n    } catch (e) {\n      // Do nothing if we fail to delete a resource\n    }\n  }\n\n  return { data: ids };\n};\n\nexport default deleteManyMethod;\n","const getDataServers = config => () => {\n  return config.dataServers;\n};\n\nexport default getDataServers;\n","const getDataModels = config => () => {\n  return config.resources;\n};\n\nexport default getDataModels;\n","import jsonld from 'jsonld';\nimport isobject from 'isobject';\n\nexport const isType = (type, resource) => {\n  const resourceType = resource.type || resource['@type'];\n  return Array.isArray(resourceType) ? resourceType.includes(type) : resourceType === type;\n};\n\nconst fetchContainers = async (containers, resourceId, params, config) => {\n  const { httpClient, jsonContext } = config;\n\n  // Transform in an containerUri:serverKey object\n  const containersServers = Object.keys(containers).reduce(\n    (acc, serverKey) => ({\n      ...acc,\n      ...Object.fromEntries(containers[serverKey].map(containerUri => [containerUri, serverKey]))\n    }),\n    {}\n  );\n\n  const fetchPromises = Object.keys(containersServers).map(containerUri =>\n    httpClient(containerUri)\n      .then(({ json }) => {\n        // If container's context is different, compact it to have an uniform result\n        // TODO deep compare if the context is an object\n        if (json['@context'] !== jsonContext) {\n          return jsonld.compact(json, jsonContext);\n        } else {\n          return json;\n        }\n      })\n      .then(json => {\n        if (isType('ldp:Container', json)) {\n          return json['ldp:contains'];\n        } else {\n          throw new Error(containerUri + ' is not a LDP container');\n        }\n      })\n  );\n\n  // Fetch simultaneously all containers\n  let results = await Promise.all(fetchPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat.apply(...results);\n\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // Apply filter to results\n    if (params.filter) {\n      // For SPARQL queries, we use \"a\" to filter types, but in containers it must be \"type\"\n      if (params.filter.a) {\n        params.filter.type = params.filter.a;\n        delete params.filter.a;\n      }\n\n      if (Object.keys(params.filter).length > 0) {\n        returnData = returnData.filter(resource => {\n          return Object.entries(params.filter).some(([k, v]) => {\n            if (k == 'q') {\n              // if fiter is q, all properties have to be checked\n              return Object.entries(resource).some(([kr, vr]) => {\n                if (!isobject(vr)) {\n                  return Array.isArray(vr) ? vr.some(va => va.includes(v)) : vr.includes(v);\n                } else {\n                  return false;\n                }\n              });\n            } else {\n              return Array.isArray(resource[k]) ? resource[k].includes(v) : resource[k].includes(v);\n            }\n          });\n        });\n      }\n    }\n\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] && b[params.sort.field]) {\n          if (params.sort.order === 'ASC') {\n            return a[params.sort.field].localeCompare(b[params.sort.field]);\n          } else {\n            return b[params.sort.field].localeCompare(a[params.sort.field]);\n          }\n        } else {\n          return true;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchContainers;\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nexport default function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","const getEmbedFrame = blankNodes => {\n  let embedFrame = {},\n    predicates;\n  if (blankNodes) {\n    for (let blankNode of blankNodes) {\n      if (blankNode.includes('/')) {\n        predicates = blankNode.split('/').reverse();\n      } else {\n        predicates = [blankNode];\n      }\n      embedFrame = {\n        ...embedFrame,\n        ...predicates.reduce(\n          (accumulator, predicate) => ({\n            [predicate]: {\n              '@embed': '@last',\n              ...accumulator\n            }\n          }),\n          {}\n        )\n      };\n    }\n    return embedFrame;\n  }\n};\n\nexport default getEmbedFrame;\n","const resolvePrefix = (item, ontologies) => {\n  if (item.startsWith('http://') || item.startsWith('https://')) {\n    // Already resolved, return the URI\n    return item;\n  } else if (item === 'a') {\n    // Special case\n    return 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n  } else {\n    const [prefix, value] = item.split(':');\n    if (value) {\n      const ontology = ontologies.find(ontology => ontology.prefix === prefix);\n      if (ontology) {\n        return ontology.url + value;\n      } else {\n        throw new Error('No ontology found with prefix ' + prefix);\n      }\n    } else {\n      throw new Error(`The value \"${item}\" is not correct. It must include a prefix or be a full URI.`);\n    }\n  }\n};\n\nexport default resolvePrefix;\n","import { namedNode, triple, variable } from '@rdfjs/data-model';\nimport resolvePrefix from './resolvePrefix';\n\nconst defaultToArray = value => (!value ? [] : Array.isArray(value) ? value : [value]);\n\n// We need to always include the type or React-Admin will not work properly\nconst typeQuery = triple(\n  variable('s1'),\n  namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n  variable('type')\n);\n\nconst buildBaseQuery = (predicates, ontologies) => {\n  let baseTriples;\n  if (predicates) {\n    baseTriples = defaultToArray(predicates).map((predicate, i) =>\n      triple(variable('s1'), namedNode(resolvePrefix(predicate, ontologies)), variable('o' + (i + 1)))\n    );\n    return {\n      construct: [typeQuery, ...baseTriples],\n      where: [typeQuery, ...baseTriples.map(triple => ({ type: 'optional', patterns: [triple] }))]\n    };\n  } else {\n    baseTriples = [triple(variable('s1'), variable('p1'), variable('o1'))];\n    return {\n      construct: baseTriples,\n      where: baseTriples\n    };\n  }\n};\n\nexport default buildBaseQuery;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","import md5 from 'crypto-js/md5';\nimport { namedNode, triple, variable } from '@rdfjs/data-model';\nimport resolvePrefix from './resolvePrefix';\n\n// Transform ['ont:predicate1/ont:predicate2'] to ['ont:predicate1', 'ont:predicate1/ont:predicate2']\nconst extractNodes = blankNodes => {\n  let nodes = [];\n  if (blankNodes) {\n    for (let predicate of blankNodes) {\n      if (predicate.includes('/')) {\n        const nodeNames = predicate.split('/');\n        for (let i = 1; i <= nodeNames.length; i++) {\n          nodes.push(nodeNames.slice(0, i).join('/'));\n        }\n      } else {\n        nodes.push(predicate);\n      }\n    }\n  }\n  return nodes;\n};\n\nconst generateSparqlVarName = node => md5(node);\n\nconst getParentNode = node => node.includes('/') && node.split('/')[0];\n\nconst getPredicate = node => (node.includes('/') ? node.split('/')[1] : node);\n\nconst buildUnionQuery = queries =>\n  queries.map(q => {\n    let triples = q.query;\n    const firstTriple = queries.find(q2 => q.parentNode === q2.node);\n    if (firstTriple !== undefined) {\n      triples = triples.concat(firstTriple.query[0]);\n    }\n    return {\n      type: 'bgp',\n      triples\n    };\n  });\n\nconst buildBlankNodesQuery = (blankNodes, baseQuery, ontologies) => {\n  let queries = [];\n  const nodes = extractNodes(blankNodes);\n\n  if (nodes && ontologies && ontologies.length > 0) {\n    for (let node of nodes) {\n      const parentNode = getParentNode(node);\n      const predicate = getPredicate(node);\n      const varName = generateSparqlVarName(node);\n      const parentVarName = parentNode ? generateSparqlVarName(parentNode) : '1';\n\n      const query = [\n        triple(variable('s' + parentVarName), namedNode(resolvePrefix(predicate, ontologies)), variable('s' + varName)),\n        triple(variable('s' + varName), variable('p' + varName), variable('o' + varName))\n      ];\n\n      queries.push({\n        node,\n        parentNode,\n        query,\n        filter: '' // `FILTER(isBLANK(?s${varName})) .`\n      });\n    }\n\n    return {\n      construct: queries.length > 0 ? queries.map(q => q.query).reduce((pre, cur) => pre.concat(cur)) : null,\n      where: {\n        type: 'union',\n        patterns: [baseQuery.where, ...buildUnionQuery(queries)]\n      }\n    };\n  } else {\n    return {\n      construct: '',\n      where: ''\n    };\n  }\n};\n\nexport default buildBlankNodesQuery;\n","import DataFactory from '@rdfjs/data-model';\nimport buildBaseQuery from './buildBaseQuery';\nimport buildBlankNodesQuery from './buildBlankNodesQuery';\nimport resolvePrefix from './resolvePrefix';\nconst { literal, namedNode, triple, variable } = DataFactory;\n\nconst SparqlGenerator = require('sparqljs').Generator;\nconst generator = new SparqlGenerator({\n  /* prefixes, baseIRI, factory, sparqlStar */\n});\n\nconst reservedFilterKeys = ['q', 'sparqlWhere', 'blankNodes', '_servers', '_predicates'];\n\nconst buildSparqlQuery = ({ containers, params: { filter }, blankNodes, predicates, ontologies }) => {\n  const baseQuery = buildBaseQuery(predicates, ontologies);\n\n  let sparqlJsParams = {\n    queryType: 'CONSTRUCT',\n    template: baseQuery.construct,\n    where: [],\n    type: 'query',\n    prefixes: Object.fromEntries(ontologies.map(ontology => [ontology.prefix, ontology.url]))\n  };\n\n  let containerWhere = [\n    {\n      type: 'values',\n      values: containers.map(containerUri => ({ '?containerUri': namedNode(containerUri) }))\n    },\n    triple(variable('containerUri'), namedNode('http://www.w3.org/ns/ldp#contains'), variable('s1')),\n    {\n      type: 'filter',\n      expression: {\n        type: 'operation',\n        operator: 'isiri',\n        args: [variable('s1')]\n      }\n    }\n  ];\n\n  let resourceWhere = [];\n\n  if (filter && Object.keys(filter).length > 0) {\n    const hasSPARQLFilter = filter.sparqlWhere && Object.keys(filter.sparqlWhere).length > 0;\n    const hasFullTextSearch = filter.q && filter.q.length > 0;\n\n    if (hasSPARQLFilter) {\n      /* \n        Example of usage :\n        {\n          \"sparqlWhere\": {\n            \"type\": \"bgp\",\n            \"triples\": [{\n              \"subject\": {\"termType\": \"Variable\", \"value\": \"s1\"},\n              \"predicate\": {\"termType\": \"NameNode\", \"value\": \"http://virtual-assembly.org/ontologies/pair#label\"},\n              \"object\": {\"termType\": \"Literal\", \"value\": \"My Organization\"}\n            }]\n          }\n        }\n      */\n      // initialize array in case of single value :\n      [].concat(filter.sparqlWhere).forEach(sw => {\n        resourceWhere.push(sw);\n      });\n    }\n\n    if (hasFullTextSearch) {\n      resourceWhere.push({\n        type: 'group',\n        patterns: [\n          {\n            queryType: 'SELECT',\n            variables: [variable('s1')],\n            where: [\n              triple(variable('s1'), variable('p1'), variable('o1')),\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'isliteral',\n                  args: [variable('o1')]\n                }\n              },\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'regex',\n                  args: [\n                    {\n                      type: 'operation',\n                      operator: 'lcase',\n                      args: [\n                        {\n                          type: 'operation',\n                          operator: 'str',\n                          args: [variable('o1')]\n                        }\n                      ]\n                    },\n                    literal(filter.q.toLowerCase(), '', namedNode('http://www.w3.org/2001/XMLSchema#string'))\n                  ]\n                }\n              }\n            ],\n            type: 'query'\n          }\n        ]\n      });\n    }\n\n    // Other filters\n    // SPARQL keyword a = filter based on the class of a resource (example => 'a': 'pair:OrganizationType')\n    // Other filters are based on a value (example => 'petr:hasAudience': 'http://localhost:3000/audiences/tout-public')\n    Object.entries(filter).forEach(([predicate, object]) => {\n      if (!reservedFilterKeys.includes(predicate)) {\n        resourceWhere.unshift(\n          triple(\n            variable('s1'),\n            namedNode(resolvePrefix(predicate, ontologies)),\n            namedNode(resolvePrefix(object, ontologies))\n          )\n        );\n      }\n    });\n  }\n\n  // Blank nodes\n  const blankNodesQuery = buildBlankNodesQuery(blankNodes, baseQuery, ontologies);\n  if (blankNodesQuery && blankNodesQuery.construct) {\n    resourceWhere = resourceWhere.concat(blankNodesQuery.where);\n    sparqlJsParams.template = sparqlJsParams.template.concat(blankNodesQuery.construct);\n  } else {\n    resourceWhere.push(baseQuery.where);\n  }\n\n  sparqlJsParams.where.push(\n    {\n      type: 'union',\n      patterns: [\n        containerWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: containerWhere\n        }\n      ]\n    },\n    {\n      type: 'union',\n      patterns: [\n        resourceWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: resourceWhere\n        }\n      ]\n    }\n  );\n\n  return generator.stringify(sparqlJsParams);\n};\n\nexport default buildSparqlQuery;\n","// Based on the dataServers config, returns the blank nodes for the given containers\nconst getBlankNodesFromDataServers = (containers, dataServers) => {\n  const blankNodes = [];\n  for (let serverKey of Object.keys(dataServers)) {\n    if (dataServers[serverKey].blankNodes) {\n      for (let containerUri of Object.keys(dataServers[serverKey].blankNodes)) {\n        if (containers.includes(containerUri)) {\n          blankNodes.push(...dataServers[serverKey].blankNodes[containerUri]);\n        }\n      }\n    }\n  }\n  // Remove duplicates\n  return [...new Set(blankNodes)];\n};\n\nexport default getBlankNodesFromDataServers;\n","import getEmbedFrame from './getEmbedFrame';\nimport buildSparqlQuery from './buildSparqlQuery';\nimport getBlankNodesFromDataServers from './getBlankNodesFromDataServers';\nimport jsonld from 'jsonld';\n\nconst compare = (a, b) => {\n  switch (typeof a) {\n    case 'string':\n      return a.localeCompare(b);\n    case 'number':\n    case 'bigint':\n      return a - b;\n    default:\n      return 0;\n  }\n};\n\nconst fetchSparqlEndpoints = async (containers, resourceId, params, config) => {\n  const { dataServers, resources, httpClient, jsonContext, ontologies } = config;\n  const dataModel = resources[resourceId];\n\n  const sparqlQueryPromises = Object.keys(containers).map(\n    serverKey =>\n      new Promise((resolve, reject) => {\n        const blankNodes =\n          params.filter?.blankNodes ||\n          dataModel.list?.blankNodes ||\n          getBlankNodesFromDataServers(containers[serverKey], dataServers);\n\n        const predicates = params.filter?._predicates || dataModel.list?.predicates;\n\n        // When the SPARQL request comes from the browser's URL, it comes as JSON string which must must be parsed\n        if (params.filter?.sparqlWhere && (typeof params.filter.sparqlWhere === 'string' || params.filter.sparqlWhere instanceof String)) {\n          params.filter.sparqlWhere = JSON.parse(decodeURIComponent(params.filter.sparqlWhere));\n        }\n        const sparqlQuery = buildSparqlQuery({\n          containers: containers[serverKey],\n          params: { ...params, filter: { ...dataModel.list?.filter, ...params.filter } },\n          blankNodes,\n          predicates,\n          ontologies\n        });\n\n        httpClient(dataServers[serverKey].sparqlEndpoint, {\n          method: 'POST',\n          body: sparqlQuery\n        })\n          .then(({ json }) => {\n            // By default, embed only the blank nodes we explicitly asked to dereference\n            // Otherwise we may have same-type resources embedded in other resources\n            // To increase performances, you can set explicitEmbedOnFraming to false (make sure the result is still OK)\n            const frame =\n              dataModel.list?.explicitEmbedOnFraming !== false\n                ? {\n                    '@context': jsonContext,\n                    '@type': dataModel.types,\n                    '@embed': '@never',\n                    ...getEmbedFrame(blankNodes)\n                  }\n                : {\n                    '@context': jsonContext,\n                    '@type': dataModel.types\n                  };\n\n            // omitGraph option force results to be in a @graph, even if we have a single result\n            return jsonld.frame(json, frame, { omitGraph: false });\n          })\n          .then(compactJson => {\n            if (compactJson['@id']) {\n              const { '@context': context, ...rest } = compactJson;\n              compactJson = {\n                '@context': context,\n                '@graph': [rest]\n              };\n            }\n            resolve(compactJson['@graph'] || []);\n          })\n          .catch(e => reject(e));\n      })\n  );\n\n  // Run simultaneous SPARQL queries\n  let results = await Promise.all(sparqlQueryPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat(...results);\n\n    // Add id in addition to @id, as this is what React-Admin expects\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // TODO sort and paginate the results in the SPARQL query to improve performances\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] !== undefined && b[params.sort.field] !== undefined) {\n          if (params.sort.order === 'ASC') {\n            return compare(a[params.sort.field], b[params.sort.field]);\n          } else {\n            return compare(b[params.sort.field], a[params.sort.field]);\n          }\n        } else {\n          return 0;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchSparqlEndpoints;\n","import urlJoin from 'url-join';\n\nconst findContainersWithPaths = (paths, dataServers) => {\n  let containers = {};\n  Object.keys(paths).forEach(serverKey => {\n    if (dataServers[serverKey]) {\n      containers[serverKey] = [];\n      paths[serverKey].forEach(path => {\n        containers[serverKey].push(urlJoin(dataServers[serverKey].baseUrl, path));\n      });\n    } else {\n      throw new Error('No server found with key ' + serverKey);\n    }\n  });\n  return containers;\n};\n\nexport default findContainersWithPaths;\n","import findContainersWithTypes from '../utils/findContainersWithTypes';\nimport fetchContainers from '../utils/fetchContainers';\nimport fetchSparqlEndpoints from '../utils/fetchSparqlEndpoints';\nimport findContainersWithPaths from '../utils/findContainersWithPath';\n\nconst getListMethod = config => async (resourceId, params = {}) => {\n  let { dataServers, resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  let containers;\n  if (!params.filter?._servers && dataModel.list?.containers) {\n    if (Array.isArray(dataModel.list?.containers))\n      throw new Error(\n        `The list.containers property of ${resourceId} dataModel must be of type object ({ serverKey: [containerUri] })`\n      );\n    // If containers are set explicitly, use them\n    containers = findContainersWithPaths(dataModel.list.containers, dataServers);\n  } else {\n    // Otherwise find the container URIs on the given servers (either in the filter or the data model)\n    containers = findContainersWithTypes(\n      dataModel.types,\n      params.filter?._servers || dataModel.list?.servers,\n      dataServers\n    );\n  }\n\n  if (dataModel.list?.fetchContainer) {\n    return fetchContainers(containers, resourceId, params, config);\n  } else {\n    return fetchSparqlEndpoints(containers, resourceId, params, config);\n  }\n};\n\nexport default getListMethod;\n","import getOne from './getOne';\n\nconst getManyMethod = config => async (resourceId, params) => {\n  const { returnFailedResources } = config;\n\n  let returnData = await Promise.all(\n    params.ids.map(id =>\n      getOne(config)(resourceId, { id: typeof id === 'object' ? id['@id'] : id })\n        .then(({ data }) => data)\n        .catch(() => {\n          // Catch if one resource fails to load\n          // Otherwise no references will be show if only one is missing\n          // See https://github.com/marmelab/react-admin/issues/5190\n          if (returnFailedResources) {\n            return { id, _error: true };\n          } else {\n            // Returning nothing\n          }\n        })\n    )\n  );\n\n  // We don't want undefined results to appear in the results as it will break with react-admin\n  returnData = returnData.filter(e => e);\n\n  return { data: returnData };\n};\n\nexport default getManyMethod;\n","import getList from './getList';\n\nconst getManyReferenceMethod = config => async (resourceId, params) => {\n  params.filter = { ...params.filter, [params.target]: params.id };\n  delete params.target;\n  return await getList(config)(resourceId, params);\n};\n\nexport default getManyReferenceMethod;\n","import uploadAllFiles from '../utils/uploadAllFiles';\n\nconst updateMethod = config => async (resourceId, params) => {\n  const { httpClient, jsonContext } = config;\n\n  // Upload files, if there are any\n  params.data = await uploadAllFiles(params.data, config);\n\n  await httpClient(params.id, {\n    method: 'PUT',\n    body: JSON.stringify({\n      '@context': jsonContext,\n      ...params.data\n    })\n  });\n\n  return { data: params.data };\n};\n\nexport default updateMethod;\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import jwtDecode from 'jwt-decode';\nimport getServerKeyFromType from './getServerKeyFromType';\nimport urlJoin from 'url-join';\n\nconst fetchUserConfig = async config => {\n  const { dataServers, httpClient } = config;\n  const token = localStorage.getItem('token');\n  const podKey = getServerKeyFromType('pod', dataServers);\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n\n  // If the user is logged in\n  if (token) {\n    const { webId } = jwtDecode(token);\n    let userData;\n\n    try {\n      const { json } = await httpClient(webId);\n      userData = json;\n    } catch (e) {\n      console.error(e);\n      // If the webId cannot be fetched, assume an invalid token and disconnect the user\n      localStorage.clear();\n      window.location.reload();\n      return;\n    }\n\n    // If we have a POD server\n    if (podKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[podKey].name = 'My Pod';\n      config.dataServers[podKey].baseUrl = urlJoin(webId, 'data'); // TODO find POD URI from user profile\n      config.dataServers[podKey].sparqlEndpoint =\n        userData.endpoints?.['void:sparqlEndpoint'] || urlJoin(webId, 'sparql');\n    }\n\n    if (authServerKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[authServerKey].proxyUrl = userData.endpoints?.proxyUrl;\n    }\n  } else {\n    // if (podKey) {\n    //   // If the user is not logged in, ignore the POD server\n    //   delete config.dataServers[podKey];\n    // }\n  }\n};\n\nexport default fetchUserConfig;\n","const defaultToArray = value => (!value ? undefined : Array.isArray(value) ? value : [value]);\n\nconst fetchVoidEndpoints = async config => {\n  const fetchPromises = Object.entries(config.dataServers)\n    .filter(([key, server]) => server.pod !== true)\n    .map(([key, server]) =>\n      config\n        .httpClient((new URL('/.well-known/void', server.baseUrl)).toString())\n        .then(result => ({ key, datasets: result.json['@graph'] }))\n        .catch(e => {\n          if (e.status === 404 || e.status === 401) {\n            return { key, error: e };\n          } else {\n            throw e;\n          }\n        })\n    );\n\n  let results = [];\n\n  try {\n    results = await Promise.all(fetchPromises);\n  } catch (e) {\n    // Do not throw error if no endpoint found\n  }\n\n  for (let result of results) {\n    config.dataServers[result.key].containers = config.dataServers[result.key].containers || {};\n    config.dataServers[result.key].blankNodes = config.dataServers[result.key].blankNodes || {};\n\n    // Ignore unfetchable endpoints\n    if (result.datasets) {\n      for (let dataset of result.datasets) {\n        const datasetServerKey = Object.keys(config.dataServers).find(\n          key => dataset['void:uriSpace'] === config.dataServers[key].baseUrl\n        );\n\n        // If the dataset is not part of a server mapped in the dataServers, ignore it\n        if (datasetServerKey) {\n          // If this is the local dataset, add the base information\n          if (datasetServerKey === result.key) {\n            config.dataServers[result.key].name = config.dataServers[result.key].name || dataset['dc:title'];\n            config.dataServers[result.key].description =\n              config.dataServers[result.key].description || dataset['dc:description'];\n            config.dataServers[result.key].sparqlEndpoint =\n              config.dataServers[result.key].sparqlEndpoint || dataset['void:sparqlEndpoint'];\n          }\n\n          config.dataServers[result.key].containers[datasetServerKey] =\n            config.dataServers[result.key].containers[datasetServerKey] || {};\n\n          for (let partition of defaultToArray(dataset['void:classPartition'])) {\n            for (let type of defaultToArray(partition['void:class'])) {\n              // Set containers by type\n              const path = partition['void:uriSpace'].replace(dataset['void:uriSpace'], '/');\n              if (config.dataServers[result.key].containers[datasetServerKey][type]) {\n                config.dataServers[result.key].containers[datasetServerKey][type].push(path);\n              } else {\n                config.dataServers[result.key].containers[datasetServerKey][type] = [path];\n              }\n\n              // Set blank nodes by containers\n              const blankNodes = defaultToArray(partition['semapps:blankNodes']);\n              if (blankNodes) {\n                config.dataServers[result.key].blankNodes[partition['void:uriSpace']] = defaultToArray(\n                  partition['semapps:blankNodes']\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default fetchVoidEndpoints;\n","// Return the first server matching with the baseUrl\nconst getServerKeyFromUri = (uri, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    if (dataServers[key].pod) {\n      // The baseUrl ends with /data so remove this part to match with the webId and webId-related URLs (/inbox, /outbox...)\n      return dataServers[key].baseUrl && uri.startsWith(dataServers[key].baseUrl.replace('/data', ''));\n    } else {\n      return uri.startsWith(dataServers[key].baseUrl);\n    }\n  });\n};\n\nexport default getServerKeyFromUri;\n","import createMethod from './methods/create';\nimport deleteMethod from './methods/delete';\nimport deleteManyMethod from './methods/deleteMany';\nimport getDataServersMethod from './methods/getDataServers';\nimport getDataModelsMethod from './methods/getDataModels';\nimport getListMethod from './methods/getList';\nimport getManyMethod from './methods/getMany';\nimport getManyReferenceMethod from './methods/getManyReference';\nimport getOneMethod from './methods/getOne';\nimport updateMethod from './methods/update';\nimport fetchUserConfig from './utils/fetchUserConfig';\nimport fetchVoidEndpoints from './utils/fetchVoidEndpoints';\nimport getServerKeyFromType from './utils/getServerKeyFromType';\nimport httpClient from \"./httpClient\";\n\nconst dataProvider = config => {\n  // TODO verify all data provider config + data models\n  if (!getServerKeyFromType('default', config.dataServers))\n    throw new Error('You must define a default server in your dataServers config');\n\n  if (!config.jsonContext) config.jsonContext = Object.fromEntries(config.ontologies.map(o => [o.prefix, o.url]));\n  if (!config.returnFailedResources) config.returnFailedResources = false;\n\n  // Configure httpClient with data servers (this is needed for proxy calls)\n  config.httpClient = httpClient(config.dataServers);\n\n  const fetchUserConfigPromise = fetchUserConfig(config);\n  const fetchVoidEndpointsPromise = fetchVoidEndpoints(config);\n\n  const waitForVoidEndpoints = method => async (...arg) => {\n    await fetchUserConfigPromise;\n    await fetchVoidEndpointsPromise; // Return immediately if promise is fulfilled\n    return await method(...arg);\n  };\n\n  return {\n    getList: waitForVoidEndpoints(getListMethod(config)),\n    getMany: waitForVoidEndpoints(getManyMethod(config)),\n    getManyReference: waitForVoidEndpoints(getManyReferenceMethod(config)),\n    getOne: waitForVoidEndpoints(getOneMethod(config)),\n    create: waitForVoidEndpoints(createMethod(config)),\n    update: waitForVoidEndpoints(updateMethod(config)),\n    updateMany: () => {\n      throw new Error('updateMany is not implemented yet');\n    },\n    delete: waitForVoidEndpoints(deleteMethod(config)),\n    deleteMany: waitForVoidEndpoints(deleteManyMethod(config)),\n    // Custom methods\n    getDataModels: waitForVoidEndpoints(getDataModelsMethod(config)),\n    getDataServers: waitForVoidEndpoints(getDataServersMethod(config)),\n    getLocalDataServers: getDataServersMethod(config),\n    fetch: waitForVoidEndpoints(config.httpClient)\n  };\n};\n\nexport default dataProvider;\n","import { fetchUtils } from 'react-admin';\nimport getServerKeyFromUri from \"./utils/getServerKeyFromUri\";\nimport getServerKeyFromType from \"./utils/getServerKeyFromType\";\n\n/*\n * HTTP client used by all calls in data provider and auth provider\n * Do proxy calls if a proxy endpoint is available and the server is different from the auth server\n */\nconst httpClient = dataServers => (url, options = {}) => {\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n  const serverKey = getServerKeyFromUri(url, dataServers);\n  const useProxy = serverKey !== authServerKey && dataServers[authServerKey]?.proxyUrl && dataServers[serverKey]?.noProxy !== true;\n\n  if (!options.headers) options.headers = new Headers();\n\n  switch (options.method) {\n    case 'POST':\n    case 'PATCH':\n    case 'PUT':\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      if (!options.headers.has('Content-Type')) options.headers.set('Content-Type', 'application/ld+json');\n      break;\n\n    case 'DELETE':\n      break;\n\n    case 'GET':\n    default:\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      break;\n  }\n\n  if (useProxy) {\n    const formData  = new FormData();\n\n    formData.append('id', url);\n    formData.append('method', options.method || 'GET');\n    formData.append('headers', JSON.stringify(Object.fromEntries(options.headers.entries())));\n\n    if (options.body) {\n      if (options.body instanceof File) {\n        formData.append('body', options.body, options.body.name);\n      } else {\n        formData.append('body', options.body);\n      }\n    }\n\n    // Post to proxy endpoint with multipart/form-data format\n    return fetchUtils.fetchJson(dataServers[authServerKey].proxyUrl, {\n      method: 'POST',\n      headers: new Headers({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }),\n      body: formData\n    });\n  } else {\n    // Add token if the server is the same as the auth server\n    if (serverKey === authServerKey) {\n      const token = localStorage.getItem('token');\n      if (token) options.headers.set('Authorization', `Bearer ${token}`);\n    }\n    return fetchUtils.fetchJson(url, options);\n  }\n};\n\nexport default httpClient;\n","import { useCallback, useMemo, useContext } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst compute = (externalLinks, record) =>\n  typeof externalLinks === 'function' ? externalLinks(record) : externalLinks;\nconst isURL = url => typeof url === 'string' && url.startsWith('http');\n\nconst useGetExternalLink = componentExternalLinks => {\n  // Since the externalLinks config is defined only locally, we don't need to wait for VOID endpoints fetching\n  const dataProvider = useContext(DataProviderContext);\n  const dataServers = dataProvider.getLocalDataServers();\n\n  const serversExternalLinks = useMemo(() => {\n    if (dataServers) {\n      return Object.fromEntries(\n        Object.values(dataServers).map(server => {\n          // If externalLinks is not defined in the data server, use external links for non-default servers\n          const externalLinks = server.externalLinks !== undefined ? server.externalLinks : !server.default;\n          return [server.baseUrl, externalLinks];\n        })\n      );\n    }\n  }, [dataServers]);\n\n  return useCallback(\n    record => {\n      const computedComponentExternalLinks = compute(componentExternalLinks, record);\n      // If the component explicitly asks not to display as external links, use an internal link\n      if (computedComponentExternalLinks === false) return false;\n\n      if (!record?.id) return false;\n\n      const serverBaseUrl = Object.keys(serversExternalLinks).find(baseUrl => record?.id.startsWith(baseUrl));\n      // If no matching data servers could be found, assume we have an internal link\n      if (!serverBaseUrl) return false;\n\n      const computedServerExternalLinks = compute(serversExternalLinks[serverBaseUrl], record);\n      // If the data server explicitly asks not to display as external links, use an internal link\n      if (computedServerExternalLinks === false) return false;\n\n      if (isURL(computedComponentExternalLinks)) {\n        return computedComponentExternalLinks;\n      } else if (isURL(computedServerExternalLinks)) {\n        return computedServerExternalLinks;\n      } else {\n        return record.id;\n      }\n    },\n    [serversExternalLinks, componentExternalLinks]\n  );\n};\n\nexport default useGetExternalLink;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModel = resourceId => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModel, setDataModel] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModel(results[resourceId]));\n  }, [dataProvider, resourceId, setDataModel]);\n\n  return dataModel;\n};\n\nexport default useDataModel;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataServers = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataServers, setDataServers] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataServers().then(results => setDataServers(results));\n  }, [dataProvider, setDataServers]);\n\n  return dataServers;\n};\n\nexport default useDataServers;\n","import { useState, useEffect } from 'react';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findContainersWithTypes from '../dataProvider/utils/findContainersWithTypes';\n\nconst useContainers = (resourceId, serverKeys = '@all') => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [containers, setContainers] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      setContainers(findContainersWithTypes(dataModel.types, serverKeys, dataServers));\n    }\n  }, [dataModel, dataServers, serverKeys]);\n\n  return containers;\n};\n\nexport default useContainers;\n","import urlJoin from 'url-join';\n\nconst findCreateContainerWithTypes = (types, createServerKey, dataServers) => {\n  let containers = [];\n\n  if (Object.keys(dataServers[createServerKey].containers[createServerKey]).length > 0) {\n    Object.keys(dataServers[createServerKey].containers[createServerKey]).forEach(type => {\n      if (types.includes(type)) {\n        dataServers[createServerKey].containers[createServerKey][type].map(path => {\n          const containerUri = urlJoin(dataServers[createServerKey].baseUrl, path);\n          if (!containers.includes(containerUri)) {\n            containers.push(containerUri);\n          }\n        });\n      }\n    });\n  }\n\n  if (containers.length === 0) {\n    throw new Error(\n      `No container found matching with types ${JSON.stringify(\n        types\n      )}. You can set explicitely the create.container property of the resource.`\n    );\n  } else if (containers.length > 1) {\n    throw new Error(\n      `More than one container found matching with types ${JSON.stringify(\n        types\n      )}. You must set the create.server or create.container property for the resource.`\n    );\n  }\n\n  return containers[0];\n};\n\nexport default findCreateContainerWithTypes;\n","import { useState, useEffect } from 'react';\nimport urlJoin from 'url-join';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findCreateContainerWithTypes from '../dataProvider/utils/findCreateContainerWithTypes';\nimport getServerKeyFromType from '../dataProvider/utils/getServerKeyFromType';\n\nconst useCreateContainer = resourceId => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [createContainer, setCreateContainer] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      if (dataModel.create?.container) {\n        const [serverKey, path] = Object.entries(dataModel.create.container)[0];\n        if (!serverKey || !dataServers[serverKey]) {\n          throw new Error('Wrong key for the dataModel.create.container config of resource ' + resourceId);\n        }\n        setCreateContainer(urlJoin(dataServers[serverKey].baseUrl, path));\n      } else if (dataModel.create?.server) {\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, dataModel.create?.server, dataServers));\n      } else {\n        const defaultServerKey = getServerKeyFromType('default', dataServers);\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, defaultServerKey, dataServers));\n      }\n    }\n  }, [dataModel, dataServers, setCreateContainer]);\n\n  return createContainer;\n};\n\nexport default useCreateContainer;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModels = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModels, setDataModels] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModels(results));\n  }, [dataProvider, setDataModels]);\n\n  return dataModels;\n};\n\nexport default useDataModels;\n","import React, { useState, useEffect } from 'react';\n\n/**\n * @example\n * <Show>\n *   <FilterHandler\n *     source=\"property\" // ex pair:organizationOfMembership\n *     filter={{\n *       'propertyToFilter':'value'\n *     }} // ex {{'pair:membershipRole':'http://localhost:3000/membership-roles/role-1'}}\n *     >\n *     <SingleFieldList>\n *    </SingleFieldList>\n *   </FilterHandler>\n * </Show>\n */\n\nconst FilterHandler = ({ children, record, filter, source, ...otherProps }) => {\n  const [filtered, setFiltered] = useState();\n  useEffect(() => {\n    if (record && source && Array.isArray(record?.[source])) {\n      const filteredData = record?.[source].filter(r => {\n        let eq = true;\n        for (const key in filter) {\n          const value = r[key];\n          if (Array.isArray(value)) {\n            if (!value.includes(filter[key])) {\n              eq = false;\n            }\n          } else {\n            if (value !== filter[key]) {\n              eq = false;\n            }\n          }\n        }\n        return eq;\n      });\n      let newRecord = {\n        ...record\n      };\n      //undefined setted if no data to obtain no render in RightLabel or equivalent\n      newRecord[source] = filteredData.length > 0 ? filteredData : undefined;\n      setFiltered(newRecord);\n    }\n  }, [record, source, filter]);\n\n  return (\n    <>\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          ...otherProps,\n          record: filtered,\n          addLabel: true,\n          source\n        });\n      })}\n    </>\n  );\n};\nexport default FilterHandler;\n","import React from 'react';\nimport { useQueryWithStore } from 'react-admin';\nimport { default as FilterHandler } from './FilterHandler';\n\n/*\n * @example Label used in examples\n *  const Label = ({label, ...otherProps})=>{\n *     return <h2>{label}</h2>\n *  }\n *\n * @example show header for each group with group property thanks to groupHeader\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupHeader={({group,...otherProps}) => <Label {...otherProps} label={group['pair:label']}></Label> }\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example call chhildren with label thanks to groupLabel\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example conditional show of group if no data in source. Conditionale groupHeader is not possible because GroupedArrayField define group before filter ; need use chhildren.\n * const ConditionalSourceDefinedHandler = ({record,source,children,...otherProps})=>{\n *   if (record?.[source] && (!Array.isArray(record[source])||record[source].length>0)){\n *     return  React.Children.map(children, (child, i) => {\n *         return React.cloneElement(child, {...otherProps,record,source});\n *       })\n *   }else{\n *     return <></>\n *   }\n * }\n *\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *  <ConditionalSourceDefinedHandler>\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n *  </ConditionalSourceDefinedHandler>\n * </GroupedReferenceHandler>\n *\n *\n */\nconst GroupedReferenceHandler = ({\n  children,\n  groupReference,\n  groupLabel,\n  groupHeader,\n  filterProperty,\n  ...otherProps\n}) => {\n  const { data } = useQueryWithStore({\n    type: 'getList',\n    resource: groupReference,\n    payload: {}\n  });\n\n  return (\n    <>\n      {data?.map((data, index) => {\n        let filter = {};\n        filter[filterProperty] = data.id;\n        return (\n          <>\n            {groupHeader && groupHeader({ ...otherProps, group: data })}\n            <FilterHandler {...otherProps} filter={filter} label={data[groupLabel]}>\n              {children}\n            </FilterHandler>\n          </>\n        );\n      })}\n    </>\n  );\n};\n\nexport default GroupedReferenceHandler;\n","import React, { useEffect, useState } from 'react';\nimport { ArrayInput, SimpleFormIterator, TextInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useReferenceInputStyles = makeStyles({\n  form: {\n    display: 'flex'\n  },\n  input: {\n    paddingRight: '20px'\n  }\n});\n\nconst useHideInputStyles = makeStyles({\n  root: {\n    display: 'none'\n  }\n});\n\nconst ReificationArrayInput = props => {\n  const { reificationClass, children, ...otherProps } = props;\n  const flexFormClasses = useReferenceInputStyles();\n  const hideInputStyles = useHideInputStyles();\n\n  return (\n    <ArrayInput {...otherProps}>\n      <SimpleFormIterator classes={{ form: flexFormClasses.form }}>\n        {React.Children.map(props.children, (child, i) => {\n          return React.cloneElement(child, {\n            className: flexFormClasses.input\n          });\n        })}\n        <TextInput className={hideInputStyles.root} source=\"type\" initialValue={reificationClass} />\n      </SimpleFormIterator>\n    </ArrayInput>\n  );\n};\n\nexport default ReificationArrayInput;\n"],"names":["context","definition","this","normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","arguments","slice","call","module","exports","fetchResource","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resourceUri","config","httpClient","jsonContext","_yield$httpClient","data","wrap","_context","prev","next","sent","json","Error","id","jsonld","compact","abrupt","stop","_x","_x2","apply","getOneMethod","resourceId","params","_dataModel$list","resources","dataModel","_dataModel$list2","_iterator","_step","forceArrayItem","list","forceArray","_createForOfIteratorHelper","s","n","done","value","Array","isArray","err","e","f","getSlugWithExtension","fileName","fileExtension","splitFileName","pop","createSlug","lang","isFile","o","rawFile","File","getUploadsContainerUri","serverKey","Object","keys","dataServers","find","key","uploadsContainer","urlJoin","baseUrl","uploadFile","uploadsContainerUri","response","method","body","headers","Headers","Slug","name","Content-Type","type","status","get","uploadAllFiles","_ref2","_callee2","record","property","_context2","t0","t1","hasOwnProperty","_x3","_x4","getServerKeyFromType","parseServerKey","findContainersWithTypes","types","serverKeys","containers","existingContainers","includes","map","defaultServerKey","filter","parseServerKeys","forEach","key1","key2","path","containerUri","createMethod","_dataModel$create","_dataModel$create2","fileUri","_dataModel$fieldsMapp","_response","create","container","values","server","JSON","stringify","concat","undefined","set","fieldsMapping","title","_objectSpread","@context","@type","getOne","deleteMethod","deleteManyMethod","ids","finish","getDataServers","getDataModels","fetchContainers","containersServers","fetchPromises","results","_concat","returnData","reduce","acc","fromEntries","then","resourceType","resource","Promise","all","total","_toConsumableArray","item","a","entries","some","_ref3","_ref4","_slicedToArray","k","v","_ref5","_ref6","val","vr","va","sort","b","field","order","localeCompare","pagination","page","perPage","getEmbedFrame","blankNodes","predicates","embedFrame","blankNode","reverse","accumulator","predicate","_defineProperty","@embed","resolvePrefix","ontologies","startsWith","_item$split2","prefix","ontology","url","typeQuery","triple","variable","namedNode","buildBaseQuery","baseTriples","construct","where","patterns","CryptoJS","Math","crypto","window","self","globalThis","msCrypto","global","require","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","j","ceil","random","nBytes","C_enc","enc","hexChars","bite","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","C_algo","HMAC","algo","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","c","d","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","x","t","HmacMD5","generateSparqlVarName","node","md5","getParentNode","getPredicate","buildUnionQuery","queries","q","triples","query","firstTriple","q2","parentNode","buildBlankNodesQuery","baseQuery","nodes","nodeNames","extractNodes","_step2","_iterator2","varName","parentVarName","pre","cur","literal","DataFactory","generator","SparqlGenerator","Generator","reservedFilterKeys","buildSparqlQuery","sparqlJsParams","queryType","template","prefixes","containerWhere","?containerUri","expression","operator","args","resourceWhere","hasSPARQLFilter","sparqlWhere","hasFullTextSearch","sw","variables","toLowerCase","object","unshift","blankNodesQuery","getBlankNodesFromDataServers","_i","_Object$keys","_i2","_Object$keys2","Set","compare","_typeof","fetchSparqlEndpoints","sparqlQueryPromises","resolve","reject","_params$filter","_params$filter2","_params$filter3","_dataModel$list3","_predicates","sparqlQuery","sparqlEndpoint","_dataModel$list4","frame","explicitEmbedOnFraming","omitGraph","compactJson","_compactJson","@graph","_objectWithoutProperties","_excluded","findContainersWithPaths","paths","getListMethod","_args","_servers","servers","fetchContainer","getManyMethod","returnFailedResources","_error","getManyReferenceMethod","target","getList","updateMethod","InvalidCharacterError","r","atob","bind","input","bs","buffer","bc","idx","output","charAt","indexOf","fetchUserConfig","token","podKey","authServerKey","_jwtDecode","webId","userData","_userData$endpoints","_userData$endpoints2","localStorage","getItem","jwtDecode","console","error","clear","location","reload","endpoints","proxyUrl","defaultToArray","fetchVoidEndpoints","result","_loop","pod","URL","datasets","dataset","datasetServerKey","description","_step3","_iterator3","_step4","partition","_iterator4","getServerKeyFromUri","uri","dataProvider","_dataServers$authServ","_dataServers$serverKe","options","useProxy","noProxy","has","formData","FormData","append","fetchUtils","fetchJson","Authorization","fetchUserConfigPromise","fetchVoidEndpointsPromise","waitForVoidEndpoints","getMany","getManyReference","updateMany","delete","deleteMany","getDataModelsMethod","getDataServersMethod","getLocalDataServers","fetch","compute","externalLinks","isURL","useGetExternalLink","componentExternalLinks","useContext","DataProviderContext","serversExternalLinks","useMemo","useCallback","computedComponentExternalLinks","serverBaseUrl","computedServerExternalLinks","useDataModel","_useState2","useState","setDataModel","useEffect","useDataServers","setDataServers","useContainers","_useState","setContainers","findCreateContainerWithTypes","createServerKey","useCreateContainer","createContainer","setCreateContainer","_Object$entries$","_dataModel$create3","useDataModels","dataModels","setDataModels","FilterHandler","children","source","otherProps","filtered","setFiltered","filteredData","eq","newRecord","React","Children","child","cloneElement","addLabel","GroupedReferenceHandler","groupReference","groupLabel","groupHeader","filterProperty","useQueryWithStore","payload","index","group","createElement","_extends","label","useReferenceInputStyles","makeStyles","form","display","paddingRight","useHideInputStyles","root","ReificationArrayInput","props","reificationClass","flexFormClasses","hideInputStyles","ArrayInput","SimpleFormIterator","classes","className","TextInput","initialValue"],"mappings":"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"}