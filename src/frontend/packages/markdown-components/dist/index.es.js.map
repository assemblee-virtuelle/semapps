{"mappings":"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","sources":["packages/markdown-components/src/index.ts","packages/markdown-components/src/MarkdownField.js","packages/markdown-components/src/MarkdownInput.tsx","packages/markdown-components/src/useLoadLinks.js"],"sourcesContent":["export { default as MarkdownField } from './MarkdownField';\nexport { default as MarkdownInput } from './MarkdownInput';\nexport { default as useLoadLinks } from './useLoadLinks';\n","import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport Markdown from 'markdown-to-jsx';\nimport get from 'lodash/get';\n\nconst MarkdownField = ({ source, LabelComponent, overrides = {}, ...rest }) => {\n  const record = useRecordContext();\n  if (!record || !get(record, source)) return null;\n\n  return (\n    <Markdown\n      options={{\n        createElement(type, props, children) {\n          if (props.label) {\n            return (\n              <>\n                <LabelComponent>{props.label}</LabelComponent>\n                {React.createElement(type, props, children)}\n              </>\n            );\n          }\n          return React.createElement(type, props, children);\n        },\n        overrides: {\n          h1: LabelComponent,\n          ...overrides\n        },\n        ...rest\n      }}\n    >\n      {get(record, source)}\n    </Markdown>\n  );\n};\n\nMarkdownField.defaultProps = {\n  LabelComponent: 'h2'\n};\n\nexport default MarkdownField;\n","/* eslint-disable react/react-in-jsx-scope */\n/* eslint-disable react/require-default-props */\nimport { useState, FunctionComponent } from 'react';\nimport ReactMde, { ReactMdeProps } from 'react-mde';\nimport Markdown, { MarkdownToJSX } from 'markdown-to-jsx';\nimport { useInput, InputHelperText, useTranslateLabel, TextInputProps } from 'react-admin';\nimport { FormControl, FormHelperText } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  '& > fieldset': {\n    borderWidth: 1,\n    borderStyle: 'solid',\n    padding: 0,\n    borderRadius: theme.shape.borderRadius,\n    margin: 1\n  },\n\n  '& > fieldset:hover': {\n    borderColor: theme.palette.text.primary\n  },\n\n  '& > fieldset:focus-within': {\n    borderColor: theme.palette.primary.main,\n    borderWidth: 2,\n    marginLeft: 0\n  },\n\n  '& > fieldset > legend': {\n    color: theme.palette.text.secondary,\n    marginLeft: 10,\n    fontSize: theme.typography.caption.fontSize\n  },\n\n  '& > fieldset:focus-within > legend': {\n    color: theme.palette.primary.main\n  },\n\n  '& .react-mde': {\n    borderWidth: 0,\n    borderRadius: theme.shape.borderRadius,\n    marginTop: -5\n  },\n\n  '& .mde-header': {\n    background: 'transparent'\n  },\n\n  '& .mde-text:focus': {\n    outline: 'none'\n  },\n\n  '& .mde-text:focus::placeholder': {\n    color: 'transparent'\n  },\n\n  '&.empty': {\n    '& > fieldset': {\n      paddingTop: 10,\n      marginTop: 9\n    },\n    '& > fieldset:focus-within': {\n      paddingTop: 0,\n      margin: 0,\n      marginTop: 1\n    },\n    '& > fieldset > legend': {\n      display: 'none'\n    },\n    '& > fieldset:focus-within > legend': {\n      display: 'block'\n    }\n  },\n\n  '&.validationError': {\n    '& > fieldset': {\n      borderColor: theme.palette.error.main\n    },\n    '& > fieldset > legend, & .mde-text::placeholder': {\n      color: theme.palette.error.main\n    },\n    '& .mde-text:focus::placeholder': {\n      color: 'transparent'\n    },\n    '& p.MuiFormHelperText-root': {\n      color: theme.palette.error.main\n    }\n  }\n}));\n\ntype Props = TextInputProps & {\n  overrides?: MarkdownToJSX.Overrides;\n  reactMdeProps?: ReactMdeProps;\n};\n\nconst MarkdownInput: FunctionComponent<Props> = props => {\n  const { label, source, helperText, fullWidth, validate, overrides, reactMdeProps } = props;\n  const [tab, setTab] = useState<'write' | 'preview'>('write');\n  const {\n    field: { value, onChange },\n    fieldState: { isDirty, invalid, error, isTouched },\n    formState: { isSubmitted },\n    isRequired\n  } = useInput({ source, validate });\n\n  const translateLabel = useTranslateLabel();\n  const translatedLabel = `${translateLabel({ label, source })}${isRequired ? '*' : ''}`;\n\n  return (\n    <StyledFormControl\n      fullWidth={fullWidth}\n      className={`${invalid ? 'validationError' : ''} ${value === '' ? 'empty' : ''}`}\n    >\n      <fieldset>\n        <legend>{translatedLabel}</legend>\n        <ReactMde\n          value={value}\n          onChange={val => onChange(val)}\n          onTabChange={newTab => setTab(newTab)}\n          /* eslint-disable-next-line react/no-unstable-nested-components */\n          generateMarkdownPreview={async markdown => (\n            <Markdown\n              options={{\n                overrides: overrides || {}\n              }}\n            >\n              {markdown}\n            </Markdown>\n          )}\n          selectedTab={tab}\n          childProps={{ textArea: { placeholder: translatedLabel } }}\n          /* eslint-disable-next-line react/jsx-props-no-spreading */\n          {...reactMdeProps}\n        />\n      </fieldset>\n      <FormHelperText error={isDirty && invalid} margin=\"dense\" variant=\"outlined\">\n        <InputHelperText error={error?.message} helperText={helperText} touched={isTouched || isSubmitted} />\n      </FormHelperText>\n    </StyledFormControl>\n  );\n};\n\nexport default MarkdownInput;\n","import { useDataProvider, useTranslate } from 'react-admin';\n\nconst useLoadLinks = (resourceType, labelProp) => {\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  return async keyword => {\n    if (keyword) {\n      const results = await dataProvider.getList(resourceType, {\n        pagination: {\n          page: 1,\n          perPage: 5\n        },\n        filter: { q: keyword }\n      });\n      if (results.total > 0) {\n        return results.data.map(record => ({\n          preview: record[labelProp],\n          value: `[${record[labelProp]}](/${resourceType}/${encodeURIComponent(record.id)}/show)`\n        }));\n      }\n      return [{ preview: translate('ra.navigation.no_results'), value: `[${keyword}` }];\n    }\n    return [{ preview: translate('ra.action.search'), value: `[${keyword}` }];\n  };\n};\n\nexport default useLoadLinks;\n"],"names":[],"version":3,"file":"index.es.js.map"}