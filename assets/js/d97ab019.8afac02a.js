"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6375],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),d=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=d(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8053:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return u}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),l=["components"],o={title:"ObjectsWatcherMiddleware"},c=void 0,d={unversionedId:"middleware/sync/objects-watcher",id:"middleware/sync/objects-watcher",title:"ObjectsWatcherMiddleware",description:"Watch for changes (create / update / delete) in the LDP server and send corresponding ActivityPub activities.",source:"@site/docs/middleware/sync/objects-watcher.md",sourceDirName:"middleware/sync",slug:"/middleware/sync/objects-watcher",permalink:"/docs/middleware/sync/objects-watcher",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/sync/objects-watcher.md",tags:[],version:"current",frontMatter:{title:"ObjectsWatcherMiddleware"},sidebar:"middleware",previous:{title:"Sync",permalink:"/docs/middleware/sync/"},next:{title:"AggregatorService",permalink:"/docs/middleware/sync/aggregator"}},s={},u=[{value:"Features",id:"features",level:2},{value:"Usage",id:"usage",level:2},{value:"Excluding containers",id:"excluding-containers",level:3},{value:"Settings",id:"settings",level:2}],p={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Watch for changes (create / update / delete) in the LDP server and send corresponding ActivityPub activities.\nIf a private data becomes public, it is considered a new resource.\nIf a public data becomes private, it is considered as being deleted. "),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Watch for changes to the LDP servers (create, patch, put, delete...)"),(0,i.kt)("li",{parentName:"ul"},"Generate corresponding ActivityPub activities (Create, Update, Delete)"),(0,i.kt)("li",{parentName:"ul"},"Send them through the instance (Relay) actor or, in POD provider config, through the Pod actor."),(0,i.kt)("li",{parentName:"ul"},"Send them to:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"All actors who have read permissions on the resource"),(0,i.kt)("li",{parentName:"ul"},"Emitter followers and ",(0,i.kt)("a",{parentName:"li",href:"https://www.w3.org/TR/activitypub/#public-addressing"},"as:Public"))))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { ObjectsWatcherMiddleware } = require('@semapps/sync');\nmodule.exports = {\n  middlewares: [\n    CacherMiddleware({ ... }),\n    WebAclMiddleware({ baseUrl: 'http://localhost:3000', podProvider: false }),\n    ObjectsWatcherMiddleware({ baseUrl: 'http://localhost:3000', podProvider: false, }) // This middleware should come after the WebAclMiddleware\n  ],\n  ...\n};\n")),(0,i.kt)("h3",{id:"excluding-containers"},"Excluding containers"),(0,i.kt)("p",null,"If you don't want a container with public data to be mirrored, you can add the ",(0,i.kt)("inlineCode",{parentName:"p"},"excludeFromMirror: true")," option."),(0,i.kt)("p",null,"This choice will appear on the ",(0,i.kt)("a",{parentName:"p",href:"/docs/middleware/void"},"VoID endpoint"),", so that mirrors ignore them."),(0,i.kt)("h2",{id:"settings"},"Settings"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"baseUrl")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Required")),(0,i.kt)("td",{parentName:"tr",align:null},"The base URL of your instance")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"podProvider")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,i.kt)("td",{parentName:"tr",align:null},"false"),(0,i.kt)("td",{parentName:"tr",align:null},"If your instance is a Pods provider, set to true")))))}m.isMDXComponent=!0}}]);