"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9086],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(d,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},824:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=["components"],o={title:"LDP"},d=void 0,p={unversionedId:"middleware/ldp/index",id:"middleware/ldp/index",title:"LDP",description:"This package allows you to setup LDP containers in which LDP resources can be manipulated.",source:"@site/docs/middleware/ldp/index.md",sourceDirName:"middleware/ldp",slug:"/middleware/ldp/",permalink:"/docs/middleware/ldp/",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/ldp/index.md",tags:[],version:"current",frontMatter:{title:"LDP"},sidebar:"middleware",previous:{title:"JsonLdContextService",permalink:"/docs/middleware/jsonld/context"},next:{title:"LdpResourceService",permalink:"/docs/middleware/ldp/resource"}},s={},u=[{value:"Features",id:"features",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Sub-services",id:"sub-services",level:2},{value:"Mixins",id:"mixins",level:2},{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Settings",id:"settings",level:2},{value:"Container options",id:"container-options",level:2},{value:"API routes",id:"api-routes",level:2},{value:"Redirecting to a frontend app",id:"redirecting-to-a-frontend-app",level:2},{value:"Actions",id:"actions",level:2},{value:"<code>getBaseUrl</code>",id:"getbaseurl",level:3},{value:"Return values",id:"return-values",level:5}],m={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This package allows you to setup ",(0,l.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/ldp-primer/"},"LDP")," containers in which LDP resources can be manipulated."),(0,l.kt)("h2",{id:"features"},"Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Handles triples, turtle and JSON-LD format"),(0,l.kt)("li",{parentName:"ul"},"Automatic creation of containers on server start"),(0,l.kt)("li",{parentName:"ul"},"Full container management: create, attach resources, detach, clear, delete...")),(0,l.kt)("h2",{id:"dependencies"},"Dependencies"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://moleculer.services/docs/0.14/moleculer-web.html"},"ApiGateway")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../jsonld"},"JsonLDService")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../ontologies"},"OntologiesService")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../triplestore"},"TripleStoreService"))),(0,l.kt)("h2",{id:"sub-services"},"Sub-services"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/middleware/ldp/resource"},"LdpResourceService")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/middleware/ldp/container"},"LdpContainerService")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/middleware/ldp/link-header"},"LdpLinkHeaderService")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/middleware/ldp/registry"},"LdpRegistryService")),(0,l.kt)("li",{parentName:"ul"},"LdpApiService ",(0,l.kt)("em",{parentName:"li"},"(internal)")),(0,l.kt)("li",{parentName:"ul"},"LdpCacheService ",(0,l.kt)("em",{parentName:"li"},"(internal)"))),(0,l.kt)("h2",{id:"mixins"},"Mixins"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"controlled-container"},"ControlledContainerMixin")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/middleware/ldp/document-tagger"},"DocumentTaggerMixin")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/middleware/ldp/image-processor"},"ImageProcessorMixin")),(0,l.kt)("li",{parentName:"ul"},"DisassemblyMixin")),(0,l.kt)("h2",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add @semapps/ldp\n")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { LdpService } = require('@semapps/ldp');\n\nmodule.exports = {\n  mixins: [LdpService],\n  settings: {\n    baseUrl: 'http://localhost:3000/',\n    containers: [\n      {\n        path: '/resources'\n        // Specific container options (See below)\n      }\n    ],\n    defaultContainerOptions: {\n      // See below\n    }\n  }\n};\n")),(0,l.kt)("h2",{id:"settings"},"Settings"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"baseUrl")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"required")),(0,l.kt)("td",{parentName:"tr",align:null},"Base URL of the LDP server")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"containers")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[Object]")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"required")),(0,l.kt)("td",{parentName:"tr",align:null},"List of containers to set up, with their options (see below)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"defaultContainerOptions")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[Object]")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Default options for all containers (see below)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mirrorGraphName")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String")),(0,l.kt)("td",{parentName:"tr",align:null},'"',(0,l.kt)("a",{parentName:"td",href:"http://semapps.org/mirror%22"},'http://semapps.org/mirror"')),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the RDF graph where to store mirrored data")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"podProvider")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Set to true if your server is a POD provider")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"preferredViewForResource")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Function")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Function called to generate a redirect to the preferred view (see below)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"resourcesWithContainerPath")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"If true, the URI of all new resources will include the container path")))),(0,l.kt)("h2",{id:"container-options"},"Container options"),(0,l.kt)("p",null,"The following options can be set for each container, or they can be set in the ",(0,l.kt)("inlineCode",{parentName:"p"},"defaultContainerOptions")," settings."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"accept")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String")),(0,l.kt)("td",{parentName:"tr",align:null},'"text/turtle"'),(0,l.kt)("td",{parentName:"tr",align:null},"Type to return (",(0,l.kt)("inlineCode",{parentName:"td"},"application/ld+json"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"text/turtle")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"application/n-triples"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"acceptedTypes")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Array")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"RDF classes accepted in this container. This is not enforced but used by some services to identify containers.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"excludeFromMirror")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true, other servers will not be able to ",(0,l.kt)("a",{parentName:"td",href:"../sync/mirror"},"mirror")," this container.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"activateTombstones")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"If true, and if the ActivityPubService setting is also true, ",(0,l.kt)("a",{parentName:"td",href:"https://www.w3.org/TR/activitypub/#delete-activity-outbox"},"Tombstones")," will replace deleted resources.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"permissions")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"Function")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"If the WebACL service is activated, permissions of the container itself")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"newResourcesPermissions")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"Function")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"If the WebACL service is activated, permissions for new resources. ",(0,l.kt)("a",{parentName:"td",href:"/docs/middleware/webacl/#default-permissions-for-new-resources"},"See the docs here"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"readOnly")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Do not set ",(0,l.kt)("inlineCode",{parentName:"td"},"POST"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"PATCH"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"PUT")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"DELETE")," routes for the container and its resources")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"preferredView")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"A part of the final URL for redirecting to the preferred view of the resource (see below).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"controlledActions")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Use custom actions instead of the LDP ones (post, list, get, create, put, patch, delete). Used by the ",(0,l.kt)("a",{parentName:"td",href:"controlled-container"},"ControlledContainerMixin"))))),(0,l.kt)("h2",{id:"api-routes"},"API routes"),(0,l.kt)("p",null,"These catch-all routes are automatically added to the ",(0,l.kt)("inlineCode",{parentName:"p"},"ApiGateway")," service."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"LDP resource"),(0,l.kt)("th",{parentName:"tr",align:null},"LDP container"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"GET")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.resource.get")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.container.get"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"POST")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.resource.post")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.container.post"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PUT")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.resource.put")),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PATCH")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.resource.patch")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.container.patch"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"DELETE")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.resource.delete")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ldp.container.delete"))))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Note: If the ",(0,l.kt)("inlineCode",{parentName:"p"},"readOnly")," container option is set (see above), only ",(0,l.kt)("inlineCode",{parentName:"p"},"GET")," routes are added.")),(0,l.kt)("h2",{id:"redirecting-to-a-frontend-app"},"Redirecting to a frontend app"),(0,l.kt)("p",null,"When a browser visits the URL of an LDP resource, for example ",(0,l.kt)("a",{parentName:"p",href:"https://data.yourserver.com/users/alice"},"https://data.yourserver.com/users/alice"),", with an ",(0,l.kt)("inlineCode",{parentName:"p"},"Accept"),"\nheader containing ",(0,l.kt)("inlineCode",{parentName:"p"},"text/html"),", you have the ability to redirect the browser to your preferred view on the frontend\nof your application."),(0,l.kt)("p",null,"In order to configure this feature, you should add the following configurations :"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"For each container that you want to setup a redirect, add the ",(0,l.kt)("inlineCode",{parentName:"li"},"preferredView")," option:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const containers = [\n  {\n    path: '/users',\n    preferredView: '/Person/',\n    // Other container options...\n  },\n  { ... }\n];\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Set the ",(0,l.kt)("inlineCode",{parentName:"li"},"preferredViewForResource")," setting with a function like this one which will receive the ",(0,l.kt)("inlineCode",{parentName:"li"},"preferredView")," option set above:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function preferredViewForResource(resourceUri, containerPreferredView) {\n  if (!containerPreferredView) return resourceUri;\n  return 'https://yourfrontend.com' + containerPreferredView + encodeURIComponent(resourceUri) + '/show';\n}\n")),(0,l.kt)("p",null,"The function should return the redirect link. It can be async. Return ",(0,l.kt)("inlineCode",{parentName:"p"},"resourceUri")," if you want to cancel the redirect."),(0,l.kt)("h2",{id:"actions"},"Actions"),(0,l.kt)("p",null,"The following service actions are available:"),(0,l.kt)("h3",{id:"getbaseurl"},(0,l.kt)("inlineCode",{parentName:"h3"},"getBaseUrl")),(0,l.kt)("p",null,"Allow other services to get access to the ",(0,l.kt)("inlineCode",{parentName:"p"},"baseUrl")," setting of the LDP server."),(0,l.kt)("h5",{id:"return-values"},"Return values"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"baseUrl")," setting."))}c.isMDXComponent=!0}}]);