"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1654],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4951:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],c={title:"GoGoCarto"},l=void 0,s={unversionedId:"middleware/importer/gogocarto",id:"middleware/importer/gogocarto",title:"GoGoCarto",description:"This mixin allows you to import elements from GoGoCarto.",source:"@site/docs/middleware/importer/gogocarto.md",sourceDirName:"middleware/importer",slug:"/middleware/importer/gogocarto",permalink:"/docs/middleware/importer/gogocarto",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/importer/gogocarto.md",tags:[],version:"current",frontMatter:{title:"GoGoCarto"},sidebar:"middleware",previous:{title:"Drupal",permalink:"/docs/middleware/importer/drupal"},next:{title:"HumHub",permalink:"/docs/middleware/importer/humhub"}},u={},p=[{value:"Usage",id:"usage",level:2}],m={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This mixin allows you to import elements from ",(0,a.kt)("a",{parentName:"p",href:"https://gogocarto.fr"},"GoGoCarto"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { GoGoCartoImporterMixin } = require('@semapps/importer');\n\nmodule.exports = {\n  name: 'my-importer',\n  mixins: [GoGoCartoImporterMixin],\n  settings: {\n    source: {\n      gogocarto: {\n        baseUrl: null, // Base URL of the GoGoCarto instance\n        type: 'elements' // Currently, only elements can be imported\n      },\n      // ... see ImporterMixin settings for other source config available\n    },\n    dest: {\n      containerUri: null, // Container where the data will be posted (must be created already)\n      predicatesToKeep: [], // Don't remove these predicates when updating data\n    },\n    activitypub: {\n      actorUri: null, // ActivityPub actor who will post activities on synchronization (leave null to disable this)\n      activities: ['Create', 'Update', 'Delete'] // The activities you want to be posted by the actor\n    },\n    cronJob: {\n      time: null, // '0 0 4 * * *' for every night at 4am \n      timeZone: 'Europe/Paris'\n    }\n  },\n  methods: {\n    transform(data) {\n      return({\n        ...data\n      });\n    }\n  }\n};\n")))}d.isMDXComponent=!0}}]);