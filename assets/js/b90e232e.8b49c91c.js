"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8833],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),p=l(r),f=o,d=p["".concat(c,".").concat(f)]||p[f]||u[f]||i;return r?n.createElement(d,a(a({ref:t},s),{},{components:r})):n.createElement(d,a({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m.mdxType="string"==typeof e?e:o,a[1]=m;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9255:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return m},metadata:function(){return l},toc:function(){return u}});var n=r(3117),o=r(102),i=(r(7294),r(3905)),a=["components"],m={title:"Jotform"},c=void 0,l={unversionedId:"middleware/importer/jotform",id:"middleware/importer/jotform",title:"Jotform",description:"This mixin allows you to import data from Jotform.",source:"@site/docs/middleware/importer/jotform.md",sourceDirName:"middleware/importer",slug:"/middleware/importer/jotform",permalink:"/docs/middleware/importer/jotform",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/importer/jotform.md",tags:[],version:"current",frontMatter:{title:"Jotform"},sidebar:"middleware",previous:{title:"HumHub",permalink:"/docs/middleware/importer/humhub"},next:{title:"Mobilizon",permalink:"/docs/middleware/importer/mobilizon"}},s={},u=[{value:"Usage",id:"usage",level:2}],p={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This mixin allows you to import data from ",(0,i.kt)("a",{parentName:"p",href:"https://jotform.com"},"Jotform"),"."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { JotformImporterMixin } = require('@semapps/importer');\n\nmodule.exports = {\n  name: 'my-importer',\n  mixins: [JotformImporterMixin],\n  settings: {\n    source: {\n      jotform: {\n        apiKey: null, // Jotform API key (see https://eu.jotform.com/myaccount/api)\n        type: 'submissions' // Currently, only form submissions can be imported\n      },\n      // ... see ImporterMixin settings for other source config available\n    },\n    dest: {\n      containerUri: null, // Container where the data will be posted (must be created already)\n      predicatesToKeep: [], // Don't remove these predicates when updating data\n    },\n    activitypub: {\n      actorUri: null, // ActivityPub actor who will post activities on synchronization (leave null to disable this)\n      activities: ['Create', 'Update', 'Delete'] // The activities you want to be posted by the actor\n    },\n    cronJob: {\n      time: null, // '0 0 4 * * *' for every night at 4am \n      timeZone: 'Europe/Paris'\n    }\n  },\n  methods: {\n    transform(data) {\n      return({\n        ...data\n      });\n    }\n  }\n};\n")))}f.isMDXComponent=!0}}]);