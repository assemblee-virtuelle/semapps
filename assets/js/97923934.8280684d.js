"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9439],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5819:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],l={title:"Nodeinfo"},s=void 0,d={unversionedId:"middleware/nodeinfo",id:"middleware/nodeinfo",title:"Nodeinfo",description:"This service implements the Nodeinfo 2.1 protocol, which allows remote services to discover informations about a local node.",source:"@site/docs/middleware/nodeinfo.md",sourceDirName:"middleware",slug:"/middleware/nodeinfo",permalink:"/docs/middleware/nodeinfo",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/nodeinfo.md",tags:[],version:"current",frontMatter:{title:"Nodeinfo"},sidebar:"middleware",previous:{title:"ImageProcessorMixin",permalink:"/docs/middleware/ldp/image-processor"},next:{title:"Ontologies",permalink:"/docs/middleware/ontologies"}},p={},u=[{value:"Dependencies",id:"dependencies",level:2},{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Discovering a node",id:"discovering-a-node",level:3},{value:"Settings",id:"settings",level:2},{value:"Actions",id:"actions",level:2},{value:"<code>getUsersCount</code>",id:"getuserscount",level:3},{value:"Return value",id:"return-value",level:5},{value:"<code>addLink</code>",id:"addlink",level:3},{value:"Parameters",id:"parameters",level:5}],c={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This service implements the ",(0,o.kt)("a",{parentName:"p",href:"https://nodeinfo.diaspora.software"},"Nodeinfo")," 2.1 protocol, which allows remote services to discover informations about a local node."),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://moleculer.services/docs/0.14/moleculer-web.html"},"ApiGateway"))),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add @semapps/nodeinfo\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { NodeinfoService } = require('@semapps/nodeinfo');\n\nmodule.exports = {\n  mixins: [NodeinfoService],\n  settings: {\n    baseUrl: 'https://mydomain.com',\n    software: {\n      name: 'mysoft',\n      version: '1.0.0',\n      repository: 'https://github.com/mysoft/mysoft,\n      homepage: 'https://mysoft.com'\n    },\n    protocols: ['activitypub'],\n    services: {\n      inbound: [],\n      outbound: []\n    },\n    openRegistrations: true,\n    metadata: {\n      // Any custom metadata\n    }\n  },\n  actions: {\n    async getUsersCount(ctx) {\n      return {\n        total: 0,\n        activeHalfYear: 0,\n        activeMonth: 0\n      };\n    }\n  }\n};\n")),(0,o.kt)("h3",{id:"discovering-a-node"},"Discovering a node"),(0,o.kt)("p",null,"To find the nodeinfo schema, a simple GET is enough:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /.well-known/nodeinfo HTTP/1.1\nHost: localhost:3000\nAccept: application/json\n")),(0,o.kt)("p",null,"If a nodeinfo schema exists, it will return a JSON like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "links": [\n    {\n      "rel": "http://nodeinfo.diaspora.software/ns/schema/2.1",\n      "href": "http://localhost:3000/nodeinfo/2.1"\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"You can then fetch the returned URL to find the nodeinfo schema."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"We provide a ",(0,o.kt)("a",{parentName:"p",href:"/docs/frontend/activitypub-components#usenodeinfo"},(0,o.kt)("inlineCode",{parentName:"a"},"useNodeinfo"))," hook to easily fetch the schema of any server.")),(0,o.kt)("h2",{id:"settings"},"Settings"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"baseUrl")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"String")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Base URL of the server. Used to find the domain name if it is not set.")))),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://nodeinfo.diaspora.software/schema.html"},"https://nodeinfo.diaspora.software/schema.html")," for the other settings."),(0,o.kt)("h2",{id:"actions"},"Actions"),(0,o.kt)("h3",{id:"getuserscount"},(0,o.kt)("inlineCode",{parentName:"h3"},"getUsersCount")),(0,o.kt)("p",null,"Return the users count (total, activeHalfYear, activeMonth)."),(0,o.kt)("h5",{id:"return-value"},"Return value"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Object")," formatted like in the example above."),(0,o.kt)("h3",{id:"addlink"},(0,o.kt)("inlineCode",{parentName:"h3"},"addLink")),(0,o.kt)("p",null,"Add a link to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/.well-known/nodeinfo")," URL (in addition to ",(0,o.kt)("inlineCode",{parentName:"p"},"http://nodeinfo.diaspora.software/ns/schema/2.1"),")."),(0,o.kt)("h5",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"rel")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"String")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"required")),(0,o.kt)("td",{parentName:"tr",align:null},"Description of the link, usually in the form of an URI")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"href")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"String")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"required")),(0,o.kt)("td",{parentName:"tr",align:null},"Link itself")))))}m.isMDXComponent=!0}}]);