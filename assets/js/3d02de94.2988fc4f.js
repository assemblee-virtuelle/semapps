"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7911],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=d(r),m=o,f=p["".concat(l,".").concat(m)]||p[m]||s[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8146:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return s}});var n=r(3117),o=r(102),a=(r(7294),r(3905)),i=["components"],c={title:"DocumentTaggerMixin"},l=void 0,d={unversionedId:"middleware/ldp/document-tagger",id:"middleware/ldp/document-tagger",title:"DocumentTaggerMixin",description:"Tag new and updated resources with the following information: creation date, last modification date, creator's webId.",source:"@site/docs/middleware/ldp/document-tagger.md",sourceDirName:"middleware/ldp",slug:"/middleware/ldp/document-tagger",permalink:"/semapps/docs/middleware/ldp/document-tagger",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/ldp/document-tagger.md",tags:[],version:"current",frontMatter:{title:"DocumentTaggerMixin"},sidebar:"middleware",previous:{title:"ControlledContainerMixin",permalink:"/semapps/docs/middleware/ldp/controlled-container"},next:{title:"ImageProcessorMixin",permalink:"/semapps/docs/middleware/ldp/image-processor"}},u={},s=[{value:"Usage",id:"usage",level:2}],p={toc:s};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Tag new and updated resources with the following information: creation date, last modification date, creator's webId."),(0,a.kt)("p",null,"By default, the ",(0,a.kt)("a",{parentName:"p",href:"https://www.dublincore.org/specifications/dublin-core/dcmi-terms/"},"Dublin Core's ontology"),", is used but this can be changed with the ",(0,a.kt)("inlineCode",{parentName:"p"},"documentPredicates")," setting (see below)."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { LdpService, DocumentTaggerMixin } = require('@semapps/ldp');\n\nmodule.exports = {\n  mixins: [LdpService, DocumentTaggerMixin],\n  settings: {\n    // Set this if you want to change the default ontology\n    documentPredicates: {\n      created: 'http://purl.org/dc/terms/created',\n      updated: 'http://purl.org/dc/terms/modified',\n      creator: 'http://purl.org/dc/terms/creator'\n    }\n  }\n};\n")))}m.isMDXComponent=!0}}]);