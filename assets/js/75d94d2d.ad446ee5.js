"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3523],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=s(n),c=r,g=u["".concat(o,".").concat(c)]||u[c]||d[c]||l;return n?a.createElement(g,i(i({ref:t},m),{},{components:n})):a.createElement(g,i({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9799:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return d}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=["components"],p={title:"ImageProcessorMixin"},o=void 0,s={unversionedId:"middleware/ldp/image-processor",id:"middleware/ldp/image-processor",title:"ImageProcessorMixin",description:"Process images as soon as they are uploaded, or process them all together.",source:"@site/docs/middleware/ldp/image-processor.md",sourceDirName:"middleware/ldp",slug:"/middleware/ldp/image-processor",permalink:"/semapps/docs/middleware/ldp/image-processor",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/ldp/image-processor.md",tags:[],version:"current",frontMatter:{title:"ImageProcessorMixin"},sidebar:"middleware",previous:{title:"DocumentTaggerMixin",permalink:"/semapps/docs/middleware/ldp/document-tagger"},next:{title:"Migration utilities",permalink:"/semapps/docs/middleware/migration"}},m={},d=[{value:"Usage",id:"usage",level:2},{value:"Settings",id:"settings",level:3},{value:"Actions",id:"actions",level:3},{value:"<code>processImage</code>",id:"processimage",level:4},{value:"Parameters",id:"parameters",level:5},{value:"<code>processAllImages</code>",id:"processallimages",level:4},{value:"Parameters",id:"parameters-1",level:5}],u={toc:d};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Process images as soon as they are uploaded, or process them all together.\nCurrently JPEG, PNG and WebP files are supported. They can be resized or their quality can be reduced.\nSince we use the ",(0,l.kt)("a",{parentName:"p",href:"https://sharp.pixelplumbing.com"},"sharp")," library, many more options could be added."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { ControlledContainerMixin, ImageProcessorMixin } = require(\"@semapps/ldp\");\n\nmodule.exports = {\n  name: 'file',\n  mixins: [ImageProcessorMixin, ControlledContainerMixin], // In that order\n  settings: {\n    path: '/files',\n    acceptedTypes: ['semapps:File'],\n    imageProcessor: {\n      maxWidth: 1900,\n      maxHeight: 1000,\n      jpeg: {},\n      png: {},\n      webp: {}\n    }\n  }\n}\n")),(0,l.kt)("h3",{id:"settings"},"Settings"),(0,l.kt)("p",null,"All settings relative to this mixin should be set in a ",(0,l.kt)("inlineCode",{parentName:"p"},"imageProcessor")," key."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxWidth")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Integer")),(0,l.kt)("td",{parentName:"tr",align:null},"1900"),(0,l.kt)("td",{parentName:"tr",align:null},"Reduce all images whose width is larger than this number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"maxHeight")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Integer")),(0,l.kt)("td",{parentName:"tr",align:null},"1000"),(0,l.kt)("td",{parentName:"tr",align:null},"Reduce all images whose height is larger than this number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"jpeg")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"{ quality: 85 }"),(0,l.kt)("td",{parentName:"tr",align:null},"See sharp ",(0,l.kt)("a",{parentName:"td",href:"https://sharp.pixelplumbing.com/api-output#jpeg"},"jpeg")," for available options")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"png")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"{ compressionLevel: 8 }"),(0,l.kt)("td",{parentName:"tr",align:null},"See sharp ",(0,l.kt)("a",{parentName:"td",href:"https://sharp.pixelplumbing.com/api-output#png"},"png")," for available options")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"webp")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"{ quality: 85 }"),(0,l.kt)("td",{parentName:"tr",align:null},"See sharp ",(0,l.kt)("a",{parentName:"td",href:"https://sharp.pixelplumbing.com/api-output#webp"},"webp")," for available options")))),(0,l.kt)("h3",{id:"actions"},"Actions"),(0,l.kt)("h4",{id:"processimage"},(0,l.kt)("inlineCode",{parentName:"h4"},"processImage")),(0,l.kt)("p",null,"Process the given image using the settings above."),(0,l.kt)("h5",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"resourceUri")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"required")),(0,l.kt)("td",{parentName:"tr",align:null},"URI of the resource (must be of type ",(0,l.kt)("inlineCode",{parentName:"td"},"semapps:File"),")")))),(0,l.kt)("h4",{id:"processallimages"},(0,l.kt)("inlineCode",{parentName:"h4"},"processAllImages")),(0,l.kt)("p",null,"Process all images in the container using the settings above."),(0,l.kt)("h5",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"webId")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"In a POD provider config, this allows to define the POD to process")))))}c.isMDXComponent=!0}}]);