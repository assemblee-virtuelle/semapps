"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8816],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),i=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=i(e.components);return o.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=i(n),u=r,k=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return n?o.createElement(k,p(p({ref:t},c),{},{components:n})):o.createElement(k,p({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,p=new Array(a);p[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,p[1]=s;for(var i=2;i<a;i++)p[i]=n[i];return o.createElement.apply(null,p)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},117:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return m}});var o=n(3117),r=n(102),a=(n(7294),n(3905)),p=["components"],s={title:"Markdown Components"},l=void 0,i={unversionedId:"frontend/markdown-components",id:"frontend/markdown-components",title:"Markdown Components",description:"Installation",source:"@site/docs/frontend/markdown-components.md",sourceDirName:"frontend",slug:"/frontend/markdown-components",permalink:"/semapps/docs/frontend/markdown-components",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/frontend/markdown-components.md",tags:[],version:"current",frontMatter:{title:"Markdown Components"},sidebar:"frontend",previous:{title:"List Components",permalink:"/semapps/docs/frontend/list-components"}},c={},m=[{value:"Installation",id:"installation",level:2},{value:"Components",id:"components",level:2},{value:"MarkdownInput",id:"markdowninput",level:3},{value:"MarkdownField",id:"markdownfield",level:3},{value:"Rendering React components",id:"rendering-react-components",level:4},{value:"Hooks",id:"hooks",level:2},{value:"useLoadLinks",id:"useloadlinks",level:3}],d={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,p);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @semapps/markdown-components\n")),(0,a.kt)("p",null,"You will also need to add this CSS file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<link rel="stylesheet" href="https://unpkg.com/react-mde@11.5.0/lib/styles/css/react-mde-all.css" />\n')),(0,a.kt)("h2",{id:"components"},"Components"),(0,a.kt)("h3",{id:"markdowninput"},"MarkdownInput"),(0,a.kt)("p",null,"This component allows you to enter Markdown content and preview it, using the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/andrerpena/react-mde"},"React-mde")," editor."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Create, SimpleForm, TextInput } from 'react-admin';\nimport { MarkdownInput } from '@semapps/markdown-components';\n\nexport const MyCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"title\" fullWidth />\n      <MarkdownInput source=\"description\" fullWidth />\n    </SimpleForm>\n  </Create>\n);\n")),(0,a.kt)("p",null,"Please see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/andrerpena/react-mde#react-mde-props"},"React-mde documentation")," to know what other props can be passed."),(0,a.kt)("h3",{id:"markdownfield"},"MarkdownField"),(0,a.kt)("p",null,"This component allows you to display Markdown content in HTML. It uses the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/probablyup/markdown-to-jsx"},"markdown-to-jsx")," package."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Show, SimpleShowLayout, TextField } from 'react-admin';\nimport { MarkdownField } from '@semapps/markdown-components';\n\nexport const MyShow = (props) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"title\" />\n      <MapField source=\"description\" />\n    </SimpleShowLayout>\n  </Show>\n);\n")),(0,a.kt)("p",null,"Any other props are passed down to markdown-to-jsx ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/probablyup/markdown-to-jsx#parsing-options"},"options"),"."),(0,a.kt)("h4",{id:"rendering-react-components"},"Rendering React components"),(0,a.kt)("p",null,"By default, all top-level titles (",(0,a.kt)("inlineCode",{parentName:"p"},"#"),") are converted to ",(0,a.kt)("inlineCode",{parentName:"p"},"<LargeLabel>"),"."),(0,a.kt)("p",null,"You can change this by passing an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/probablyup/markdown-to-jsx#optionsoverrides---override-any-html-tags-representation"},"overrides")," props."),(0,a.kt)("p",null,"You can also ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/probablyup/markdown-to-jsx#optionsoverrides---rendering-arbitrary-react-components"},"render arbitrary React components")," this way. All you need to do is pass the component definition."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Show, SimpleShowLayout, TextField } from 'react-admin';\nimport { MarkdownField } from '@semapps/markdown-components';\n\nconst SayHello = ({ who }) => ( <b>Hello {who} !</b> );\n\nexport const MyShow = (props) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"title\" />\n      <MapField source=\"description\" overrides={{ SayHello }} />\n    </SimpleShowLayout>\n  </Show>\n);\n")),(0,a.kt)("p",null,"Now if, in your Markdown document, you enter ",(0,a.kt)("inlineCode",{parentName:"p"},'<SayHello who="World" >'),", it will render as ",(0,a.kt)("inlineCode",{parentName:"p"},"<b>Hello World !</b>"),"."),(0,a.kt)("h2",{id:"hooks"},"Hooks"),(0,a.kt)("h3",{id:"useloadlinks"},"useLoadLinks"),(0,a.kt)("p",null,"This hook allows you to easily use ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/andrerpena/react-mde"},"React-mde suggestions")," to search for links to add to other resources."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Create, SimpleForm, TextInput } from 'react-admin';\nimport { MarkdownInput } from '@semapps/markdown-components';\n\nexport const MyCreate = (props) => {\n  const loadLinks = useLoadLinks('Page', 'title');\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source=\"title\" fullWidth />\n        <MarkdownInput source=\"description\" loadSuggestions={loadLinks} suggestionTriggerCharacters=\"[\" />\n      </SimpleForm>\n    </Create>\n  );\n}\n")),(0,a.kt)("p",null,"It takes 2 parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The type of resource to search (using React-Admin data provider)"),(0,a.kt)("li",{parentName:"ul"},"The field to use to display the title of the resource")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"At the moment it is only possible to search for a single type of resource.")))}u.isMDXComponent=!0}}]);