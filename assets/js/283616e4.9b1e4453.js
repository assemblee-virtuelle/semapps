"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8457],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(i,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9393:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),l=["components"],s={title:"Create your first LDP server"},i=void 0,p={unversionedId:"guides/ldp-server",id:"guides/ldp-server",title:"Create your first LDP server",description:"Purpose",source:"@site/docs/guides/ldp-server.md",sourceDirName:"guides",slug:"/guides/ldp-server",permalink:"/docs/guides/ldp-server",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/guides/ldp-server.md",tags:[],version:"current",frontMatter:{title:"Create your first LDP server"},sidebar:"guides",next:{title:"Add a Data Management System",permalink:"/docs/guides/dms"}},u={},c=[{value:"Purpose",id:"purpose",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Initialize your LDP server",id:"initialize-your-ldp-server",level:2},{value:"Launch your local Jena Fuseki instance",id:"launch-your-local-jena-fuseki-instance",level:3},{value:"Run Moleculer in dev mode",id:"run-moleculer-in-dev-mode",level:3},{value:"Testing your LDP server",id:"testing-your-ldp-server",level:2},{value:"Add data to the LDP server",id:"add-data-to-the-ldp-server",level:3},{value:"Verify changes on Jena Fuseki",id:"verify-changes-on-jena-fuseki",level:3}],d={toc:c};function m(e){var t=e.components,s=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"purpose"},"Purpose"),(0,a.kt)("p",null,"LDP means ",(0,a.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/ldp-primer/"},"Linked Data Platform"),". It is a W3C Recommendation that defines a set of rules for HTTP operations on web resources to provide an architecture for read-write Linked Data on the web."),(0,a.kt)("p",null,"An LDP server is therefore useful for making HTTP requests to a semantic database (in which the Linked Data is stored) without operating directly on the database."),(0,a.kt)("p",null,"In this guide, you will :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a ",(0,a.kt)("strong",{parentName:"li"},"SemApps instance")," from a template using Moleculer;"),(0,a.kt)("li",{parentName:"ul"},"Create a ",(0,a.kt)("strong",{parentName:"li"},"Jena Fuseki instance")," to store some data;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Add data")," to your semantic data base ",(0,a.kt)("strong",{parentName:"li"},"using your LDP server"),".")),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"You need to have ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/"},"NodeJS")," installed on your computer (",(0,a.kt)("strong",{parentName:"p"},"use NodeJS version 14"),")."),(0,a.kt)("p",null,"You also need ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/install/"},"Docker")," and ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Docker-compose")," installed on your machine."),(0,a.kt)("h2",{id:"initialize-your-ldp-server"},"Initialize your LDP server"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://moleculer.services/"},"Moleculer")," is a framework that facilitates the development of microservices that run by messages (and on different servers). It uses Node.js."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moleculerjs/moleculer-cli"},"moleculer-cli")," tool is a command line tool that allows you to initialize new Moleculer projects from templates."),(0,a.kt)("p",null,"First, you need to install the moleculer-cli tool globally.\nTo do so, open a terminal and runs the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g moleculer-cli\n")),(0,a.kt)("p",null,"Then, initialize a new project based on a SemApps template with this command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"moleculer init assemblee-virtuelle/semapps-template-ldp my-project\n")),(0,a.kt)("p",null,"Choose ",(0,a.kt)("inlineCode",{parentName:"p"},"yes")," to all questions ",(0,a.kt)("strong",{parentName:"p"},"except the one about WebACL authorizations"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"? Do you need a local instance of Jena Fuseki (with Docker)? Yes\n? Do you need a read-only SPARQL endpoint? Yes\n? Do you need WebACL (WAC) authorizations? No\nCreate 'my-project' folder...\n? Would you like to run 'npm install'? Yes\n\nRunning 'npm install'...\n")),(0,a.kt)("p",null,"You can now go to the newly-created directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd my-project\n")),(0,a.kt)("h3",{id:"launch-your-local-jena-fuseki-instance"},"Launch your local Jena Fuseki instance"),(0,a.kt)("p",null,"Jena Fuseki is a semantic triple store. It is where your app's data will be stored."),(0,a.kt)("p",null,'In the "my-project" directory, runs the following command :'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If you get this error message:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"ERROR: Couldn't connect to Docker daemon at http+docker://localhost - is it running?\nIf it's at a non-standard location, specify the URL with the DOCKER_HOST environment variable.\n")),(0,a.kt)("p",{parentName:"admonition"},"Run the following command (",(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/34532696/docker-compose-cant-connect-to-docker-daemon"},"taken from here"),"):"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"sudo chown $USER /var/run/docker.sock\n"))),(0,a.kt)("p",null,"Jena Fuseki is now available at the URL ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3030"},"http://localhost:3030"),"."),(0,a.kt)("p",null,"By default the login is ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," and the password is also ",(0,a.kt)("inlineCode",{parentName:"p"},"admin"),"."),(0,a.kt)("p",null,"There should be no dataset yet. It will be created when launching Moleculer."),(0,a.kt)("h3",{id:"run-moleculer-in-dev-mode"},"Run Moleculer in dev mode"),(0,a.kt)("p",null,"Now that your triplestore is ready, you can ",(0,a.kt)("strong",{parentName:"p"},"launch you LDP server"),"."),(0,a.kt)("p",null,"To do so, open another terminal and run the following command in your ",(0,a.kt)("inlineCode",{parentName:"p"},"my-project")," directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev\n")),(0,a.kt)("p",null,"Moleculer is in ",(0,a.kt)("a",{parentName:"p",href:"https://moleculer.services/docs/0.14/moleculer-repl.html"},"REPL mode"),".\nOnce it has finished starting, you can enter the command ",(0,a.kt)("inlineCode",{parentName:"p"},"services")," to check the available services."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(3697).Z,width:"583",height:"333"})),(0,a.kt)("p",null,"If you go to ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3030"},"http://localhost:3030"),", you should see a ",(0,a.kt)("inlineCode",{parentName:"p"},"localData")," dataset has been created."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(1678).Z,width:"1466",height:"382"})),(0,a.kt)("p",null,"Success ! Your LDP server is running correctly. Let's test it now."),(0,a.kt)("h2",{id:"testing-your-ldp-server"},"Testing your LDP server"),(0,a.kt)("p",null,"Now, it is time to test your LDP server, which means that you will try to update your database by using this LDP server and not Jena Fuseki."),(0,a.kt)("p",null,"The LDP service created a LDP container in the ",(0,a.kt)("inlineCode",{parentName:"p"},"/notes")," path. Indeed, if you go to ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3000"},"http://localhost:3000/notes"),", you should see this empty LDP container:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{ \n  "context": "http://localhost:3000/context.json",\n  "id": "http://localhost:3000/users",\n  "type": ["ldp:Container", "ldp:BasicContainer"],\n  "ldp:contains": []\n}\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"We recommend to use an extension like ",(0,a.kt)("a",{parentName:"p",href:"https://jsonview.com/"},"JSONView")," to your browser to see pretty-formatted JSON.")),(0,a.kt)("h3",{id:"add-data-to-the-ldp-server"},"Add data to the LDP server"),(0,a.kt)("p",null,"Now, let's try to add some data to our container. Post an ActivityStreams Note with a tool like ",(0,a.kt)("a",{parentName:"p",href:"https://insomnia.rest/"},"Insomnia"),", ",(0,a.kt)("a",{parentName:"p",href:"https://www.postman.com/downloads/"},"Postman")," or the ",(0,a.kt)("a",{parentName:"p",href:"https://addons.mozilla.org/fr/firefox/addon/restclient/"},"RESTClient add-on for Firefox"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'POST /notes HTTP/1.1\nHost: localhost:3000\nContent-Type: application/json\nAccept: */*\nContent-Length: 97\n{\n  "@context": "https://www.w3.org/ns/activitystreams",\n  "type": "Note",\n  "name": "My first note",\n  "content": "Hello world !"\n}\n')),(0,a.kt)("p",null,"Retrieve the ",(0,a.kt)("inlineCode",{parentName:"p"},"/notes")," LDP container:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /notes HTTP/1.1\nHost: localhost:3000\nAccept: application/ld+json\n")),(0,a.kt)("p",null,"You should get this result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "context": "http://localhost:3000/context.json",\n  "id": "http://localhost:3000/notes",\n  "type": ["ldp:Container", "ldp:BasicContainer"],\n  "ldp:contains": [\n    {\n      "id": "http://localhost:3000/notes/603288b18391d7738ebba0fe",\n      "type": "Note",\n      "name": "My first note",\n      "content": "Hello world !"\n    }\n  ]\n}\n')),(0,a.kt)("h3",{id:"verify-changes-on-jena-fuseki"},"Verify changes on Jena Fuseki"),(0,a.kt)("p",null,"To test if our LDP server is really working, you should check if the data has been added to our Jena Fuseki instance."),(0,a.kt)("p",null,"Go to ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3030/dataset.html"},"http://localhost:3030/dataset.html")," and make a SPARQL query to get all of your data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"SELECT ?subject ?predicate ?object\nWHERE {\n  ?subject ?predicate ?object\n}\n")),(0,a.kt)("p",null,"You should get the following result:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(2601).Z,width:"1127",height:"587"})),(0,a.kt)("p",null,"Your first note has been added to the database : the LDP server works!"))}m.isMDXComponent=!0},1678:function(e,t,n){t.Z=n.p+"assets/images/jenafuseki_localData-3322f1e6164246201d5589af24035de0.jpg"},3697:function(e,t,n){t.Z=n.p+"assets/images/moleculer-repl-ef23ae0e8706ba3f0d8c2b9ecedcdbb2.png"},2601:function(e,t,n){t.Z=n.p+"assets/images/query_result-4cbb2e2bc60126329f52d1c049f2be29.png"}}]);