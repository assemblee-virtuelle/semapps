"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1395],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6282:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),l=["components"],o={title:"Auth Provider"},p=void 0,s={unversionedId:"frontend/auth-provider",id:"frontend/auth-provider",title:"Auth Provider",description:"React-Admin use auth providers to authenticate users on",source:"@site/docs/frontend/auth-provider.md",sourceDirName:"frontend",slug:"/frontend/auth-provider",permalink:"/docs/frontend/auth-provider",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/frontend/auth-provider.md",tags:[],version:"current",frontMatter:{title:"Auth Provider"},sidebar:"frontend",previous:{title:"Data Model",permalink:"/docs/frontend/semantic-data-provider/data-model"},next:{title:"ActivityPub Components",permalink:"/docs/frontend/activitypub-components"}},d={},u=[{value:"Installation",id:"installation",level:2},{value:"Basic configuration",id:"basic-configuration",level:2},{value:"Advanced configuration",id:"advanced-configuration",level:2},{value:"<code>allowAnonymous</code>",id:"allowanonymous",level:3},{value:"<code>checkPermissions</code>",id:"checkpermissions",level:3},{value:"<code>checkUser</code>",id:"checkuser",level:3},{value:"Pages components",id:"pages-components",level:2},{value:"CreateWithPermissions",id:"createwithpermissions",level:3},{value:"EditWithPermissions",id:"editwithpermissions",level:3},{value:"ListWithPermissions",id:"listwithpermissions",level:3},{value:"ShowWithPermissions",id:"showwithpermissions",level:3},{value:"Other components",id:"other-components",level:2},{value:"AuthDialog",id:"authdialog",level:3},{value:"LocalLoginPage",id:"localloginpage",level:3},{value:"SsoLoginPage",id:"ssologinpage",level:3},{value:"Hooks",id:"hooks",level:2},{value:"useAgents",id:"useagents",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Return values",id:"return-values",level:4},{value:"useCheckAuthenticated",id:"usecheckauthenticated",level:3},{value:"Return values",id:"return-values-1",level:4},{value:"useCheckPermissions",id:"usecheckpermissions",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Return value",id:"return-value",level:4},{value:"useSignup",id:"usesignup",level:3}],m={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"React-Admin use ",(0,i.kt)("a",{parentName:"p",href:"https://marmelab.com/react-admin/doc/3.19/Authentication.html"},"auth providers")," to authenticate users on\nyour application. We have developped an Auth Provider which is specifically designed to connect to a SemApps-based\nserver. It works with ",(0,i.kt)("a",{parentName:"p",href:"../middleware/auth#oidc"},"OIDC"),", ",(0,i.kt)("a",{parentName:"p",href:"../middleware/auth#cas"},"Cas")," or ",(0,i.kt)("a",{parentName:"p",href:"../middleware/auth#local-accounts"},"local")," authentication."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @semapps/auth-provider\n")),(0,i.kt)("h2",{id:"basic-configuration"},"Basic configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Admin } from 'react-admin';\nimport { authProvider, SsoLoginPage } from '@semapps/auth-provider';\nimport dataProvider from './dataProvider.js';\n\nconst App = () => (\n  <Admin\n    authProvider={authProvider({ \n      dataProvider,\n      authType: 'sso' // or \"local\" or \"pod\"\n    })}\n    loginPage={SsoLoginPage} // Or you can use the LocalLoginPage\n  >\n    <Resource name=\"Project\" ... />\n    <Resource name=\"Organization\" ... />\n  </Admin>\n);\n")),(0,i.kt)("p",null,"See the ",(0,i.kt)("a",{parentName:"p",href:"https://marmelab.com/react-admin/Authentication.html"},"official React-Admin about authentication")," for more details."),(0,i.kt)("p",null,"You will also need to include the package-specific translations messages in React-Admin's ",(0,i.kt)("inlineCode",{parentName:"p"},"i18nProvider"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import polyglotI18nProvider from 'ra-i18n-polyglot';\nimport frenchMessages from 'ra-language-french';\nimport { frenchMessages as authFrenchMessages } from '@semapps/auth-provider';\n\nexport const i18nProvider = polyglotI18nProvider(\n  lang => ({\n    ...frenchMessages,\n    ...authFrenchMessages\n  }),\n  'fr'\n);\n")),(0,i.kt)("h2",{id:"advanced-configuration"},"Advanced configuration"),(0,i.kt)("h3",{id:"allowanonymous"},(0,i.kt)("inlineCode",{parentName:"h3"},"allowAnonymous")),(0,i.kt)("p",null,"By default your app will be accessible to anonymous users."),(0,i.kt)("p",null,"If you wish to force all users to login, you can pass a ",(0,i.kt)("inlineCode",{parentName:"p"},"allowAnonymous: false")," param to the auth provider."),(0,i.kt)("h3",{id:"checkpermissions"},(0,i.kt)("inlineCode",{parentName:"h3"},"checkPermissions")),(0,i.kt)("p",null,"If you want to check permissions based on WebACL, you need to set ",(0,i.kt)("inlineCode",{parentName:"p"},"checkPermissions: true"),"."),(0,i.kt)("p",null,"Additionally, you should use the ",(0,i.kt)("a",{parentName:"p",href:"#pages-components"},"page components")," below instead of React-Admin's default ",(0,i.kt)("inlineCode",{parentName:"p"},"Create"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Edit"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"List")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Show")," components."),(0,i.kt)("h3",{id:"checkuser"},(0,i.kt)("inlineCode",{parentName:"h3"},"checkUser")),(0,i.kt)("p",null,"If you only want certain types of users to access your app, you can pass a ",(0,i.kt)("inlineCode",{parentName:"p"},"checkUser")," function to the authProvider."),(0,i.kt)("p",null,"This function receives user data and must return true or false, depending on whether the user is granted access or not."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This ",(0,i.kt)("inlineCode",{parentName:"p"},"checkUser")," function is also available to any of your components using the React-Admin's ",(0,i.kt)("inlineCode",{parentName:"p"},"useAuthProvider")," hook.")),(0,i.kt)("h2",{id:"pages-components"},"Pages components"),(0,i.kt)("h3",{id:"createwithpermissions"},"CreateWithPermissions"),(0,i.kt)("p",null,"Same as React-Admin ",(0,i.kt)("a",{parentName:"p",href:"https://marmelab.com/react-admin/doc/3.19/CreateEdit.html"},"Create")," component, except:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It ensures the logged-in user has the right to create a new resource.")),(0,i.kt)("h3",{id:"editwithpermissions"},"EditWithPermissions"),(0,i.kt)("p",null,"Same as React-Admin ",(0,i.kt)("a",{parentName:"p",href:"https://marmelab.com/react-admin/doc/3.19/CreateEdit.html"},"Edit")," component, except:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It ensures the logged-in user has the right to edit the resource."),(0,i.kt)("li",{parentName:"ul"},"It displays the Permissions button (through an ",(0,i.kt)("inlineCode",{parentName:"li"},"EditActionsWithPermissions")," component which can be imported independently) if the logged-in user has ",(0,i.kt)("inlineCode",{parentName:"li"},"acl:Control")," right."),(0,i.kt)("li",{parentName:"ul"},"It does not show the delete button if user doesn't have a ",(0,i.kt)("inlineCode",{parentName:"li"},"acl:write")," right (through an ",(0,i.kt)("inlineCode",{parentName:"li"},"EditToolbarWithPermissions")," component which can be imported independently).")),(0,i.kt)("h3",{id:"listwithpermissions"},"ListWithPermissions"),(0,i.kt)("p",null,"Same as React-Admin ",(0,i.kt)("a",{parentName:"p",href:"https://marmelab.com/react-admin/doc/3.19/List.html#the-list-component"},"List")," component, except:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It displays the Permissions button (through a ",(0,i.kt)("inlineCode",{parentName:"li"},"ListActionsWithPermissions")," component which can be imported independently) if the logged-in user has ",(0,i.kt)("inlineCode",{parentName:"li"},"acl:Control")," right.")),(0,i.kt)("h3",{id:"showwithpermissions"},"ShowWithPermissions"),(0,i.kt)("p",null,"Same as React-Admin ",(0,i.kt)("a",{parentName:"p",href:"https://marmelab.com/react-admin/doc/3.19/Show.html#the-show-component"},"Show")," component, except:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It ensures the logged-in user has the right to view the resource"),(0,i.kt)("li",{parentName:"ul"},"It displays the Permissions button (through a ",(0,i.kt)("inlineCode",{parentName:"li"},"ShowActionsWithPermissions")," component which can be imported independently) if the logged-in user has ",(0,i.kt)("inlineCode",{parentName:"li"},"acl:Control")," right.")),(0,i.kt)("h2",{id:"other-components"},"Other components"),(0,i.kt)("h3",{id:"authdialog"},"AuthDialog"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const MyPage = () => {\n  const [openAuth, setOpenAuth] = useState(false);\n  return(\n    <>\n      <Button onClick={() => setOpenAuth(true)}>\n        Protected action\n      </Button>\n      <AuthDialog open={openAuth} onClose={() => setOpenAuth(false)} />\n    </>\n  );\n};\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"open")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},"True if the dialog is open")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onClose")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Function")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},"Function to close the dialog")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"redirect")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},"Current path"),(0,i.kt)("td",{parentName:"tr",align:null},"Path where to redirect after login")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"title")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},'"Login required"'),(0,i.kt)("td",{parentName:"tr",align:null},"Title of the dialog")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"message")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},'"Please login to continue"'),(0,i.kt)("td",{parentName:"tr",align:null},"Content of the dialog")))),(0,i.kt)("p",null,"All other props are passed to the underlying Material-UI ",(0,i.kt)("a",{parentName:"p",href:"https://v4.mui.com/api/dialog/"},"Dialog")," component."),(0,i.kt)("h3",{id:"localloginpage"},"LocalLoginPage"),(0,i.kt)("p",null,"Login/signup page to use with a ",(0,i.kt)("a",{parentName:"p",href:"../middleware/auth#local-accounts"},"local authentication"),". Include reset password feature."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"hasSignup")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"Set to false if you don't the user to be able to signup")))),(0,i.kt)("h3",{id:"ssologinpage"},"SsoLoginPage"),(0,i.kt)("p",null,"Login page to use with a ",(0,i.kt)("a",{parentName:"p",href:"../middleware/auth#oidc"},"SSO authentication")," (OIDC/Cas)."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"userResource")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},'"Person"'),(0,i.kt)("td",{parentName:"tr",align:null},"True if the dialog is open")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"text")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Element")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Text to show above the SSO button")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"propertiesExist")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Array")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"Properties to check after the user has been created. Useful when collections are added asynchronously")))),(0,i.kt)("h2",{id:"hooks"},"Hooks"),(0,i.kt)("h3",{id:"useagents"},"useAgents"),(0,i.kt)("p",null,"Return a list of WAC agents (users, groups or classes) based on the URI of a resource or a container."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { agents, addPermission, removePermission } = useAgents(uri);\n")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the resource or container")))),(0,i.kt)("h4",{id:"return-values"},"Return values"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"agents")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Array")),(0,i.kt)("td",{parentName:"tr",align:null},"Array of objects with ",(0,i.kt)("inlineCode",{parentName:"td"},"id"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"predicate")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"permissions"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"addPermission")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Function")),(0,i.kt)("td",{parentName:"tr",align:null},"Function to add a new permission")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"removePermission")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Function")),(0,i.kt)("td",{parentName:"tr",align:null},"Function to remove an existing permission")))),(0,i.kt)("h3",{id:"usecheckauthenticated"},"useCheckAuthenticated"),(0,i.kt)("p",null,"Return the identity of the logged-in user. If user is not logged, redirect to the login page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { identity, loading } = useCheckAuthenticated();\n")),(0,i.kt)("h4",{id:"return-values-1"},"Return values"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"identity")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:null},"Object returned by the auth provider's ",(0,i.kt)("inlineCode",{parentName:"td"},"getIdentity")," method")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"loading")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,i.kt)("td",{parentName:"tr",align:null},"True if the user data is loading")))),(0,i.kt)("h3",{id:"usecheckpermissions"},"useCheckPermissions"),(0,i.kt)("p",null,"Check if the logged-in user has the right to access the resource or container with a given mode."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { permissions } = useCheckPermissions(uri, mode, redirectUrl);\n")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the resource or container")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"mode")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"required")),(0,i.kt)("td",{parentName:"tr",align:null},'"list", "edit", "create" or "show"')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"redirectUrl")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},'"/"'),(0,i.kt)("td",{parentName:"tr",align:null},"Path to redirect to if the user doesn't have the required permissions")))),(0,i.kt)("h4",{id:"return-value"},"Return value"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"permissions")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:null},"Permissions of the logged-in user for the resource")))),(0,i.kt)("h3",{id:"usesignup"},"useSignup"),(0,i.kt)("p",null,"Return the ",(0,i.kt)("inlineCode",{parentName:"p"},"signup")," method of the auth provider. Used by the ",(0,i.kt)("a",{parentName:"p",href:"#localloginpage"},"LocalLoginPage"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const signup = useSignup();\n")))}c.isMDXComponent=!0}}]);