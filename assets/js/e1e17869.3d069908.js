"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9149],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},392:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var n=r(3117),a=r(102),i=(r(7294),r(3905)),l=["components"],o={title:"Core"},s=void 0,c={unversionedId:"middleware/core",id:"middleware/core",title:"Core",description:"This service allows you to easily configure standard SemApps services. It is offered as a convenience, but you can still create them individually.",source:"@site/docs/middleware/core.md",sourceDirName:"middleware",slug:"/middleware/core",permalink:"/semapps/docs/middleware/core",draft:!1,editUrl:"https://github.com/assemblee-virtuelle/semapps/edit/master/website/docs/middleware/core.md",tags:[],version:"current",frontMatter:{title:"Core"},sidebar:"middleware",previous:{title:"Introduction",permalink:"/semapps/docs/middleware/"},next:{title:"ActivityPub",permalink:"/semapps/docs/middleware/activitypub/"}},p={},u=[{value:"Sub-services",id:"sub-services",level:2},{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Setup the WebAclMiddleware",id:"setup-the-webaclmiddleware",level:3}],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This service allows you to easily configure standard SemApps services. It is offered as a convenience, but you can still create them individually."),(0,i.kt)("h2",{id:"sub-services"},"Sub-services"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"activitypub"},"ActivityPubService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://moleculer.services/docs/0.14/moleculer-web.html"},"ApiGateway")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"jsonld"},"JsonLdService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"ldp"},"LdpService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"signature"},"SignatureService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"sparql-endpoint"},"SparqlEndpointService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"triplestore"},"TripleStoreService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/semapps/docs/middleware/void"},"VoidService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"webacl"},"WebAclService")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"webfinger"},"WebfingerService"))),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add @semapps/core\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const path = require('path');\nconst { CoreService } = require('@semapps/core');\n\nmodule.exports = {\n  mixins: [CoreService],\n  settings: {\n    baseUrl: 'http://localhost:3000/',\n    baseDir: path.resolve(__dirname, '..'),\n    triplestore: {\n      url: 'http://localhost:3030/',\n      user: 'admin',\n      password: 'admin',\n      mainDataset: 'localData',\n    },\n    containers: [], // See the LdpService docs for the expected format\n    // Optional. If not set, default values will be used\n    jsonContext: null,\n    ontologies: null,\n  }\n};\n")),(0,i.kt)("p",null,"Additionally, you can pass custom configurations to the sub-services by using their name as a key (",(0,i.kt)("inlineCode",{parentName:"p"},"activitypub"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ldp"),", etc.).\nIf you do not wish not to instantiate a particular service, you can pass ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("h3",{id:"setup-the-webaclmiddleware"},"Setup the WebAclMiddleware"),(0,i.kt)("p",null,"Unless you disable the WebAclService, you will need to setup the WebAclMiddleware in your ",(0,i.kt)("inlineCode",{parentName:"p"},"moleculer.config.js")," file."),(0,i.kt)("p",null,"Please see the ",(0,i.kt)("a",{parentName:"p",href:"./webacl"},"WebAclService")," documentation for more information."))}m.isMDXComponent=!0}}]);